// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.
#ifndef __IManagedApplicationCorbaDef_hh__
#define __IManagedApplicationCorbaDef_hh__

#ifndef __CORBA_H_EXTERNAL_GUARD__
#include <omniORB4/CORBA.h>
#endif

#ifndef  USE_stub_in_nt_dll
# define USE_stub_in_nt_dll_NOT_DEFINED_IManagedApplicationCorbaDef
#endif
#ifndef  USE_core_stub_in_nt_dll
# define USE_core_stub_in_nt_dll_NOT_DEFINED_IManagedApplicationCorbaDef
#endif
#ifndef  USE_dyn_stub_in_nt_dll
# define USE_dyn_stub_in_nt_dll_NOT_DEFINED_IManagedApplicationCorbaDef
#endif






#ifdef USE_stub_in_nt_dll
# ifndef USE_core_stub_in_nt_dll
#  define USE_core_stub_in_nt_dll
# endif
# ifndef USE_dyn_stub_in_nt_dll
#  define USE_dyn_stub_in_nt_dll
# endif
#endif

#ifdef _core_attr
# error "A local CPP macro _core_attr has already been defined."
#else
# ifdef  USE_core_stub_in_nt_dll
#  define _core_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _core_attr
# endif
#endif

#ifdef _dyn_attr
# error "A local CPP macro _dyn_attr has already been defined."
#else
# ifdef  USE_dyn_stub_in_nt_dll
#  define _dyn_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _dyn_attr
# endif
#endif





_CORBA_MODULE TA_Base_Core

_CORBA_MODULE_BEG

#ifndef __TA__Base__Core_mIManagedApplicationCorbaDef__
#define __TA__Base__Core_mIManagedApplicationCorbaDef__

  class IManagedApplicationCorbaDef;
  class _objref_IManagedApplicationCorbaDef;
  class _impl_IManagedApplicationCorbaDef;
  
  typedef _objref_IManagedApplicationCorbaDef* IManagedApplicationCorbaDef_ptr;
  typedef IManagedApplicationCorbaDef_ptr IManagedApplicationCorbaDefRef;

  class IManagedApplicationCorbaDef_Helper {
  public:
    typedef IManagedApplicationCorbaDef_ptr _ptr_type;

    static _ptr_type _nil();
    static _CORBA_Boolean is_nil(_ptr_type);
    static void release(_ptr_type);
    static void duplicate(_ptr_type);
    static void marshalObjRef(_ptr_type, cdrStream&);
    static _ptr_type unmarshalObjRef(cdrStream&);
  };

  typedef _CORBA_ObjRef_Var<_objref_IManagedApplicationCorbaDef, IManagedApplicationCorbaDef_Helper> IManagedApplicationCorbaDef_var;
  typedef _CORBA_ObjRef_OUT_arg<_objref_IManagedApplicationCorbaDef,IManagedApplicationCorbaDef_Helper > IManagedApplicationCorbaDef_out;

#endif

  // interface IManagedApplicationCorbaDef
  class IManagedApplicationCorbaDef {
  public:
    // Declarations for this interface type.
    typedef IManagedApplicationCorbaDef_ptr _ptr_type;
    typedef IManagedApplicationCorbaDef_var _var_type;

    static _ptr_type _duplicate(_ptr_type);
    static _ptr_type _narrow(::CORBA::Object_ptr);
    static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);
    
    static _ptr_type _nil();

    static inline void _marshalObjRef(_ptr_type, cdrStream&);

    static inline _ptr_type _unmarshalObjRef(cdrStream& s) {
      omniObjRef* o = omniObjRef::_unMarshal(_PD_repoId,s);
      if (o)
        return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
      else
        return _nil();
    }

    static _core_attr const char* _PD_repoId;

    // Other IDL defined within this scope.
    enum EntityMessageType { All, RadioAgent, ControlStation /*, __max_EntityMessageType=0xffffffff */ };
    typedef EntityMessageType& EntityMessageType_out;

    static _dyn_attr const ::CORBA::TypeCode_ptr _tc_EntityMessageType;

    struct GXToTAMessage {
      typedef _CORBA_ConstrType_Variable_Var<GXToTAMessage> _var_type;

      
      EntityMessageType entityType;

      ::CORBA::String_member sourceSchematicID;

      ::CORBA::String_member sessionId;

      ::CORBA::String_member message;

    

      void operator>>= (cdrStream &) const;
      void operator<<= (cdrStream &);
    };

    typedef GXToTAMessage::_var_type GXToTAMessage_var;

    typedef _CORBA_ConstrType_Variable_OUT_arg< GXToTAMessage,GXToTAMessage_var > GXToTAMessage_out;

    static _dyn_attr const ::CORBA::TypeCode_ptr _tc_GXToTAMessage;

  
  };

  class _objref_IManagedApplicationCorbaDef :
    public virtual ::CORBA::Object,
    public virtual omniObjRef
  {
  public:
    

    inline _objref_IManagedApplicationCorbaDef()  { _PR_setobj(0); }  // nil
    _objref_IManagedApplicationCorbaDef(omniIOR*, omniIdentity*);

  protected:
    virtual ~_objref_IManagedApplicationCorbaDef();

    
  private:
    virtual void* _ptrToObjRef(const char*);

    _objref_IManagedApplicationCorbaDef(const _objref_IManagedApplicationCorbaDef&);
    _objref_IManagedApplicationCorbaDef& operator = (const _objref_IManagedApplicationCorbaDef&);
    // not implemented

    friend class IManagedApplicationCorbaDef;
  };

  class _pof_IManagedApplicationCorbaDef : public _OMNI_NS(proxyObjectFactory) {
  public:
    inline _pof_IManagedApplicationCorbaDef() : _OMNI_NS(proxyObjectFactory)(IManagedApplicationCorbaDef::_PD_repoId) {}
    virtual ~_pof_IManagedApplicationCorbaDef();

    virtual omniObjRef* newObjRef(omniIOR*,omniIdentity*);
    virtual _CORBA_Boolean is_a(const char*) const;
  };

  class _impl_IManagedApplicationCorbaDef :
    public virtual omniServant
  {
  public:
    virtual ~_impl_IManagedApplicationCorbaDef();

    
    
  public:  // Really protected, workaround for xlC
    virtual _CORBA_Boolean _dispatch(omniCallHandle&);

  private:
    virtual void* _ptrToInterface(const char*);
    virtual const char* _mostDerivedRepoId();
    
  };


  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_IManagedApplicationCorbaDef;

_CORBA_MODULE_END



_CORBA_MODULE POA_TA_Base_Core
_CORBA_MODULE_BEG

  class IManagedApplicationCorbaDef :
    public virtual TA_Base_Core::_impl_IManagedApplicationCorbaDef,
    public virtual ::PortableServer::ServantBase
  {
  public:
    virtual ~IManagedApplicationCorbaDef();

    inline ::TA_Base_Core::IManagedApplicationCorbaDef_ptr _this() {
      return (::TA_Base_Core::IManagedApplicationCorbaDef_ptr) _do_this(::TA_Base_Core::IManagedApplicationCorbaDef::_PD_repoId);
    }
  };

_CORBA_MODULE_END



_CORBA_MODULE OBV_TA_Base_Core
_CORBA_MODULE_BEG

_CORBA_MODULE_END





#undef _core_attr
#undef _dyn_attr

inline void operator >>=(TA_Base_Core::IManagedApplicationCorbaDef::EntityMessageType _e, cdrStream& s) {
  ::operator>>=((::CORBA::ULong)_e, s);
}

inline void operator <<= (TA_Base_Core::IManagedApplicationCorbaDef::EntityMessageType& _e, cdrStream& s) {
  ::CORBA::ULong _0RL_e;
  ::operator<<=(_0RL_e,s);
  if (_0RL_e <= TA_Base_Core::IManagedApplicationCorbaDef::ControlStation) {
    _e = (TA_Base_Core::IManagedApplicationCorbaDef::EntityMessageType) _0RL_e;
  }
  else {
    OMNIORB_THROW(MARSHAL,_OMNI_NS(MARSHAL_InvalidEnumValue),
                  (::CORBA::CompletionStatus)s.completion());
  }
}

void operator<<=(::CORBA::Any& _a, TA_Base_Core::IManagedApplicationCorbaDef::EntityMessageType _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, TA_Base_Core::IManagedApplicationCorbaDef::EntityMessageType& _s);

extern void operator<<=(::CORBA::Any& _a, const TA_Base_Core::IManagedApplicationCorbaDef::GXToTAMessage& _s);
extern void operator<<=(::CORBA::Any& _a, TA_Base_Core::IManagedApplicationCorbaDef::GXToTAMessage* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, TA_Base_Core::IManagedApplicationCorbaDef::GXToTAMessage*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const TA_Base_Core::IManagedApplicationCorbaDef::GXToTAMessage*& _sp);

void operator<<=(::CORBA::Any& _a, TA_Base_Core::IManagedApplicationCorbaDef_ptr _s);
void operator<<=(::CORBA::Any& _a, TA_Base_Core::IManagedApplicationCorbaDef_ptr* _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, TA_Base_Core::IManagedApplicationCorbaDef_ptr& _s);



inline void
TA_Base_Core::IManagedApplicationCorbaDef::_marshalObjRef(::TA_Base_Core::IManagedApplicationCorbaDef_ptr obj, cdrStream& s) {
  omniObjRef::_marshal(obj->_PR_getobj(),s);
}




#ifdef   USE_stub_in_nt_dll_NOT_DEFINED_IManagedApplicationCorbaDef
# undef  USE_stub_in_nt_dll
# undef  USE_stub_in_nt_dll_NOT_DEFINED_IManagedApplicationCorbaDef
#endif
#ifdef   USE_core_stub_in_nt_dll_NOT_DEFINED_IManagedApplicationCorbaDef
# undef  USE_core_stub_in_nt_dll
# undef  USE_core_stub_in_nt_dll_NOT_DEFINED_IManagedApplicationCorbaDef
#endif
#ifdef   USE_dyn_stub_in_nt_dll_NOT_DEFINED_IManagedApplicationCorbaDef
# undef  USE_dyn_stub_in_nt_dll
# undef  USE_dyn_stub_in_nt_dll_NOT_DEFINED_IManagedApplicationCorbaDef
#endif

#endif  // __IManagedApplicationCorbaDef_hh__

