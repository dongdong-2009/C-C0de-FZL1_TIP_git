// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.
#ifndef __IControlStationCorbaDef_hh__
#define __IControlStationCorbaDef_hh__

#ifndef __CORBA_H_EXTERNAL_GUARD__
#include <omniORB4/CORBA.h>
#endif

#ifndef  USE_stub_in_nt_dll
# define USE_stub_in_nt_dll_NOT_DEFINED_IControlStationCorbaDef
#endif
#ifndef  USE_core_stub_in_nt_dll
# define USE_core_stub_in_nt_dll_NOT_DEFINED_IControlStationCorbaDef
#endif
#ifndef  USE_dyn_stub_in_nt_dll
# define USE_dyn_stub_in_nt_dll_NOT_DEFINED_IControlStationCorbaDef
#endif






#ifdef USE_stub_in_nt_dll
# ifndef USE_core_stub_in_nt_dll
#  define USE_core_stub_in_nt_dll
# endif
# ifndef USE_dyn_stub_in_nt_dll
#  define USE_dyn_stub_in_nt_dll
# endif
#endif

#ifdef _core_attr
# error "A local CPP macro _core_attr has already been defined."
#else
# ifdef  USE_core_stub_in_nt_dll
#  define _core_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _core_attr
# endif
#endif

#ifdef _dyn_attr
# error "A local CPP macro _dyn_attr has already been defined."
#else
# ifdef  USE_dyn_stub_in_nt_dll
#  define _dyn_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _dyn_attr
# endif
#endif





_CORBA_MODULE TA_Base_Core

_CORBA_MODULE_BEG

#ifndef __TA__Base__Core_mIControlStationCorbaDef__
#define __TA__Base__Core_mIControlStationCorbaDef__

  class IControlStationCorbaDef;
  class _objref_IControlStationCorbaDef;
  class _impl_IControlStationCorbaDef;
  
  typedef _objref_IControlStationCorbaDef* IControlStationCorbaDef_ptr;
  typedef IControlStationCorbaDef_ptr IControlStationCorbaDefRef;

  class IControlStationCorbaDef_Helper {
  public:
    typedef IControlStationCorbaDef_ptr _ptr_type;

    static _ptr_type _nil();
    static _CORBA_Boolean is_nil(_ptr_type);
    static void release(_ptr_type);
    static void duplicate(_ptr_type);
    static void marshalObjRef(_ptr_type, cdrStream&);
    static _ptr_type unmarshalObjRef(cdrStream&);
  };

  typedef _CORBA_ObjRef_Var<_objref_IControlStationCorbaDef, IControlStationCorbaDef_Helper> IControlStationCorbaDef_var;
  typedef _CORBA_ObjRef_OUT_arg<_objref_IControlStationCorbaDef,IControlStationCorbaDef_Helper > IControlStationCorbaDef_out;

#endif

  // interface IControlStationCorbaDef
  class IControlStationCorbaDef {
  public:
    // Declarations for this interface type.
    typedef IControlStationCorbaDef_ptr _ptr_type;
    typedef IControlStationCorbaDef_var _var_type;

    static _ptr_type _duplicate(_ptr_type);
    static _ptr_type _narrow(::CORBA::Object_ptr);
    static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);
    
    static _ptr_type _nil();

    static inline void _marshalObjRef(_ptr_type, cdrStream&);

    static inline _ptr_type _unmarshalObjRef(cdrStream& s) {
      omniObjRef* o = omniObjRef::_unMarshal(_PD_repoId,s);
      if (o)
        return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
      else
        return _nil();
    }

    static _core_attr const char* _PD_repoId;

    // Other IDL defined within this scope.
    struct RECT {
      typedef _CORBA_ConstrType_Fix_Var<RECT> _var_type;

      
      ::CORBA::Long left;

      ::CORBA::Long top;

      ::CORBA::Long right;

      ::CORBA::Long bottom;

    

      void operator>>= (cdrStream &) const;
      void operator<<= (cdrStream &);
    };

    typedef RECT::_var_type RECT_var;

    typedef RECT& RECT_out;

    static _dyn_attr const ::CORBA::TypeCode_ptr _tc_RECT;

    struct TAToGXMessage {
      typedef _CORBA_ConstrType_Variable_Var<TAToGXMessage> _var_type;

      
      ::CORBA::String_member targetSessionID;

      ::CORBA::String_member targetSchematicID;

      ::CORBA::String_member sourceEntityName;

      ::CORBA::String_member message;

    

      void operator>>= (cdrStream &) const;
      void operator<<= (cdrStream &);
    };

    typedef TAToGXMessage::_var_type TAToGXMessage_var;

    typedef _CORBA_ConstrType_Variable_OUT_arg< TAToGXMessage,TAToGXMessage_var > TAToGXMessage_out;

    static _dyn_attr const ::CORBA::TypeCode_ptr _tc_TAToGXMessage;

    struct LaunchApplicationEvent {
      typedef _CORBA_ConstrType_Variable_Var<LaunchApplicationEvent> _var_type;

      
      ::CORBA::ULong locationKey;

      ::CORBA::ULong applicationType;

      ::CORBA::String_member runParameter;

    

      void operator>>= (cdrStream &) const;
      void operator<<= (cdrStream &);
    };

    typedef LaunchApplicationEvent::_var_type LaunchApplicationEvent_var;

    typedef _CORBA_ConstrType_Variable_OUT_arg< LaunchApplicationEvent,LaunchApplicationEvent_var > LaunchApplicationEvent_out;

    static _dyn_attr const ::CORBA::TypeCode_ptr _tc_LaunchApplicationEvent;

    struct LaunchApplicationACKEvent {
      typedef _CORBA_ConstrType_Fix_Var<LaunchApplicationACKEvent> _var_type;

      
      ::CORBA::ULong locationKey;

      ::CORBA::ULong applicationType;

      ::CORBA::Boolean bSuccess;

    

      void operator>>= (cdrStream &) const;
      void operator<<= (cdrStream &);
    };

    typedef LaunchApplicationACKEvent::_var_type LaunchApplicationACKEvent_var;

    typedef LaunchApplicationACKEvent& LaunchApplicationACKEvent_out;

    static _dyn_attr const ::CORBA::TypeCode_ptr _tc_LaunchApplicationACKEvent;

    class ApplicationException : public ::CORBA::UserException {
    public:
      
      

      inline ApplicationException() {
        pd_insertToAnyFn    = insertToAnyFn;
        pd_insertToAnyFnNCP = insertToAnyFnNCP;
      }
      ApplicationException(const ApplicationException&);
      
      ApplicationException& operator=(const ApplicationException&);
      virtual ~ApplicationException();
      virtual void _raise() const;
      static ApplicationException* _downcast(::CORBA::Exception*);
      static const ApplicationException* _downcast(const ::CORBA::Exception*);
      static inline ApplicationException* _narrow(::CORBA::Exception* _e) {
        return _downcast(_e);
      }
      
      inline void operator>>=(cdrStream&) const { }
      inline void operator<<=(cdrStream&) { }

      static _core_attr insertExceptionToAny    insertToAnyFn;
      static _core_attr insertExceptionToAnyNCP insertToAnyFnNCP;

      virtual ::CORBA::Exception* _NP_duplicate() const;

      static _core_attr const char* _PD_repoId;
      static _core_attr const char* _PD_typeId;

    private:
      virtual const char* _NP_typeId() const;
      virtual const char* _NP_repoId(int*) const;
      virtual void _NP_marshal(cdrStream&) const;
    };

    static _dyn_attr const ::CORBA::TypeCode_ptr _tc_ApplicationException;

  
  };

  class _objref_IControlStationCorbaDef :
    public virtual ::CORBA::Object,
    public virtual omniObjRef
  {
  public:
    void launchAnApplication(::CORBA::ULong appType, const char* extraCommandLine, ::CORBA::ULong posFlag, ::CORBA::ULong alignFlag, const ::TA_Base_Core::IControlStationCorbaDef::RECT& objectDim, const ::TA_Base_Core::IControlStationCorbaDef::RECT& boundaryDim);
    IControlStationCorbaDef::RECT getRect(::CORBA::ULong targetScreen, ::CORBA::ULong targetArea, ::CORBA::Long val);
    void launchDisplay(const char* display, const char* asset, ::CORBA::Long leftPosition);
    void poll();

    inline _objref_IControlStationCorbaDef()  { _PR_setobj(0); }  // nil
    _objref_IControlStationCorbaDef(omniIOR*, omniIdentity*);

  protected:
    virtual ~_objref_IControlStationCorbaDef();

    
  private:
    virtual void* _ptrToObjRef(const char*);

    _objref_IControlStationCorbaDef(const _objref_IControlStationCorbaDef&);
    _objref_IControlStationCorbaDef& operator = (const _objref_IControlStationCorbaDef&);
    // not implemented

    friend class IControlStationCorbaDef;
  };

  class _pof_IControlStationCorbaDef : public _OMNI_NS(proxyObjectFactory) {
  public:
    inline _pof_IControlStationCorbaDef() : _OMNI_NS(proxyObjectFactory)(IControlStationCorbaDef::_PD_repoId) {}
    virtual ~_pof_IControlStationCorbaDef();

    virtual omniObjRef* newObjRef(omniIOR*,omniIdentity*);
    virtual _CORBA_Boolean is_a(const char*) const;
  };

  class _impl_IControlStationCorbaDef :
    public virtual omniServant
  {
  public:
    virtual ~_impl_IControlStationCorbaDef();

    virtual void launchAnApplication(::CORBA::ULong appType, const char* extraCommandLine, ::CORBA::ULong posFlag, ::CORBA::ULong alignFlag, const ::TA_Base_Core::IControlStationCorbaDef::RECT& objectDim, const ::TA_Base_Core::IControlStationCorbaDef::RECT& boundaryDim) = 0;
    virtual IControlStationCorbaDef::RECT getRect(::CORBA::ULong targetScreen, ::CORBA::ULong targetArea, ::CORBA::Long val) = 0;
    virtual void launchDisplay(const char* display, const char* asset, ::CORBA::Long leftPosition) = 0;
    virtual void poll() = 0;
    
  public:  // Really protected, workaround for xlC
    virtual _CORBA_Boolean _dispatch(omniCallHandle&);

  private:
    virtual void* _ptrToInterface(const char*);
    virtual const char* _mostDerivedRepoId();
    
  };


  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_IControlStationCorbaDef;

_CORBA_MODULE_END



_CORBA_MODULE POA_TA_Base_Core
_CORBA_MODULE_BEG

  class IControlStationCorbaDef :
    public virtual TA_Base_Core::_impl_IControlStationCorbaDef,
    public virtual ::PortableServer::ServantBase
  {
  public:
    virtual ~IControlStationCorbaDef();

    inline ::TA_Base_Core::IControlStationCorbaDef_ptr _this() {
      return (::TA_Base_Core::IControlStationCorbaDef_ptr) _do_this(::TA_Base_Core::IControlStationCorbaDef::_PD_repoId);
    }
  };

_CORBA_MODULE_END



_CORBA_MODULE OBV_TA_Base_Core
_CORBA_MODULE_BEG

_CORBA_MODULE_END





#undef _core_attr
#undef _dyn_attr

extern void operator<<=(::CORBA::Any& _a, const TA_Base_Core::IControlStationCorbaDef::RECT& _s);
extern void operator<<=(::CORBA::Any& _a, TA_Base_Core::IControlStationCorbaDef::RECT* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, TA_Base_Core::IControlStationCorbaDef::RECT*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const TA_Base_Core::IControlStationCorbaDef::RECT*& _sp);

extern void operator<<=(::CORBA::Any& _a, const TA_Base_Core::IControlStationCorbaDef::TAToGXMessage& _s);
extern void operator<<=(::CORBA::Any& _a, TA_Base_Core::IControlStationCorbaDef::TAToGXMessage* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, TA_Base_Core::IControlStationCorbaDef::TAToGXMessage*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const TA_Base_Core::IControlStationCorbaDef::TAToGXMessage*& _sp);

extern void operator<<=(::CORBA::Any& _a, const TA_Base_Core::IControlStationCorbaDef::LaunchApplicationEvent& _s);
extern void operator<<=(::CORBA::Any& _a, TA_Base_Core::IControlStationCorbaDef::LaunchApplicationEvent* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, TA_Base_Core::IControlStationCorbaDef::LaunchApplicationEvent*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const TA_Base_Core::IControlStationCorbaDef::LaunchApplicationEvent*& _sp);

extern void operator<<=(::CORBA::Any& _a, const TA_Base_Core::IControlStationCorbaDef::LaunchApplicationACKEvent& _s);
extern void operator<<=(::CORBA::Any& _a, TA_Base_Core::IControlStationCorbaDef::LaunchApplicationACKEvent* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, TA_Base_Core::IControlStationCorbaDef::LaunchApplicationACKEvent*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const TA_Base_Core::IControlStationCorbaDef::LaunchApplicationACKEvent*& _sp);

void operator<<=(::CORBA::Any& _a, const TA_Base_Core::IControlStationCorbaDef::ApplicationException& _s);
void operator<<=(::CORBA::Any& _a, const TA_Base_Core::IControlStationCorbaDef::ApplicationException* _sp);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const TA_Base_Core::IControlStationCorbaDef::ApplicationException*& _sp);

void operator<<=(::CORBA::Any& _a, TA_Base_Core::IControlStationCorbaDef_ptr _s);
void operator<<=(::CORBA::Any& _a, TA_Base_Core::IControlStationCorbaDef_ptr* _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, TA_Base_Core::IControlStationCorbaDef_ptr& _s);



inline void
TA_Base_Core::IControlStationCorbaDef::_marshalObjRef(::TA_Base_Core::IControlStationCorbaDef_ptr obj, cdrStream& s) {
  omniObjRef::_marshal(obj->_PR_getobj(),s);
}




#ifdef   USE_stub_in_nt_dll_NOT_DEFINED_IControlStationCorbaDef
# undef  USE_stub_in_nt_dll
# undef  USE_stub_in_nt_dll_NOT_DEFINED_IControlStationCorbaDef
#endif
#ifdef   USE_core_stub_in_nt_dll_NOT_DEFINED_IControlStationCorbaDef
# undef  USE_core_stub_in_nt_dll
# undef  USE_core_stub_in_nt_dll_NOT_DEFINED_IControlStationCorbaDef
#endif
#ifdef   USE_dyn_stub_in_nt_dll_NOT_DEFINED_IControlStationCorbaDef
# undef  USE_dyn_stub_in_nt_dll
# undef  USE_dyn_stub_in_nt_dll_NOT_DEFINED_IControlStationCorbaDef
#endif

#endif  // __IControlStationCorbaDef_hh__

