/**
  * The source code in this file is the property of 
  * Combuilder PTE LTD and is not for redistribution
  * in any form.
  *
  * Source:   $File: //depot/3001_TIP_NEW/TA_BASE/transactive/core/event/IDL/src/EventAgentCorbaDef.idl $
  * @author:  Noel R. Tajanlangit
  * @version: $Revision: #1 $
  *
  * Last modification: $DateTime: 2012/10/04 14:20:17 $
  * Last modified by:  $Author: lu.xiangmei $
  * 
  * This is the interface definition for Event Agent
  */


#if !defined(__EVENT_AGENT_CORBA_DEF_INCLUDED__)
#define __EVENT_AGENT_CORBA_DEF_INCLUDED__

#include "core/event/IDL/src/EventSyncCorbaDef.idl"
#include "core/event/IDL/src/EventDetailCorbaDef.idl"
#include "core/exceptions/IDL/src/CommonExceptionsCorbaDef.idl"


module TA_Base_Core
{
	
	interface EventAgentCorbaDef
	{
		exception EventAgentException
		{
			string reason;
		};

		exception EventIDNotFoundException
		{
			string reason;
		};

		// ESA inteface Methods

		/**
          * submitEvent
          *
          * This method allows client submit a single event message.
          *
          * @param The eventData
          */
		void submitEvent( in EventInfoCorbaDef p_eventData )
			raises ( OperationModeException, EventAgentException );

		/**
          * submitEvents
          *
          * This method allows client submit a batch of events.
          *
          * @param The eventData sequence
          */
		void submitEvents( in EventInfoSequence p_eventDataSeq )
			raises ( OperationModeException, EventAgentException );

		/**
          * submitEvents
          *
          * This method allows client submit a batch of events.
          *
          * @param The eventData sequence
          */
		void submitEventsEx( in EvDataPkgCorbaDef p_eventDataPkg, in unsigned long p_ulSourceLoc )
			raises ( OperationModeException, EventAgentException );

		// EV interface Methods

		/**
          * getAllEvents
          *
          * This method allows client retreive all existing events from the agents cache.
          *
          * @param session ID
          */
		EvDataPkgCorbaDef getAllEvents( in string sessionID )
			raises ( OperationModeException );

		/**
          * getLatestEvents
          *
          * This method allows client to retreive the lastest events starting from the eventID position
		  * in the cache sorted by datetime.
          *
          * @param The event ID of the most recent event from the client
		  * @param The session ID
          */
		EvDataPkgCorbaDef getLatestEvents ( in string eventID, in string sessionID )
			raises ( OperationModeException, AccessDeniedException, EventIDNotFoundException, EventAgentException );

		/**
          * getRelatedEvents
          *
          * This method allows client to retreive the related events based on the alarm ID.
          *
          * @param The alarm ID
		  * @param The session ID
          */
		EvDataPkgCorbaDef getRelatedEvents( in string alarmID, in string sessionID )
			raises ( OperationModeException, AccessDeniedException, EventAgentException );
	
		/**
          * getSyncData
          *
          * This method allows monitor agent to retrieve data which were not synchronized.
          *
          * @param The latest event ID from the monitor agent
          */
		EventSyncCorbaDef getSyncData(in string p_eventID)
			raises ( OperationModeException, EventIDNotFoundException, EventAgentException );

		/**
          * checkStatus
          *
          * This method allows client to check the agents status.
          *
          * @param: none
          */
		boolean checkStatus( )
			raises ( OperationModeException );


		/**
          * getTopEvents
          *
          * This method allows client to retreive the lastest N events based on the size specified
		  * in the paramter.
          *
          * @param The size of the events required by the client
		  * @param The session ID
          */
		EvDataPkgCorbaDef getTopEvents ( in unsigned long p_ulEventSize, in string sessionID )
			raises ( OperationModeException, AccessDeniedException, EventAgentException );


	}; // interface EventAgentCorbaDef

}; // module TA_Base_Core

#endif // __EVENT_AGENT_CORBA_DEF_INCLUDED__