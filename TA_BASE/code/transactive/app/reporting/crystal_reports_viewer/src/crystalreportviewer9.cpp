/**
  * The source code in this file is the property of
  * Ripple Systems and is not for redistribution
  * in any form.
  *
  * Source:   $File: //depot/GZL6_TIP/TA_BASE/transactive/app/reporting/crystal_reports_viewer/src/crystalreportviewer9.cpp $
  * @author:  Ripple
  * @version: $Revision: #1 $
  *
  * Last modification: $DateTime: 2012/06/12 13:35:44 $
  * Last modified by:  $Author: builder $
  *
  */
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

#include "resource.h"
#include "stdafx.h"
#include "crystalreportviewer9.h"

// Dispatch interfaces referenced by this interface
#include "CRVTrackCursorInfo.h"
#include "core/utilities/src/DebugUtil.h"
/////////////////////////////////////////////////////////////////////////////
// CCrystalReportViewer9

IMPLEMENT_DYNCREATE(CCrystalReportViewer9, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CCrystalReportViewer9 properties

/////////////////////////////////////////////////////////////////////////////
// CCrystalReportViewer9 operations

LPUNKNOWN CCrystalReportViewer9::GetReportSource()
{
	LPUNKNOWN result;
	InvokeHelper(0xfa, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&result, NULL);
	return result;
}

void CCrystalReportViewer9::SetReportSource(LPUNKNOWN newValue)
{
	static BYTE parms[] =
		VTS_UNKNOWN;
	InvokeHelper(0xfa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

BOOL CCrystalReportViewer9::GetDisplayGroupTree()
{
	BOOL result;
	InvokeHelper(0xfb, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CCrystalReportViewer9::SetDisplayGroupTree(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xfb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CCrystalReportViewer9::GetDisplayToolbar()
{
	BOOL result;
	InvokeHelper(0xfc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CCrystalReportViewer9::SetDisplayToolbar(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xfc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CCrystalReportViewer9::GetEnableGroupTree()
{
	BOOL result;
	InvokeHelper(0xfd, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CCrystalReportViewer9::SetEnableGroupTree(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xfd, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CCrystalReportViewer9::GetEnableNavigationControls()
{
	BOOL result;
	InvokeHelper(0xfe, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CCrystalReportViewer9::SetEnableNavigationControls(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xfe, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CCrystalReportViewer9::GetEnableStopButton()
{
	BOOL result;
	InvokeHelper(0xff, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CCrystalReportViewer9::SetEnableStopButton(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xff, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CCrystalReportViewer9::GetEnablePrintButton()
{
	BOOL result;
	InvokeHelper(0x100, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CCrystalReportViewer9::SetEnablePrintButton(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x100, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CCrystalReportViewer9::GetEnableZoomControl()
{
	BOOL result;
	InvokeHelper(0x101, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CCrystalReportViewer9::SetEnableZoomControl(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x101, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CCrystalReportViewer9::GetEnableCloseButton()
{
	BOOL result;
	InvokeHelper(0x102, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CCrystalReportViewer9::SetEnableCloseButton(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x102, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CCrystalReportViewer9::GetEnableProgressControl()
{
	BOOL result;
	InvokeHelper(0x103, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CCrystalReportViewer9::SetEnableProgressControl(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x103, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CCrystalReportViewer9::GetEnableSearchControl()
{
	BOOL result;
	InvokeHelper(0x104, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CCrystalReportViewer9::SetEnableSearchControl(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x104, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CCrystalReportViewer9::GetEnableRefreshButton()
{
	BOOL result;
	InvokeHelper(0x105, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CCrystalReportViewer9::SetEnableRefreshButton(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x105, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CCrystalReportViewer9::GetEnableDrillDown()
{
	BOOL result;
	InvokeHelper(0x106, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CCrystalReportViewer9::SetEnableDrillDown(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x106, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CCrystalReportViewer9::GetEnableAnimationCtrl()
{
	BOOL result;
	InvokeHelper(0x107, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CCrystalReportViewer9::SetEnableAnimationCtrl(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x107, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CCrystalReportViewer9::GetEnableSelectExpertButton()
{
	BOOL result;
	InvokeHelper(0x108, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CCrystalReportViewer9::SetEnableSelectExpertButton(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x108, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

void CCrystalReportViewer9::ViewReport()
{
	InvokeHelper(0x109, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

BOOL CCrystalReportViewer9::GetEnableToolbar()
{
	BOOL result;
	InvokeHelper(0x154, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CCrystalReportViewer9::SetEnableToolbar(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x154, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CCrystalReportViewer9::GetDisplayBorder()
{
	BOOL result;
	InvokeHelper(0x155, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CCrystalReportViewer9::SetDisplayBorder(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x155, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CCrystalReportViewer9::GetDisplayTabs()
{
	BOOL result;
	InvokeHelper(0x156, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CCrystalReportViewer9::SetDisplayTabs(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x156, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CCrystalReportViewer9::GetDisplayBackgroundEdge()
{
	BOOL result;
	InvokeHelper(0x157, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CCrystalReportViewer9::SetDisplayBackgroundEdge(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x157, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

CCRVTrackCursorInfo CCrystalReportViewer9::GetTrackCursorInfo()
{
	LPDISPATCH pDispatch;
	InvokeHelper(0x159, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&pDispatch, NULL);
	return CCRVTrackCursorInfo(pDispatch);
}

short CCrystalReportViewer9::GetActiveViewIndex()
{
	short result;
	InvokeHelper(0x15a, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

short CCrystalReportViewer9::GetViewCount()
{
	short result;
	InvokeHelper(0x15b, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CCrystalReportViewer9::ActivateView(const VARIANT& Index)
{
	static BYTE parms[] =
		VTS_VARIANT;
	InvokeHelper(0x15c, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 &Index);
}

void CCrystalReportViewer9::AddView(const VARIANT& GroupPath)
{
	static BYTE parms[] =
		VTS_VARIANT;
	InvokeHelper(0x15d, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 &GroupPath);
}

void CCrystalReportViewer9::CloseView(const VARIANT& Index)
{
	static BYTE parms[] =
		VTS_VARIANT;
	InvokeHelper(0x15e, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 &Index);
}

VARIANT CCrystalReportViewer9::GetViewPath(short Index)
{
	VARIANT result;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x15f, DISPATCH_METHOD, VT_VARIANT, (void*)&result, parms,
		Index);
	return result;
}

void CCrystalReportViewer9::PrintReport()
{
	InvokeHelper(0x160, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CCrystalReportViewer9::Refresh()
{
	InvokeHelper(0x161, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CCrystalReportViewer9::SearchForText(LPCTSTR Text)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x162, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Text);
}

void CCrystalReportViewer9::ShowFirstPage()
{
	InvokeHelper(0x163, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CCrystalReportViewer9::ShowNextPage()
{
	InvokeHelper(0x164, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CCrystalReportViewer9::ShowPreviousPage()
{
	InvokeHelper(0x165, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CCrystalReportViewer9::ShowLastPage()
{
	InvokeHelper(0x166, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CCrystalReportViewer9::ShowNthPage(short PageNumber)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x167, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 PageNumber);
}

void CCrystalReportViewer9::Zoom(short ZoomLevel)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x168, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 ZoomLevel);
}

long CCrystalReportViewer9::GetCurrentPageNumber()
{
	long result;
	InvokeHelper(0x169, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

void CCrystalReportViewer9::ShowGroup(const VARIANT& GroupPath)
{
	static BYTE parms[] =
		VTS_VARIANT;
	InvokeHelper(0x16a, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 &GroupPath);
}

BOOL CCrystalReportViewer9::GetIsBusy()
{
	BOOL result;
	InvokeHelper(0x16b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CCrystalReportViewer9::GetEnablePopupMenu()
{
	BOOL result;
	InvokeHelper(0x16c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CCrystalReportViewer9::SetEnablePopupMenu(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x16c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CCrystalReportViewer9::GetEnableExportButton()
{
	BOOL result;
	InvokeHelper(0x16d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CCrystalReportViewer9::SetEnableExportButton(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x16d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CCrystalReportViewer9::GetEnableSearchExpertButton()
{
	BOOL result;
	InvokeHelper(0x16f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CCrystalReportViewer9::SetEnableSearchExpertButton(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x16f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

void CCrystalReportViewer9::SearchByFormula(LPCTSTR formula)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x170, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 formula);
}

CString CCrystalReportViewer9::GetViewName(BSTR* pTabName)
{
	CString result;
	static BYTE parms[] =
		VTS_PBSTR;
	InvokeHelper(0x171, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		pTabName);
	return result;
}

BOOL CCrystalReportViewer9::GetEnableHelpButton()
{
	BOOL result;
	InvokeHelper(0x172, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CCrystalReportViewer9::SetEnableHelpButton(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x172, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

VARIANT CCrystalReportViewer9::GetGroup()
{
	VARIANT result;
	InvokeHelper(0x190, DISPATCH_METHOD, VT_VARIANT, (void*)&result, NULL);
	return result;
}

void CCrystalReportViewer9::GetLastPageNumber(long* pageN, BOOL* lastPageKnown)
{
	static BYTE parms[] =
		VTS_PI4 VTS_PBOOL;
	InvokeHelper(0x191, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 pageN, lastPageKnown);
}

void CCrystalReportViewer9::RefreshEx(BOOL refreshServerData)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x192, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 refreshServerData);
}

BOOL CCrystalReportViewer9::GetLaunchHTTPHyperlinksInNewBrowser()
{
	BOOL result;
	InvokeHelper(0x1f4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CCrystalReportViewer9::SetLaunchHTTPHyperlinksInNewBrowser(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x1f4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}
//BEGIN_EVENTSINK_MAP(CCrystalReportViewer9, CWnd)
//	ON_EVENT(CCrystalReportViewer9, IDC_CRVIEWER1, 424, CCrystalReportViewer9::OnReportSourceErrorCrviewer1, VTS_BSTR VTS_I4 VTS_PBOOL)
//END_EVENTSINK_MAP()

//void CCrystalReportViewer9::OnReportSourceErrorCrviewer1(LPCTSTR errorMsg, long errorCode, BOOL* UseDefault)
//{
//	LOG_GENERIC(SourceInfo,TA_Base_Core::DebugUtil::DebugInfo,"On CCrystalReportViewer9, errorCode = %ld", errorCode);
//	// TODO: Add your message handler code here
//	if( errorCode == -2147189180 )
//	{
//		// Do nothing except write log
//		*UseDefault = FALSE;
//		LOG_GENERIC(SourceInfo,TA_Base_Core::DebugUtil::DebugDebug,"User cancel open report file...");
//	}
//}
