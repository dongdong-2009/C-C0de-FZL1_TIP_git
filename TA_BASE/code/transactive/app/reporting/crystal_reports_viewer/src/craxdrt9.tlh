// Created by Microsoft (R) C/C++ Compiler Version 12.00.8447.0 (56ac223b).
//
// craxdrt9.tlh
//
// C++ source equivalent of Win32 type library ..\\dlls\\craxdrt9.dll
// compiler-generated file created 12/19/03 at 09:35:16 - DO NOT EDIT!

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

//
// Forward references and typedefs
//

struct /* coclass */ Report;
struct __declspec(uuid("af376800-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IReport;
struct __declspec(uuid("af376803-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IAreas;
struct __declspec(uuid("af376805-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IArea;
struct __declspec(uuid("af376804-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ ISections;
struct __declspec(uuid("af376806-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ ISection;
struct __declspec(uuid("af376807-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IReportObjects;
struct __declspec(uuid("af376809-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IFieldObject;
struct __declspec(uuid("af37680c-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ ITextObject;
struct __declspec(uuid("af37680b-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IFieldElements;
struct __declspec(uuid("af37680a-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IFieldElement;
struct __declspec(uuid("af37680d-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IFieldDefinition;
typedef enum __MIDL___MIDL_itf_crvb60r_0232_0001 CRFieldValueType;
struct __declspec(uuid("af376827-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IBlobFieldObject;
struct __declspec(uuid("af37680e-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IDatabaseFieldDefinition;
struct __declspec(uuid("af376810-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ ISubreportObject;
struct __declspec(uuid("af37684e-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ ISubreportLinks;
struct __declspec(uuid("af37684d-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ ISubreportLink;
struct __declspec(uuid("af376828-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ ILineObject;
struct __declspec(uuid("af376829-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IBoxObject;
struct __declspec(uuid("af37682a-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ ICrossTabObject;
struct __declspec(uuid("af376852-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IObjectSummaryFieldDefinitions;
struct __declspec(uuid("af376815-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ ISummaryFieldDefinition;
struct __declspec(uuid("af376808-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IReportObject;
struct __declspec(uuid("af37684f-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ ICrossTabGroups;
struct __declspec(uuid("af376850-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ ICrossTabGroup;
struct __declspec(uuid("af376826-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ ICROleObject;
struct __declspec(uuid("af376824-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IGraphObject;
struct __declspec(uuid("af376851-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IFieldDefinitions;
struct __declspec(uuid("af376818-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IDatabase;
struct __declspec(uuid("af376819-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IDatabaseTables;
struct __declspec(uuid("af37681a-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IDatabaseTable;
struct __declspec(uuid("af37681d-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IDatabaseFieldDefinitions;
struct __declspec(uuid("af376860-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ INameValuePairs;
struct __declspec(uuid("af37681b-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ ITableLinks;
struct __declspec(uuid("af37681c-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ ITableLink;
struct __declspec(uuid("af37681e-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IFormulaFieldDefinitions;
struct __declspec(uuid("af37680f-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IFormulaFieldDefinition;
struct __declspec(uuid("af37681f-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IParameterFieldDefinitions;
struct __declspec(uuid("af376812-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IParameterFieldDefinition;
struct __declspec(uuid("af376820-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IGroupNameFieldDefinitions;
struct __declspec(uuid("af376813-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IGroupNameFieldDefinition;
struct __declspec(uuid("af376821-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ ISummaryFieldDefinitions;
struct __declspec(uuid("af37682b-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IPageEngine;
struct __declspec(uuid("af37682c-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IPageGenerator;
struct __declspec(uuid("af37682d-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IPages;
struct __declspec(uuid("af37682e-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IPage;
struct __declspec(uuid("af37682f-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IExportOptions;
struct __declspec(uuid("af376830-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IApplication;
struct __declspec(uuid("af376831-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ ISortFields;
struct __declspec(uuid("af376832-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ ISortField;
struct __declspec(uuid("af376833-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IPrintingStatus;
struct __declspec(uuid("af376822-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IRunningTotalFieldDefinitions;
struct __declspec(uuid("af376816-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IRunningTotalFieldDefinition;
struct __declspec(uuid("af376823-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ ISQLExpressionFieldDefinitions;
struct __declspec(uuid("af376817-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ ISQLExpressionFieldDefinition;
struct __declspec(uuid("af37685c-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IReportAlerts;
struct __declspec(uuid("af37685b-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IReportAlert;
struct __declspec(uuid("af37685e-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IReportAlertInstances;
struct __declspec(uuid("af37685d-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IReportAlertInstance;
struct __declspec(uuid("3dcc8fb4-c434-11d1-a817-00a0c92784cd"))
/* interface */ ICrystalReportSource;
struct __declspec(uuid("3dcc8fb5-c434-11d1-a817-00a0c92784cd"))
/* interface */ ICrystalReportProperties;
struct __declspec(uuid("6876d971-f0f2-11d1-bedf-00a0c95a6a5c"))
/* interface */ ICrystalReportSourceProperties;
struct __declspec(uuid("b4742013-45a6-11d1-abec-00a0c9274b91"))
/* interface */ ICrystalReportPrinterPort;
struct __declspec(uuid("b4742143-45a6-11d1-abec-00a0c9274b91"))
/* interface */ ICrystalReportPrinterPortEx;
struct __declspec(uuid("3dcc8fb3-c434-11d1-a817-00a0c92784cd"))
/* interface */ ICrystalReportSourceEvents;
struct __declspec(uuid("af376802-6120-4e28-96dd-63fd2dc27b7a"))
/* dispinterface */ IReportEvent;
struct __declspec(uuid("bd10a9c0-07cc-11d2-beff-00a0c95a6a5c"))
/* interface */ ICrystalReportExport;
struct __declspec(uuid("4d773761-0ad4-11d2-bf01-00a0c95a6a5c"))
/* interface */ ICrystalReportExportEvents;
struct /* coclass */ Areas;
struct /* coclass */ Sections;
struct /* coclass */ Area;
struct /* coclass */ Section;
struct __declspec(uuid("af37684b-6120-4e28-96dd-63fd2dc27b7a"))
/* dispinterface */ ISectionEvent;
struct /* coclass */ ReportObjects;
struct /* coclass */ FieldObject;
struct /* coclass */ TextObject;
struct /* coclass */ SubreportObject;
struct /* coclass */ DatabaseFieldDefinition;
struct /* coclass */ FormulaFieldDefinition;
struct /* coclass */ ParameterFieldDefinition;
struct /* coclass */ GroupNameFieldDefinition;
struct /* coclass */ SpecialVarFieldDefinition;
struct __declspec(uuid("af376814-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ ISpecialVarFieldDefinition;
struct /* coclass */ SummaryFieldDefinition;
struct /* coclass */ RunningTotalFieldDefinition;
struct /* coclass */ SQLExpressionFieldDefinition;
struct /* coclass */ Database;
struct /* coclass */ DatabaseTables;
struct /* coclass */ DatabaseTable;
struct /* coclass */ DatabaseFieldDefinitions;
struct /* coclass */ FormulaFieldDefinitions;
struct /* coclass */ ParameterFieldDefinitions;
struct /* coclass */ GroupNameFieldDefinitions;
struct /* coclass */ SummaryFieldDefinitions;
struct /* coclass */ RunningTotalFieldDefinitions;
struct /* coclass */ SQLExpressionFieldDefinitions;
struct /* coclass */ GraphObject;
struct /* coclass */ MapObject;
struct __declspec(uuid("af376825-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IMapObject;
struct /* coclass */ OleObject;
struct /* coclass */ BlobFieldObject;
struct /* coclass */ LineObject;
struct /* coclass */ BoxObject;
struct /* coclass */ OlapGridObject;
struct __declspec(uuid("af37685f-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IOlapGridObject;
struct /* coclass */ CrossTabObject;
struct /* coclass */ PageEngine;
struct /* coclass */ PageGenerator;
struct /* coclass */ Pages;
struct /* coclass */ Page;
struct /* coclass */ ExportOptions;
struct /* coclass */ Application;
struct /* coclass */ FormattingInfo;
struct __declspec(uuid("af37684c-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IFormattingInfo;
struct /* coclass */ SortFields;
struct /* coclass */ SortField;
struct /* coclass */ PrintingStatus;
struct /* coclass */ SubreportLink;
struct /* coclass */ SubreportLinks;
struct /* coclass */ CrossTabGroups;
struct /* coclass */ CrossTabGroup;
struct /* coclass */ FieldDefinitions;
struct /* coclass */ ObjectSummaryFieldDefinitions;
struct /* coclass */ TableLink;
struct /* coclass */ TableLinks;
struct /* coclass */ FieldMappingData;
struct __declspec(uuid("af376856-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IFieldMappingData;
struct /* coclass */ ParameterValue;
struct __declspec(uuid("af376857-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IParameterValue;
struct /* coclass */ ParameterValues;
struct __declspec(uuid("af376858-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IParameterValues;
struct /* coclass */ ParameterValueInfo;
struct __declspec(uuid("af376859-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IParameterValueInfo;
struct /* coclass */ ParameterValueInfos;
struct __declspec(uuid("af37685a-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IParameterValueInfos;
struct /* coclass */ ReportAlert;
struct /* coclass */ ReportAlerts;
struct /* coclass */ ReportAlertInstance;
struct /* coclass */ ReportAlertInstances;
struct /* coclass */ FieldElements;
struct /* coclass */ FieldElement;
struct /* coclass */ ConnectionProperties;
struct /* coclass */ ConnectionProperty;
struct __declspec(uuid("af376861-6120-4e28-96dd-63fd2dc27b7a"))
/* dual interface */ IConnectionProperty;
struct __declspec(uuid("3dcc8fb6-c434-11d1-a817-00a0c92784cd"))
/* interface */ ICrystalReportSourceEx;
struct __declspec(uuid("b4742163-45a6-11d1-abec-00a0c9274b91"))
/* interface */ ICrystalReportSourceEx2;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(IReport, __uuidof(IReport));
_COM_SMARTPTR_TYPEDEF(IAreas, __uuidof(IAreas));
_COM_SMARTPTR_TYPEDEF(IArea, __uuidof(IArea));
_COM_SMARTPTR_TYPEDEF(ISections, __uuidof(ISections));
_COM_SMARTPTR_TYPEDEF(ISection, __uuidof(ISection));
_COM_SMARTPTR_TYPEDEF(IReportObjects, __uuidof(IReportObjects));
_COM_SMARTPTR_TYPEDEF(IFieldObject, __uuidof(IFieldObject));
_COM_SMARTPTR_TYPEDEF(ITextObject, __uuidof(ITextObject));
_COM_SMARTPTR_TYPEDEF(IFieldElements, __uuidof(IFieldElements));
_COM_SMARTPTR_TYPEDEF(IFieldElement, __uuidof(IFieldElement));
_COM_SMARTPTR_TYPEDEF(IFieldDefinition, __uuidof(IFieldDefinition));
_COM_SMARTPTR_TYPEDEF(IBlobFieldObject, __uuidof(IBlobFieldObject));
_COM_SMARTPTR_TYPEDEF(IDatabaseFieldDefinition, __uuidof(IDatabaseFieldDefinition));
_COM_SMARTPTR_TYPEDEF(ISubreportObject, __uuidof(ISubreportObject));
_COM_SMARTPTR_TYPEDEF(ISubreportLinks, __uuidof(ISubreportLinks));
_COM_SMARTPTR_TYPEDEF(ISubreportLink, __uuidof(ISubreportLink));
_COM_SMARTPTR_TYPEDEF(ILineObject, __uuidof(ILineObject));
_COM_SMARTPTR_TYPEDEF(IBoxObject, __uuidof(IBoxObject));
_COM_SMARTPTR_TYPEDEF(ICrossTabObject, __uuidof(ICrossTabObject));
_COM_SMARTPTR_TYPEDEF(IObjectSummaryFieldDefinitions, __uuidof(IObjectSummaryFieldDefinitions));
_COM_SMARTPTR_TYPEDEF(ISummaryFieldDefinition, __uuidof(ISummaryFieldDefinition));
_COM_SMARTPTR_TYPEDEF(IReportObject, __uuidof(IReportObject));
_COM_SMARTPTR_TYPEDEF(ICrossTabGroups, __uuidof(ICrossTabGroups));
_COM_SMARTPTR_TYPEDEF(ICrossTabGroup, __uuidof(ICrossTabGroup));
_COM_SMARTPTR_TYPEDEF(ICROleObject, __uuidof(ICROleObject));
_COM_SMARTPTR_TYPEDEF(IGraphObject, __uuidof(IGraphObject));
_COM_SMARTPTR_TYPEDEF(IFieldDefinitions, __uuidof(IFieldDefinitions));
_COM_SMARTPTR_TYPEDEF(IDatabase, __uuidof(IDatabase));
_COM_SMARTPTR_TYPEDEF(IDatabaseTables, __uuidof(IDatabaseTables));
_COM_SMARTPTR_TYPEDEF(IDatabaseTable, __uuidof(IDatabaseTable));
_COM_SMARTPTR_TYPEDEF(IDatabaseFieldDefinitions, __uuidof(IDatabaseFieldDefinitions));
_COM_SMARTPTR_TYPEDEF(INameValuePairs, __uuidof(INameValuePairs));
_COM_SMARTPTR_TYPEDEF(ITableLinks, __uuidof(ITableLinks));
_COM_SMARTPTR_TYPEDEF(ITableLink, __uuidof(ITableLink));
_COM_SMARTPTR_TYPEDEF(IFormulaFieldDefinitions, __uuidof(IFormulaFieldDefinitions));
_COM_SMARTPTR_TYPEDEF(IFormulaFieldDefinition, __uuidof(IFormulaFieldDefinition));
_COM_SMARTPTR_TYPEDEF(IParameterFieldDefinitions, __uuidof(IParameterFieldDefinitions));
_COM_SMARTPTR_TYPEDEF(IParameterFieldDefinition, __uuidof(IParameterFieldDefinition));
_COM_SMARTPTR_TYPEDEF(IGroupNameFieldDefinitions, __uuidof(IGroupNameFieldDefinitions));
_COM_SMARTPTR_TYPEDEF(IGroupNameFieldDefinition, __uuidof(IGroupNameFieldDefinition));
_COM_SMARTPTR_TYPEDEF(ISummaryFieldDefinitions, __uuidof(ISummaryFieldDefinitions));
_COM_SMARTPTR_TYPEDEF(IPageEngine, __uuidof(IPageEngine));
_COM_SMARTPTR_TYPEDEF(IPageGenerator, __uuidof(IPageGenerator));
_COM_SMARTPTR_TYPEDEF(IPages, __uuidof(IPages));
_COM_SMARTPTR_TYPEDEF(IPage, __uuidof(IPage));
_COM_SMARTPTR_TYPEDEF(IExportOptions, __uuidof(IExportOptions));
_COM_SMARTPTR_TYPEDEF(IApplication, __uuidof(IApplication));
_COM_SMARTPTR_TYPEDEF(ISortFields, __uuidof(ISortFields));
_COM_SMARTPTR_TYPEDEF(ISortField, __uuidof(ISortField));
_COM_SMARTPTR_TYPEDEF(IPrintingStatus, __uuidof(IPrintingStatus));
_COM_SMARTPTR_TYPEDEF(IRunningTotalFieldDefinitions, __uuidof(IRunningTotalFieldDefinitions));
_COM_SMARTPTR_TYPEDEF(IRunningTotalFieldDefinition, __uuidof(IRunningTotalFieldDefinition));
_COM_SMARTPTR_TYPEDEF(ISQLExpressionFieldDefinitions, __uuidof(ISQLExpressionFieldDefinitions));
_COM_SMARTPTR_TYPEDEF(ISQLExpressionFieldDefinition, __uuidof(ISQLExpressionFieldDefinition));
_COM_SMARTPTR_TYPEDEF(IReportAlerts, __uuidof(IReportAlerts));
_COM_SMARTPTR_TYPEDEF(IReportAlert, __uuidof(IReportAlert));
_COM_SMARTPTR_TYPEDEF(IReportAlertInstances, __uuidof(IReportAlertInstances));
_COM_SMARTPTR_TYPEDEF(IReportAlertInstance, __uuidof(IReportAlertInstance));
_COM_SMARTPTR_TYPEDEF(ICrystalReportSource, __uuidof(ICrystalReportSource));
_COM_SMARTPTR_TYPEDEF(ICrystalReportProperties, __uuidof(ICrystalReportProperties));
_COM_SMARTPTR_TYPEDEF(ICrystalReportSourceProperties, __uuidof(ICrystalReportSourceProperties));
_COM_SMARTPTR_TYPEDEF(ICrystalReportPrinterPort, __uuidof(ICrystalReportPrinterPort));
_COM_SMARTPTR_TYPEDEF(ICrystalReportPrinterPortEx, __uuidof(ICrystalReportPrinterPortEx));
_COM_SMARTPTR_TYPEDEF(ICrystalReportSourceEvents, __uuidof(ICrystalReportSourceEvents));
_COM_SMARTPTR_TYPEDEF(IReportEvent, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(ICrystalReportExport, __uuidof(ICrystalReportExport));
_COM_SMARTPTR_TYPEDEF(ICrystalReportExportEvents, __uuidof(ICrystalReportExportEvents));
_COM_SMARTPTR_TYPEDEF(ISectionEvent, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(ISpecialVarFieldDefinition, __uuidof(ISpecialVarFieldDefinition));
_COM_SMARTPTR_TYPEDEF(IMapObject, __uuidof(IMapObject));
_COM_SMARTPTR_TYPEDEF(IOlapGridObject, __uuidof(IOlapGridObject));
_COM_SMARTPTR_TYPEDEF(IFormattingInfo, __uuidof(IFormattingInfo));
_COM_SMARTPTR_TYPEDEF(IFieldMappingData, __uuidof(IFieldMappingData));
_COM_SMARTPTR_TYPEDEF(IParameterValue, __uuidof(IParameterValue));
_COM_SMARTPTR_TYPEDEF(IParameterValues, __uuidof(IParameterValues));
_COM_SMARTPTR_TYPEDEF(IParameterValueInfo, __uuidof(IParameterValueInfo));
_COM_SMARTPTR_TYPEDEF(IParameterValueInfos, __uuidof(IParameterValueInfos));
_COM_SMARTPTR_TYPEDEF(IConnectionProperty, __uuidof(IConnectionProperty));
_COM_SMARTPTR_TYPEDEF(ICrystalReportSourceEx, __uuidof(ICrystalReportSourceEx));
_COM_SMARTPTR_TYPEDEF(ICrystalReportSourceEx2, __uuidof(ICrystalReportSourceEx2));

//
// Type library items
//

struct __declspec(uuid("af3768d0-6120-4e28-96dd-63fd2dc27b7a"))
Report;
    // [ default ] interface IReport
    // interface ICrystalReportSource
    // interface ICrystalReportProperties
    // interface ICrystalReportSourceProperties
    // interface ICrystalReportPrinterPort
    // interface ICrystalReportPrinterPortEx
    // [ source ] interface ICrystalReportSourceEvents
    // [ default, source ] dispinterface IReportEvent
    // interface ICrystalReportExport
    // [ source ] interface ICrystalReportExportEvents

struct __declspec(uuid("af376800-6120-4e28-96dd-63fd2dc27b7a"))
IReport : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Areas (
        struct IAreas * * ppAreas ) = 0;
    virtual HRESULT __stdcall get_Sections (
        struct ISections * * ppSections ) = 0;
    virtual HRESULT __stdcall get_PrintDate (
        DATE * pDate ) = 0;
    virtual HRESULT __stdcall put_PrintDate (
        DATE pDate ) = 0;
    virtual HRESULT __stdcall get_UseIndexForSpeed (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_UseIndexForSpeed (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_TranslateDosStrings (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_TranslateDosStrings (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_TranslateDosMemos (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_TranslateDosMemos (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_ConvertDateTimeType (
        enum CRConvertDateTimeType * pDateTimeType ) = 0;
    virtual HRESULT __stdcall put_ConvertDateTimeType (
        enum CRConvertDateTimeType pDateTimeType ) = 0;
    virtual HRESULT __stdcall get_ConvertNullFieldToDefault (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_ConvertNullFieldToDefault (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_CaseInsensitiveSQLData (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_CaseInsensitiveSQLData (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_VerifyOnEveryPrint (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_VerifyOnEveryPrint (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_Database (
        struct IDatabase * * ppDatabase ) = 0;
    virtual HRESULT __stdcall get_PrinterName (
        BSTR * ppPrinterName ) = 0;
    virtual HRESULT __stdcall get_DriverName (
        BSTR * ppDriverName ) = 0;
    virtual HRESULT __stdcall get_PortName (
        BSTR * ppPortName ) = 0;
    virtual HRESULT __stdcall get_PaperOrientation (
        enum CRPaperOrientation * pPaperOrientation ) = 0;
    virtual HRESULT __stdcall put_PaperOrientation (
        enum CRPaperOrientation pPaperOrientation ) = 0;
    virtual HRESULT __stdcall get_PaperSize (
        enum CRPaperSize * pPaperSize ) = 0;
    virtual HRESULT __stdcall put_PaperSize (
        enum CRPaperSize pPaperSize ) = 0;
    virtual HRESULT __stdcall Save (
        BSTR pReportFileName ) = 0;
    virtual HRESULT __stdcall PrintOut (
        VARIANT promptUser = vtMissing,
        VARIANT numberOfCopy = vtMissing,
        VARIANT collated = vtMissing,
        VARIANT startPageN = vtMissing,
        VARIANT stopPageN = vtMissing ) = 0;
    virtual HRESULT __stdcall SelectPrinter (
        BSTR pDriverName,
        BSTR pPrinterName,
        BSTR pPortName ) = 0;
    virtual HRESULT __stdcall get_FormulaFields (
        struct IFormulaFieldDefinitions * * ppFormulaFields ) = 0;
    virtual HRESULT __stdcall get_ParameterFields (
        struct IParameterFieldDefinitions * * ppParameterFields ) = 0;
    virtual HRESULT __stdcall get_GroupNameFields (
        struct IGroupNameFieldDefinitions * * ppGroupNameFields ) = 0;
    virtual HRESULT __stdcall get_SummaryFields (
        struct ISummaryFieldDefinitions * * ppSummaryFieldDefinitions ) = 0;
    virtual HRESULT __stdcall get_Kind (
        enum CRReportKind * pReportKind ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct IReport * * ppReport ) = 0;
    virtual HRESULT __stdcall get_NumberOfGroup (
        long * pNumberOfGroup ) = 0;
    virtual HRESULT __stdcall get_MorePrintEngineErrorMessages (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_MorePrintEngineErrorMessages (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_LeftMargin (
        long * pLeftMargin ) = 0;
    virtual HRESULT __stdcall put_LeftMargin (
        long pLeftMargin ) = 0;
    virtual HRESULT __stdcall get_RightMargin (
        long * pRightMargin ) = 0;
    virtual HRESULT __stdcall put_RightMargin (
        long pRightMargin ) = 0;
    virtual HRESULT __stdcall get_TopMargin (
        long * pTopMargin ) = 0;
    virtual HRESULT __stdcall put_TopMargin (
        long pTopMargin ) = 0;
    virtual HRESULT __stdcall get_BottomMargin (
        long * pBottomMargin ) = 0;
    virtual HRESULT __stdcall put_BottomMargin (
        long pBottomMargin ) = 0;
    virtual HRESULT __stdcall get_PageEngine (
        struct IPageEngine * * ppPageEngine ) = 0;
    virtual HRESULT __stdcall Export (
        VARIANT promptUser = vtMissing ) = 0;
    virtual HRESULT __stdcall get_ExportOptions (
        struct IExportOptions * * ppExportOptions ) = 0;
    virtual HRESULT __stdcall get_Application (
        struct IApplication * * ppApplication ) = 0;
    virtual HRESULT __stdcall get_EnableParameterPrompting (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_EnableParameterPrompting (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_DisplayProgressDialog (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_DisplayProgressDialog (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_RecordSelectionFormula (
        BSTR * ppRecordSelectionFormula ) = 0;
    virtual HRESULT __stdcall put_RecordSelectionFormula (
        BSTR ppRecordSelectionFormula ) = 0;
    virtual HRESULT __stdcall get_GroupSelectionFormula (
        BSTR * ppGroupSelectionFormula ) = 0;
    virtual HRESULT __stdcall put_GroupSelectionFormula (
        BSTR ppGroupSelectionFormula ) = 0;
    virtual HRESULT __stdcall get_RecordSortFields (
        struct ISortFields * * ppRecordSortFields ) = 0;
    virtual HRESULT __stdcall CancelPrinting ( ) = 0;
    virtual HRESULT __stdcall get_HasSavedData (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall DiscardSavedData ( ) = 0;
    virtual HRESULT __stdcall get_PrintingStatus (
        struct IPrintingStatus * * ppPrintingStatus ) = 0;
    virtual HRESULT __stdcall get_ReportTitle (
        BSTR * ppReportTitle ) = 0;
    virtual HRESULT __stdcall put_ReportTitle (
        BSTR ppReportTitle ) = 0;
    virtual HRESULT __stdcall get_ReportSubject (
        BSTR * ppReportSubject ) = 0;
    virtual HRESULT __stdcall put_ReportSubject (
        BSTR ppReportSubject ) = 0;
    virtual HRESULT __stdcall get_ReportAuthor (
        BSTR * ppReportAuthor ) = 0;
    virtual HRESULT __stdcall put_ReportAuthor (
        BSTR ppReportAuthor ) = 0;
    virtual HRESULT __stdcall get_ReportComments (
        BSTR * ppReportComments ) = 0;
    virtual HRESULT __stdcall put_ReportComments (
        BSTR ppReportComments ) = 0;
    virtual HRESULT __stdcall get_ReportTemplate (
        BSTR * ppReportTemplate ) = 0;
    virtual HRESULT __stdcall put_ReportTemplate (
        BSTR ppReportTemplate ) = 0;
    virtual HRESULT __stdcall get_KeywordsInReport (
        BSTR * ppKeywordsInReport ) = 0;
    virtual HRESULT __stdcall put_KeywordsInReport (
        BSTR ppKeywordsInReport ) = 0;
    virtual HRESULT __stdcall get_ApplicationName (
        BSTR * ppApplicationName ) = 0;
    virtual HRESULT __stdcall put_ApplicationName (
        BSTR ppApplicationName ) = 0;
    virtual HRESULT __stdcall ReadRecords ( ) = 0;
    virtual HRESULT __stdcall GetNextRows (
        long startRowN,
        long * pRowN,
        VARIANT * pRowset ) = 0;
    virtual HRESULT __stdcall get_RunningTotalFields (
        struct IRunningTotalFieldDefinitions * * ppRunningTotalFieldDefinitions ) = 0;
    virtual HRESULT __stdcall get_PerformGroupingOnServer (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_PerformGroupingOnServer (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_CanPerformGroupingOnServer (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall get_SQLQueryString (
        BSTR * ppSQLQueryString ) = 0;
    virtual HRESULT __stdcall put_SQLQueryString (
        BSTR ppSQLQueryString ) = 0;
    virtual HRESULT __stdcall get_SQLExpressionFields (
        struct ISQLExpressionFieldDefinitions * * ppSQLExpressionFieldDefinitions ) = 0;
    virtual HRESULT __stdcall OpenSubreport (
        BSTR pSubreportName,
        struct IReport * * ppSubreport ) = 0;
    virtual HRESULT __stdcall get_GroupSortFields (
        struct ISortFields * * ppGroupSortFields ) = 0;
    virtual HRESULT __stdcall AddGroup (
        short GroupNumber,
        IDispatch * pConditionField,
        enum CRGroupCondition Condition,
        enum CRSortDirection SortDirection ) = 0;
    virtual HRESULT __stdcall SetDialogParentWindow (
        long hWnd ) = 0;
    virtual HRESULT __stdcall get_EnablePerformQueriesAsynchronously (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_EnablePerformQueriesAsynchronously (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_EnableSelectDistinctRecords (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_EnableSelectDistinctRecords (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall AddReportVariable (
        enum CRReportVariableValueType type,
        BSTR pName,
        long arraySize,
        VARIANT reserved = vtMissing ) = 0;
    virtual HRESULT __stdcall GetReportVariableValue (
        BSTR pName,
        VARIANT * ppVar ) = 0;
    virtual HRESULT __stdcall SetReportVariableValue (
        BSTR pName,
        VARIANT var ) = 0;
    virtual HRESULT __stdcall get_ReportFormatStyle (
        enum CRReportFormatStyle * pFormatStyle ) = 0;
    virtual HRESULT __stdcall put_ReportFormatStyle (
        enum CRReportFormatStyle pFormatStyle ) = 0;
    virtual HRESULT __stdcall DeleteGroup (
        short GroupNumber ) = 0;
    virtual HRESULT __stdcall get_EnableAsyncQuery (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_EnableAsyncQuery (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_EnableGeneratingDataForHiddenObject (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_EnableGeneratingDataForHiddenObject (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall put_PrinterDuplex (
        enum CRPrinterDuplexType pPrinterDuplexType ) = 0;
    virtual HRESULT __stdcall get_PrinterDuplex (
        enum CRPrinterDuplexType * pPrinterDuplexType ) = 0;
    virtual HRESULT __stdcall put_PaperSource (
        enum CRPaperSource pPaperSource ) = 0;
    virtual HRESULT __stdcall get_PaperSource (
        enum CRPaperSource * pPaperSource ) = 0;
    virtual HRESULT __stdcall get_SavePreviewPicture (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_SavePreviewPicture (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall PrinterSetup (
        long hWnd ) = 0;
    virtual HRESULT __stdcall AutoSetUnboundFieldSource (
        enum CRBindingMatchType matchType,
        VARIANT bindSubReports = vtMissing ) = 0;
    virtual HRESULT __stdcall SaveAs (
        BSTR pFilePath,
        enum CRReportFileFormat fileFormat ) = 0;
    virtual HRESULT __stdcall put_FieldMappingType (
        enum CRFieldMappingType fldMappingType ) = 0;
    virtual HRESULT __stdcall get_FieldMappingType (
        enum CRFieldMappingType * fldMappingType ) = 0;
    virtual HRESULT __stdcall get_FormulaSyntax (
        enum CRFormulaSyntax * pFormulaSyntax ) = 0;
    virtual HRESULT __stdcall put_FormulaSyntax (
        enum CRFormulaSyntax pFormulaSyntax ) = 0;
    virtual HRESULT __stdcall get_LastGetFormulaSyntax (
        enum CRFormulaSyntax * pLastGetFormulaSyntax ) = 0;
    virtual HRESULT __stdcall get_NeedUpdatePages (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall get_ReportAlerts (
        struct IReportAlerts * * ppReportAlerts ) = 0;
    virtual HRESULT __stdcall SwapGroups (
        short sourceGroupN,
        short targetGroupN ) = 0;
    virtual HRESULT __stdcall SetUserPaperSize (
        short length,
        short Width ) = 0;
    virtual HRESULT __stdcall PrintOutEx (
        VARIANT promptUser,
        VARIANT numberOfCopy,
        VARIANT collated,
        VARIANT startPageN,
        VARIANT stopPageN,
        BSTR printFileName ) = 0;
    virtual HRESULT __stdcall PrinterSetupEx (
        long hWnd,
        long * retVal ) = 0;
};

struct __declspec(uuid("af376803-6120-4e28-96dd-63fd2dc27b7a"))
IAreas : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppNewEnum ) = 0;
    virtual HRESULT __stdcall get_Item (
        VARIANT index,
        struct IArea * * ppArea ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * pCount ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct IReport * * ppReport ) = 0;
};

struct __declspec(uuid("af376805-6120-4e28-96dd-63fd2dc27b7a"))
IArea : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Name (
        BSTR * ppName ) = 0;
    virtual HRESULT __stdcall put_Name (
        BSTR ppName ) = 0;
    virtual HRESULT __stdcall get_Kind (
        enum CRAreaKind * pAreaKind ) = 0;
    virtual HRESULT __stdcall get_Sections (
        struct ISections * * ppSections ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct IReport * * ppParent ) = 0;
    virtual HRESULT __stdcall get_Suppress (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_Suppress (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_HideForDrillDown (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_HideForDrillDown (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_GroupNumber (
        short * pGroupNumber ) = 0;
    virtual HRESULT __stdcall get_CopiesToPrint (
        short * pCopiesToPrint ) = 0;
    virtual HRESULT __stdcall put_CopiesToPrint (
        short pCopiesToPrint ) = 0;
    virtual HRESULT __stdcall get_KeepTogether (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_KeepTogether (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_NewPageAfter (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_NewPageAfter (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_NewPageBefore (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_NewPageBefore (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_PrintAtBottomOfPage (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_PrintAtBottomOfPage (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_ResetPageNumberAfter (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_ResetPageNumberAfter (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_SortDirection (
        enum CRSortDirection * pSortDirection ) = 0;
    virtual HRESULT __stdcall put_SortDirection (
        enum CRSortDirection pSortDirection ) = 0;
    virtual HRESULT __stdcall get_RepeatGroupHeader (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_RepeatGroupHeader (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_KeepGroupTogether (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_KeepGroupTogether (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_GroupCondition (
        enum CRGroupCondition * pGroupCondition ) = 0;
    virtual HRESULT __stdcall put_GroupCondition (
        enum CRGroupCondition pGroupCondition ) = 0;
    virtual HRESULT __stdcall get_GroupConditionField (
        IDispatch * * ppConditionField ) = 0;
    virtual HRESULT __stdcall put_GroupConditionField (
        IDispatch * ppConditionField ) = 0;
    virtual HRESULT __stdcall get_DetailWidth (
        long * pDetailWidth ) = 0;
    virtual HRESULT __stdcall get_DetailHeight (
        long * pDetailHeight ) = 0;
    virtual HRESULT __stdcall get_HorizontalGap (
        long * pHorizontalGap ) = 0;
    virtual HRESULT __stdcall get_TopOrBottomNGroupSortOrder (
        enum CRTopBottomNGroupSortOrder * pTopOrBottomNGroupSortOrder ) = 0;
    virtual HRESULT __stdcall put_TopOrBottomNGroupSortOrder (
        enum CRTopBottomNGroupSortOrder pTopOrBottomNGroupSortOrder ) = 0;
    virtual HRESULT __stdcall get_NumberOfTopOrBottomNGroups (
        short * pNumberOfTopOrBottomNGroups ) = 0;
    virtual HRESULT __stdcall put_NumberOfTopOrBottomNGroups (
        short pNumberOfTopOrBottomNGroups ) = 0;
    virtual HRESULT __stdcall get_DiscardOtherGroups (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_DiscardOtherGroups (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_TopOrBottomNSortField (
        struct ISummaryFieldDefinition * * ppTopOrBottomNSortField ) = 0;
    virtual HRESULT __stdcall put_TopOrBottomNSortField (
        struct ISummaryFieldDefinition * ppTopOrBottomNSortField ) = 0;
    virtual HRESULT __stdcall get_EnableHierarchicalGroupSorting (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_EnableHierarchicalGroupSorting (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_ParentIDField (
        struct IFieldDefinition * * ppParentIDField ) = 0;
    virtual HRESULT __stdcall SetParentIDField (
        VARIANT ParentIDField ) = 0;
    virtual HRESULT __stdcall get_InstanceIDField (
        struct IFieldDefinition * * ppInstanceIDField ) = 0;
    virtual HRESULT __stdcall SetInstanceIDField (
        VARIANT InstanceIDField ) = 0;
    virtual HRESULT __stdcall get_GroupIndent (
        long * pGroupIndent ) = 0;
    virtual HRESULT __stdcall put_GroupIndent (
        long pGroupIndent ) = 0;
    virtual HRESULT __stdcall get_SpecifiedGroups (
        VARIANT * pSpecifedGroupArray ) = 0;
    virtual HRESULT __stdcall put_SpecifiedGroups (
        VARIANT * pSpecifedGroupArray ) = 0;
    virtual HRESULT __stdcall get_ConditionFormula (
        VARIANT FormulaName,
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_ConditionFormula (
        VARIANT FormulaName,
        BSTR pVal ) = 0;
};

enum CRAreaKind
{
    crReportHeader = 1,
    crPageHeader = 2,
    crGroupHeader = 3,
    crDetail = 4,
    crGroupFooter = 5,
    crPageFooter = 7,
    crReportFooter = 8
};

struct __declspec(uuid("af376804-6120-4e28-96dd-63fd2dc27b7a"))
ISections : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppNewEnum ) = 0;
    virtual HRESULT __stdcall get_Item (
        VARIANT index,
        struct ISection * * ppSection ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * pCount ) = 0;
    virtual HRESULT __stdcall get_Parent (
        IDispatch * * ppParent ) = 0;
    virtual HRESULT __stdcall Add (
        VARIANT index,
        struct ISection * * ppSection ) = 0;
    virtual HRESULT __stdcall Delete (
        VARIANT index ) = 0;
};

struct __declspec(uuid("af376806-6120-4e28-96dd-63fd2dc27b7a"))
ISection : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Name (
        BSTR * ppName ) = 0;
    virtual HRESULT __stdcall put_Name (
        BSTR ppName ) = 0;
    virtual HRESULT __stdcall get_Height (
        long * pHeight ) = 0;
    virtual HRESULT __stdcall put_Height (
        long pHeight ) = 0;
    virtual HRESULT __stdcall get_ReportObjects (
        struct IReportObjects * * ppReportObjects ) = 0;
    virtual HRESULT __stdcall get_Width (
        long * pWidth ) = 0;
    virtual HRESULT __stdcall get_BackColor (
        OLE_COLOR * pBackColor ) = 0;
    virtual HRESULT __stdcall put_BackColor (
        OLE_COLOR pBackColor ) = 0;
    virtual HRESULT __stdcall get_Suppress (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_Suppress (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct IArea * * ppArea ) = 0;
    virtual HRESULT __stdcall get_Number (
        short * pNumber ) = 0;
    virtual HRESULT __stdcall get_NewPageBefore (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_NewPageBefore (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_NewPageAfter (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_NewPageAfter (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_KeepTogether (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_KeepTogether (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_ResetPageNumberAfter (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_ResetPageNumberAfter (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_PrintAtBottomOfPage (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_PrintAtBottomOfPage (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_UnderlaySection (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_UnderlaySection (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_SuppressIfBlank (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_SuppressIfBlank (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_MinimumHeight (
        long * pMinimumHeight ) = 0;
    virtual HRESULT __stdcall AddFieldObject (
        VARIANT Field,
        long Left,
        long Top,
        struct IFieldObject * * ppFieldObject ) = 0;
    virtual HRESULT __stdcall AddTextObject (
        BSTR pText,
        long Left,
        long Top,
        VARIANT formatText,
        struct ITextObject * * ppTextObject ) = 0;
    virtual HRESULT __stdcall AddBlobFieldObject (
        VARIANT Field,
        long Left,
        long Top,
        struct IBlobFieldObject * * ppBlobFieldObject ) = 0;
    virtual HRESULT __stdcall AddSpecialVarFieldObject (
        enum CRSpecialVarType specialVarType,
        long Left,
        long Top,
        struct IFieldObject * * ppFieldObject ) = 0;
    virtual HRESULT __stdcall AddSubreportObject (
        BSTR pSubreportName,
        long Left,
        long Top,
        struct ISubreportObject * * ppSubreportObject ) = 0;
    virtual HRESULT __stdcall ImportSubreport (
        BSTR subreportFileName,
        long Left,
        long Top,
        struct ISubreportObject * * ppSubreportObject ) = 0;
    virtual HRESULT __stdcall DeleteObject (
        VARIANT reportObject ) = 0;
    virtual HRESULT __stdcall AddLineObject (
        long Left,
        long Top,
        long Right,
        long Bottom,
        VARIANT pEndSection,
        struct ILineObject * * ppBoxObject ) = 0;
    virtual HRESULT __stdcall AddBoxObject (
        long Left,
        long Top,
        long Right,
        long Bottom,
        VARIANT pEndSection,
        struct IBoxObject * * ppBoxObject ) = 0;
    virtual HRESULT __stdcall AddCrossTabObject (
        long Left,
        long Top,
        struct ICrossTabObject * * ppCrossTabObject ) = 0;
    virtual HRESULT __stdcall AddPictureObject (
        BSTR pImageFilePath,
        long Left,
        long Top,
        struct ICROleObject * * ppOleObject ) = 0;
    virtual HRESULT __stdcall AddGraphObject (
        enum CRGraphDataType graphDataType,
        long Left,
        long Top,
        VARIANT pCrossTabObject,
        struct IGraphObject * * ppGraphObject ) = 0;
    virtual HRESULT __stdcall AddSummaryFieldObject (
        VARIANT Field,
        enum CRSummaryType SummaryType,
        long Left,
        long Top,
        VARIANT secondSummaryFieldOrFactor,
        struct IFieldObject * * ppFieldObject ) = 0;
    virtual HRESULT __stdcall AddUnboundFieldObject (
        CRFieldValueType ValueType,
        long Left,
        long Top,
        struct IFieldObject * * ppFieldObject ) = 0;
    virtual HRESULT __stdcall get_ConditionFormula (
        VARIANT FormulaName,
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_ConditionFormula (
        VARIANT FormulaName,
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall get_CssClass (
        BSTR * ppCssClass ) = 0;
    virtual HRESULT __stdcall put_CssClass (
        BSTR ppCssClass ) = 0;
};

struct __declspec(uuid("af376807-6120-4e28-96dd-63fd2dc27b7a"))
IReportObjects : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppNewEnum ) = 0;
    virtual HRESULT __stdcall get_Item (
        VARIANT index,
        IDispatch * * ppReportObject ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * pCount ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct ISection * * ppParent ) = 0;
};

struct __declspec(uuid("af376809-6120-4e28-96dd-63fd2dc27b7a"))
IFieldObject : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Name (
        BSTR * ppName ) = 0;
    virtual HRESULT __stdcall put_Name (
        BSTR ppName ) = 0;
    virtual HRESULT __stdcall get_Kind (
        enum CRObjectKind * pObjectKind ) = 0;
    virtual HRESULT __stdcall get_Left (
        long * pLeft ) = 0;
    virtual HRESULT __stdcall put_Left (
        long pLeft ) = 0;
    virtual HRESULT __stdcall get_Top (
        long * pTop ) = 0;
    virtual HRESULT __stdcall put_Top (
        long pTop ) = 0;
    virtual HRESULT __stdcall get_Width (
        long * pWidth ) = 0;
    virtual HRESULT __stdcall put_Width (
        long pWidth ) = 0;
    virtual HRESULT __stdcall get_Height (
        long * pHeight ) = 0;
    virtual HRESULT __stdcall put_Height (
        long pHeight ) = 0;
    virtual HRESULT __stdcall get_LeftLineStyle (
        enum CRLineStyle * pLeftLineStyle ) = 0;
    virtual HRESULT __stdcall put_LeftLineStyle (
        enum CRLineStyle pLeftLineStyle ) = 0;
    virtual HRESULT __stdcall get_RightLineStyle (
        enum CRLineStyle * pRightLineStyle ) = 0;
    virtual HRESULT __stdcall put_RightLineStyle (
        enum CRLineStyle pRightLineStyle ) = 0;
    virtual HRESULT __stdcall get_TopLineStyle (
        enum CRLineStyle * pTopLineStyle ) = 0;
    virtual HRESULT __stdcall put_TopLineStyle (
        enum CRLineStyle pTopLineStyle ) = 0;
    virtual HRESULT __stdcall get_BottomLineStyle (
        enum CRLineStyle * pBottomLineStyle ) = 0;
    virtual HRESULT __stdcall put_BottomLineStyle (
        enum CRLineStyle pBottomLineStyle ) = 0;
    virtual HRESULT __stdcall get_EnableTightHorizontal (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_EnableTightHorizontal (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_HasDropShadow (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_HasDropShadow (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_BackColor (
        OLE_COLOR * pBackColor ) = 0;
    virtual HRESULT __stdcall put_BackColor (
        OLE_COLOR pBackColor ) = 0;
    virtual HRESULT __stdcall get_BorderColor (
        OLE_COLOR * pBorderColor ) = 0;
    virtual HRESULT __stdcall put_BorderColor (
        OLE_COLOR pBorderColor ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct ISection * * ppParent ) = 0;
    virtual HRESULT __stdcall get_Suppress (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_Suppress (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_CloseAtPageBreak (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_CloseAtPageBreak (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_KeepTogether (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_KeepTogether (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_TextColor (
        OLE_COLOR * pTextColor ) = 0;
    virtual HRESULT __stdcall put_TextColor (
        OLE_COLOR pTextColor ) = 0;
    virtual HRESULT __stdcall get_Font (
        IFontDisp * * ppFont ) = 0;
    virtual HRESULT __stdcall putref_Font (
        IFontDisp * ppFont ) = 0;
    virtual HRESULT __stdcall get_Field (
        IDispatch * * ppField ) = 0;
    virtual HRESULT __stdcall get_HorAlignment (
        enum CRAlignment * pHorAlignment ) = 0;
    virtual HRESULT __stdcall put_HorAlignment (
        enum CRAlignment pHorAlignment ) = 0;
    virtual HRESULT __stdcall get_Value (
        VARIANT * pValue ) = 0;
    virtual HRESULT __stdcall get_CanGrow (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_CanGrow (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_SuppressIfDuplicated (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_SuppressIfDuplicated (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_UseSystemDefaults (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_UseSystemDefaults (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_SuppressIfZero (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_SuppressIfZero (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_NegativeType (
        enum CRNegativeType * pNegativeType ) = 0;
    virtual HRESULT __stdcall put_NegativeType (
        enum CRNegativeType pNegativeType ) = 0;
    virtual HRESULT __stdcall get_ThousandsSeparators (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_ThousandsSeparators (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_UseLeadingZero (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_UseLeadingZero (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_DecimalPlaces (
        short * pDecimalPlaces ) = 0;
    virtual HRESULT __stdcall put_DecimalPlaces (
        short pDecimalPlaces ) = 0;
    virtual HRESULT __stdcall get_RoundingType (
        enum CRRoundingType * pRoundingType ) = 0;
    virtual HRESULT __stdcall put_RoundingType (
        enum CRRoundingType pRoundingType ) = 0;
    virtual HRESULT __stdcall get_ThousandSymbol (
        BSTR * ppThousandSymbol ) = 0;
    virtual HRESULT __stdcall put_ThousandSymbol (
        BSTR ppThousandSymbol ) = 0;
    virtual HRESULT __stdcall get_DecimalSymbol (
        BSTR * ppDecimalSymbol ) = 0;
    virtual HRESULT __stdcall put_DecimalSymbol (
        BSTR ppDecimalSymbol ) = 0;
    virtual HRESULT __stdcall get_CurrencySymbolType (
        enum CRCurrencySymbolType * pCurrencySymbolType ) = 0;
    virtual HRESULT __stdcall put_CurrencySymbolType (
        enum CRCurrencySymbolType pCurrencySymbolType ) = 0;
    virtual HRESULT __stdcall get_UseOneSymbolPerPage (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_UseOneSymbolPerPage (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_CurrencyPositionType (
        enum CRCurrencyPositionType * pCurrencyPositionType ) = 0;
    virtual HRESULT __stdcall put_CurrencyPositionType (
        enum CRCurrencyPositionType pCurrencyPositionType ) = 0;
    virtual HRESULT __stdcall get_CurrencySymbol (
        BSTR * ppCurrencySymbol ) = 0;
    virtual HRESULT __stdcall put_CurrencySymbol (
        BSTR ppCurrencySymbol ) = 0;
    virtual HRESULT __stdcall get_BooleanOutputType (
        enum CRBooleanOutputType * pBooleanOutputType ) = 0;
    virtual HRESULT __stdcall put_BooleanOutputType (
        enum CRBooleanOutputType pBooleanOutputType ) = 0;
    virtual HRESULT __stdcall get_DateWindowsDefaultType (
        enum CRDateWindowsDefaultType * pDateWindowsDefaultType ) = 0;
    virtual HRESULT __stdcall put_DateWindowsDefaultType (
        enum CRDateWindowsDefaultType pDateWindowsDefaultType ) = 0;
    virtual HRESULT __stdcall get_DateOrder (
        enum CRDateOrder * pDateOrder ) = 0;
    virtual HRESULT __stdcall put_DateOrder (
        enum CRDateOrder pDateOrder ) = 0;
    virtual HRESULT __stdcall get_YearType (
        enum CRYearType * pYearType ) = 0;
    virtual HRESULT __stdcall put_YearType (
        enum CRYearType pYearType ) = 0;
    virtual HRESULT __stdcall get_MonthType (
        enum CRMonthType * pMonthType ) = 0;
    virtual HRESULT __stdcall put_MonthType (
        enum CRMonthType pMonthType ) = 0;
    virtual HRESULT __stdcall get_DayType (
        enum CRDayType * pDayType ) = 0;
    virtual HRESULT __stdcall put_DayType (
        enum CRDayType pDayType ) = 0;
    virtual HRESULT __stdcall get_LeadingDayType (
        enum CRLeadingDayType * pLeadingDayType ) = 0;
    virtual HRESULT __stdcall put_LeadingDayType (
        enum CRLeadingDayType pLeadingDayType ) = 0;
    virtual HRESULT __stdcall get_LeadingDaySeparator (
        BSTR * ppLeadingDaySeparator ) = 0;
    virtual HRESULT __stdcall put_LeadingDaySeparator (
        BSTR ppLeadingDaySeparator ) = 0;
    virtual HRESULT __stdcall get_DateFirstSeparator (
        BSTR * ppDateFirstSeparator ) = 0;
    virtual HRESULT __stdcall put_DateFirstSeparator (
        BSTR ppDateFirstSeparator ) = 0;
    virtual HRESULT __stdcall get_DateSecondSeparator (
        BSTR * ppDateSecondSeparator ) = 0;
    virtual HRESULT __stdcall put_DateSecondSeparator (
        BSTR ppDateSecondSeparator ) = 0;
    virtual HRESULT __stdcall get_TimeBase (
        enum CRTimeBase * pTimeBase ) = 0;
    virtual HRESULT __stdcall put_TimeBase (
        enum CRTimeBase pTimeBase ) = 0;
    virtual HRESULT __stdcall get_AmPmType (
        enum CRAmPmType * pAmPmType ) = 0;
    virtual HRESULT __stdcall put_AmPmType (
        enum CRAmPmType pAmPmType ) = 0;
    virtual HRESULT __stdcall get_HourType (
        enum CRHourType * pHourType ) = 0;
    virtual HRESULT __stdcall put_HourType (
        enum CRHourType pHourType ) = 0;
    virtual HRESULT __stdcall get_MinuteType (
        enum CRMinuteType * pMinuteType ) = 0;
    virtual HRESULT __stdcall put_MinuteType (
        enum CRMinuteType pMinuteType ) = 0;
    virtual HRESULT __stdcall get_SecondType (
        enum CRSecondType * pSecondType ) = 0;
    virtual HRESULT __stdcall put_SecondType (
        enum CRSecondType pSecondType ) = 0;
    virtual HRESULT __stdcall get_PmString (
        BSTR * ppPmString ) = 0;
    virtual HRESULT __stdcall put_PmString (
        BSTR ppPmString ) = 0;
    virtual HRESULT __stdcall get_AmString (
        BSTR * ppAmString ) = 0;
    virtual HRESULT __stdcall put_AmString (
        BSTR ppAmString ) = 0;
    virtual HRESULT __stdcall get_MinuteSecondSeparator (
        BSTR * ppMinuteSecondSeparator ) = 0;
    virtual HRESULT __stdcall put_MinuteSecondSeparator (
        BSTR ppMinuteSecondSeparator ) = 0;
    virtual HRESULT __stdcall get_HourMinuteSeparator (
        BSTR * ppHourMinuteSeparator ) = 0;
    virtual HRESULT __stdcall put_HourMinuteSeparator (
        BSTR ppHourMinuteSeparator ) = 0;
    virtual HRESULT __stdcall get_MaxNumberOfLines (
        short * pMaxNumberOfLines ) = 0;
    virtual HRESULT __stdcall put_MaxNumberOfLines (
        short pMaxNumberOfLines ) = 0;
    virtual HRESULT __stdcall get_PreviousValue (
        VARIANT * pPreValue ) = 0;
    virtual HRESULT __stdcall get_NextValue (
        VARIANT * pNextValue ) = 0;
    virtual HRESULT __stdcall get_LeadingDayPosition (
        enum CRLeadingDayPosition * pLeadingDayPosition ) = 0;
    virtual HRESULT __stdcall put_LeadingDayPosition (
        enum CRLeadingDayPosition pLeadingDayPosition ) = 0;
    virtual HRESULT __stdcall get_DateEraType (
        enum CRDateEraType * pDateEraType ) = 0;
    virtual HRESULT __stdcall put_DateEraType (
        enum CRDateEraType pDateEraType ) = 0;
    virtual HRESULT __stdcall get_DateCalendarType (
        enum CRDateCalendarType * pDateCalendarType ) = 0;
    virtual HRESULT __stdcall put_DateCalendarType (
        enum CRDateCalendarType pDateCalendarType ) = 0;
    virtual HRESULT __stdcall get_DatePrefixSeparator (
        BSTR * ppDatePrefixSeparator ) = 0;
    virtual HRESULT __stdcall put_DatePrefixSeparator (
        BSTR ppDatePrefixSeparator ) = 0;
    virtual HRESULT __stdcall get_DateSuffixSeparator (
        BSTR * ppDateSuffixSeparator ) = 0;
    virtual HRESULT __stdcall put_DateSuffixSeparator (
        BSTR ppDateSuffixSeparator ) = 0;
    virtual HRESULT __stdcall SetUnboundFieldSource (
        BSTR pUnboundFieldSource ) = 0;
    virtual HRESULT __stdcall get_DisplayReverseSign (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_DisplayReverseSign (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_ZeroValueString (
        BSTR * ppZeroValue ) = 0;
    virtual HRESULT __stdcall put_ZeroValueString (
        BSTR ppZeroValue ) = 0;
    virtual HRESULT __stdcall get_CharacterSpacing (
        long * pCharacterSpacing ) = 0;
    virtual HRESULT __stdcall put_CharacterSpacing (
        long pCharacterSpacing ) = 0;
    virtual HRESULT __stdcall get_LineSpacing (
        double * pLineSpacing ) = 0;
    virtual HRESULT __stdcall get_LineSpacingType (
        enum CRLineSpacingType * pLineSpacingType ) = 0;
    virtual HRESULT __stdcall SetLineSpacing (
        double LineSpacing,
        enum CRLineSpacingType LineSpacingType ) = 0;
    virtual HRESULT __stdcall get_TextRotationAngle (
        enum CRRotationAngle * pRotationAngle ) = 0;
    virtual HRESULT __stdcall put_TextRotationAngle (
        enum CRRotationAngle pRotationAngle ) = 0;
    virtual HRESULT __stdcall get_FirstLineIndent (
        long * pFirstLineIndent ) = 0;
    virtual HRESULT __stdcall put_FirstLineIndent (
        long pFirstLineIndent ) = 0;
    virtual HRESULT __stdcall get_LeftIndent (
        long * pLeftIndent ) = 0;
    virtual HRESULT __stdcall put_LeftIndent (
        long pLeftIndent ) = 0;
    virtual HRESULT __stdcall get_RightIndent (
        long * pRightIndent ) = 0;
    virtual HRESULT __stdcall put_RightIndent (
        long pRightIndent ) = 0;
    virtual HRESULT __stdcall get_TextFormat (
        enum CRTextFormat * pTextFormat ) = 0;
    virtual HRESULT __stdcall put_TextFormat (
        enum CRTextFormat pTextFormat ) = 0;
    virtual HRESULT __stdcall get_ConditionFormula (
        VARIANT FormulaType,
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_ConditionFormula (
        VARIANT FormulaType,
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall get_CssClass (
        BSTR * ppCssClass ) = 0;
    virtual HRESULT __stdcall put_CssClass (
        BSTR ppCssClass ) = 0;
};

enum CRObjectKind
{
    crFieldObject = 1,
    crTextObject = 2,
    crLineObject = 3,
    crBoxObject = 4,
    crSubreportObject = 5,
    crOleObject = 6,
    crGraphObject = 7,
    crCrossTabObject = 8,
    crBlobFieldObject = 9,
    crMapObject = 10,
    crOlapGridObject = 11
};

enum CRLineStyle
{
    crLSNoLine = 0,
    crLSSingleLine = 1,
    crLSDoubleLine = 2,
    crLSDashLine = 3,
    crLSDotLine = 4
};

enum CRAlignment
{
    crDefaultAlign = 0,
    crLeftAlign = 1,
    crHorCenterAlign = 2,
    crRightAlign = 3,
    crJustified = 4
};

enum CRNegativeType
{
    crNotNegative = 0,
    crLeadingMinus = 1,
    crTrailingMinus = 2,
    crBracketed = 3
};

enum CRRoundingType
{
    crRoundToTenBillionth = 1,
    crRoundToBillionth = 2,
    crRoundToHundredMillionth = 3,
    crRoundToTenMillionth = 4,
    crRoundToMillionth = 5,
    crRoundToHundredThousandth = 6,
    crRoundToTenThousandth = 7,
    crRoundToThousandth = 8,
    crRoundToHundredth = 9,
    crRoundToTenth = 10,
    crRoundToUnit = 11,
    crRoundToTen = 12,
    crRoundToHundred = 13,
    crRoundToThousand = 14,
    crRoundToTenThousand = 15,
    crRoundToHundredThousand = 16,
    crRoundToMillion = 17
};

enum CRCurrencySymbolType
{
    crCSTNoSymbol = 0,
    crCSTFixedSymbol = 1,
    crCSTFloatingSymbol = 2
};

enum CRCurrencyPositionType
{
    crLeadingCurrencyInsideNegative = 0,
    crLeadingCurrencyOutsideNegative = 1,
    crTrailingCurrencyInsideNegative = 2,
    crTrailingCurrencyOutsideNegative = 3
};

enum CRBooleanOutputType
{
    crTrueOrFalse = 0,
    crTOrF = 1,
    crYesOrNo = 2,
    crYOrN = 3,
    crOneOrZero = 4
};

enum CRDateWindowsDefaultType
{
    crUseWindowsLongDate = 0,
    crUseWindowsShortDate = 1,
    crNotUsingWindowsDefaults = 2
};

enum CRDateOrder
{
    crYearMonthDay = 0,
    crDayMonthYear = 1,
    crMonthDayYear = 2
};

enum CRYearType
{
    crShortYear = 0,
    crLongYear = 1,
    crNoYear = 2
};

enum CRMonthType
{
    crNumericMonth = 0,
    crLeadingZeroNumericMonth = 1,
    crShortMonth = 2,
    crLongMonth = 3,
    crNoMonth = 4
};

enum CRDayType
{
    crNumericDay = 0,
    crLeadingZeroNumericDay = 1,
    crNoDay = 2
};

enum CRLeadingDayType
{
    crShortLeadingDay = 0,
    crLongLeadingDay = 1,
    crNoLeadingDay = 2
};

enum CRTimeBase
{
    cr12Hour = 0,
    cr24Hour = 1
};

enum CRAmPmType
{
    crAmPmBefore = 0,
    crAmPmAfter = 1
};

enum CRHourType
{
    crNumericHour = 0,
    crNumericHourNoLeadingZero = 1,
    crNoHour = 2
};

enum CRMinuteType
{
    crNumericMinute = 0,
    crNumericMinuteNoLeadingZero = 1,
    crNoMinute = 2
};

enum CRSecondType
{
    crNumericSecond = 0,
    crNumericSecondNoLeadingZero = 1,
    crNumericNoSecond = 2
};

enum CRLeadingDayPosition
{
    crLeadingDayOfWeek = 0,
    crTrailingDayOfWeek = 1
};

enum CRDateEraType
{
    crShortEra = 0,
    crLongEra = 1,
    crNoEra = 2
};

enum CRDateCalendarType
{
    crGregorianCalendar = 1,
    crGregorianUSCalendar = 2,
    crJapaneseCalendar = 3,
    crTaiwaneseCalendar = 4,
    crKoreanCalendar = 5,
    crHijriCalendar = 6,
    crThaiCalendar = 7,
    crHebrewCalendar = 8,
    crGregorianMEFrenchCalendar = 9,
    crGregorianArabicCalendar = 10,
    crGregorianXlitEnglishCalendar = 11,
    crGregorianXlitFrenchCalendar = 12
};

enum CRLineSpacingType
{
    crMultipleSpacing = 0,
    crExactSpacing = 1
};

enum CRRotationAngle
{
    crRotate0 = 0,
    crRotate90 = 1,
    crRotate270 = 2
};

enum CRTextFormat
{
    crStandardText = 0,
    crRTFText = 1,
    crHTMLText = 2
};

struct __declspec(uuid("af37680c-6120-4e28-96dd-63fd2dc27b7a"))
ITextObject : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Name (
        BSTR * ppName ) = 0;
    virtual HRESULT __stdcall put_Name (
        BSTR ppName ) = 0;
    virtual HRESULT __stdcall get_Kind (
        enum CRObjectKind * pObjectKind ) = 0;
    virtual HRESULT __stdcall get_Left (
        long * pLeft ) = 0;
    virtual HRESULT __stdcall put_Left (
        long pLeft ) = 0;
    virtual HRESULT __stdcall get_Top (
        long * pTop ) = 0;
    virtual HRESULT __stdcall put_Top (
        long pTop ) = 0;
    virtual HRESULT __stdcall get_Width (
        long * pWidth ) = 0;
    virtual HRESULT __stdcall put_Width (
        long pWidth ) = 0;
    virtual HRESULT __stdcall get_Height (
        long * pHeight ) = 0;
    virtual HRESULT __stdcall put_Height (
        long pHeight ) = 0;
    virtual HRESULT __stdcall get_LeftLineStyle (
        enum CRLineStyle * pLeftLineStyle ) = 0;
    virtual HRESULT __stdcall put_LeftLineStyle (
        enum CRLineStyle pLeftLineStyle ) = 0;
    virtual HRESULT __stdcall get_RightLineStyle (
        enum CRLineStyle * pRightLineStyle ) = 0;
    virtual HRESULT __stdcall put_RightLineStyle (
        enum CRLineStyle pRightLineStyle ) = 0;
    virtual HRESULT __stdcall get_TopLineStyle (
        enum CRLineStyle * pTopLineStyle ) = 0;
    virtual HRESULT __stdcall put_TopLineStyle (
        enum CRLineStyle pTopLineStyle ) = 0;
    virtual HRESULT __stdcall get_BottomLineStyle (
        enum CRLineStyle * pBottomLineStyle ) = 0;
    virtual HRESULT __stdcall put_BottomLineStyle (
        enum CRLineStyle pBottomLineStyle ) = 0;
    virtual HRESULT __stdcall get_HasDropShadow (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_HasDropShadow (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_BackColor (
        OLE_COLOR * pBackColor ) = 0;
    virtual HRESULT __stdcall put_BackColor (
        OLE_COLOR pBackColor ) = 0;
    virtual HRESULT __stdcall get_BorderColor (
        OLE_COLOR * pBorderColor ) = 0;
    virtual HRESULT __stdcall put_BorderColor (
        OLE_COLOR pBorderColor ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct ISection * * ppParent ) = 0;
    virtual HRESULT __stdcall get_Suppress (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_Suppress (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_CloseAtPageBreak (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_CloseAtPageBreak (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_KeepTogether (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_KeepTogether (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_TextColor (
        OLE_COLOR * pTextColor ) = 0;
    virtual HRESULT __stdcall put_TextColor (
        OLE_COLOR pTextColor ) = 0;
    virtual HRESULT __stdcall get_Font (
        IFontDisp * * ppFont ) = 0;
    virtual HRESULT __stdcall putref_Font (
        IFontDisp * ppFont ) = 0;
    virtual HRESULT __stdcall get_Text (
        BSTR * ppText ) = 0;
    virtual HRESULT __stdcall get_HorAlignment (
        enum CRAlignment * pHorAlignment ) = 0;
    virtual HRESULT __stdcall put_HorAlignment (
        enum CRAlignment pHorAlignment ) = 0;
    virtual HRESULT __stdcall get_SuppressIfDuplicated (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_SuppressIfDuplicated (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_MaxNumberOfLines (
        short * pMaxNumberOfLines ) = 0;
    virtual HRESULT __stdcall put_MaxNumberOfLines (
        short pMaxNumberOfLines ) = 0;
    virtual HRESULT __stdcall get_CanGrow (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_CanGrow (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall SetText (
        BSTR pText ) = 0;
    virtual HRESULT __stdcall get_CharacterSpacing (
        long * pCharacterSpacing ) = 0;
    virtual HRESULT __stdcall put_CharacterSpacing (
        long pCharacterSpacing ) = 0;
    virtual HRESULT __stdcall get_LineSpacing (
        double * pLineSpacing ) = 0;
    virtual HRESULT __stdcall get_LineSpacingType (
        enum CRLineSpacingType * pLineSpacingType ) = 0;
    virtual HRESULT __stdcall SetLineSpacing (
        double LineSpacing,
        enum CRLineSpacingType LineSpacingType ) = 0;
    virtual HRESULT __stdcall get_TextRotationAngle (
        enum CRRotationAngle * pRotationAngle ) = 0;
    virtual HRESULT __stdcall put_TextRotationAngle (
        enum CRRotationAngle pRotationAngle ) = 0;
    virtual HRESULT __stdcall get_FirstLineIndent (
        long * pFirstLineIndent ) = 0;
    virtual HRESULT __stdcall put_FirstLineIndent (
        long pFirstLineIndent ) = 0;
    virtual HRESULT __stdcall get_LeftIndent (
        long * pLeftIndent ) = 0;
    virtual HRESULT __stdcall put_LeftIndent (
        long pLeftIndent ) = 0;
    virtual HRESULT __stdcall get_RightIndent (
        long * pRightIndent ) = 0;
    virtual HRESULT __stdcall put_RightIndent (
        long pRightIndent ) = 0;
    virtual HRESULT __stdcall get_ConditionFormula (
        VARIANT FormulaType,
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_ConditionFormula (
        VARIANT FormulaType,
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall get_FieldElements (
        struct IFieldElements * * ppFieldElements ) = 0;
    virtual HRESULT __stdcall get_CssClass (
        BSTR * ppCssClass ) = 0;
    virtual HRESULT __stdcall put_CssClass (
        BSTR ppCssClass ) = 0;
};

struct __declspec(uuid("af37680b-6120-4e28-96dd-63fd2dc27b7a"))
IFieldElements : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppNewEnum ) = 0;
    virtual HRESULT __stdcall get_Item (
        long index,
        struct IFieldElement * * ppFieldElement ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * pCount ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct ITextObject * * ppTextObject ) = 0;
    virtual HRESULT __stdcall Add (
        long position,
        VARIANT Field ) = 0;
    virtual HRESULT __stdcall Delete (
        long index ) = 0;
};

struct __declspec(uuid("af37680a-6120-4e28-96dd-63fd2dc27b7a"))
IFieldElement : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Font (
        IFontDisp * * ppFont ) = 0;
    virtual HRESULT __stdcall putref_Font (
        IFontDisp * ppFont ) = 0;
    virtual HRESULT __stdcall get_Color (
        OLE_COLOR * pTextColor ) = 0;
    virtual HRESULT __stdcall put_Color (
        OLE_COLOR pTextColor ) = 0;
    virtual HRESULT __stdcall get_FieldDefinition (
        struct IFieldDefinition * * ppFieldDefinition ) = 0;
    virtual HRESULT __stdcall put_FieldDefinition (
        struct IFieldDefinition * ppFieldDefinition ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct ITextObject * * ppTextObject ) = 0;
    virtual HRESULT __stdcall get_SuppressIfDuplicated (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_SuppressIfDuplicated (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_UseSystemDefaults (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_UseSystemDefaults (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_SuppressIfZero (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_SuppressIfZero (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_NegativeType (
        enum CRNegativeType * pNegativeType ) = 0;
    virtual HRESULT __stdcall put_NegativeType (
        enum CRNegativeType pNegativeType ) = 0;
    virtual HRESULT __stdcall get_ThousandsSeparators (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_ThousandsSeparators (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_UseLeadingZero (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_UseLeadingZero (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_DecimalPlaces (
        short * pDecimalPlaces ) = 0;
    virtual HRESULT __stdcall put_DecimalPlaces (
        short pDecimalPlaces ) = 0;
    virtual HRESULT __stdcall get_RoundingType (
        enum CRRoundingType * pRoundingType ) = 0;
    virtual HRESULT __stdcall put_RoundingType (
        enum CRRoundingType pRoundingType ) = 0;
    virtual HRESULT __stdcall get_ThousandSymbol (
        BSTR * ppThousandSymbol ) = 0;
    virtual HRESULT __stdcall put_ThousandSymbol (
        BSTR ppThousandSymbol ) = 0;
    virtual HRESULT __stdcall get_DecimalSymbol (
        BSTR * ppDecimalSymbol ) = 0;
    virtual HRESULT __stdcall put_DecimalSymbol (
        BSTR ppDecimalSymbol ) = 0;
    virtual HRESULT __stdcall get_CurrencySymbolType (
        enum CRCurrencySymbolType * pCurrencySymbolType ) = 0;
    virtual HRESULT __stdcall put_CurrencySymbolType (
        enum CRCurrencySymbolType pCurrencySymbolType ) = 0;
    virtual HRESULT __stdcall get_UseOneSymbolPerPage (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_UseOneSymbolPerPage (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_CurrencyPositionType (
        enum CRCurrencyPositionType * pCurrencyPositionType ) = 0;
    virtual HRESULT __stdcall put_CurrencyPositionType (
        enum CRCurrencyPositionType pCurrencyPositionType ) = 0;
    virtual HRESULT __stdcall get_CurrencySymbol (
        BSTR * ppCurrencySymbol ) = 0;
    virtual HRESULT __stdcall put_CurrencySymbol (
        BSTR ppCurrencySymbol ) = 0;
    virtual HRESULT __stdcall get_BooleanOutputType (
        enum CRBooleanOutputType * pBooleanOutputType ) = 0;
    virtual HRESULT __stdcall put_BooleanOutputType (
        enum CRBooleanOutputType pBooleanOutputType ) = 0;
    virtual HRESULT __stdcall get_DateWindowsDefaultType (
        enum CRDateWindowsDefaultType * pDateWindowsDefaultType ) = 0;
    virtual HRESULT __stdcall put_DateWindowsDefaultType (
        enum CRDateWindowsDefaultType pDateWindowsDefaultType ) = 0;
    virtual HRESULT __stdcall get_DateOrder (
        enum CRDateOrder * pDateOrder ) = 0;
    virtual HRESULT __stdcall put_DateOrder (
        enum CRDateOrder pDateOrder ) = 0;
    virtual HRESULT __stdcall get_YearType (
        enum CRYearType * pYearType ) = 0;
    virtual HRESULT __stdcall put_YearType (
        enum CRYearType pYearType ) = 0;
    virtual HRESULT __stdcall get_MonthType (
        enum CRMonthType * pMonthType ) = 0;
    virtual HRESULT __stdcall put_MonthType (
        enum CRMonthType pMonthType ) = 0;
    virtual HRESULT __stdcall get_DayType (
        enum CRDayType * pDayType ) = 0;
    virtual HRESULT __stdcall put_DayType (
        enum CRDayType pDayType ) = 0;
    virtual HRESULT __stdcall get_LeadingDayType (
        enum CRLeadingDayType * pLeadingDayType ) = 0;
    virtual HRESULT __stdcall put_LeadingDayType (
        enum CRLeadingDayType pLeadingDayType ) = 0;
    virtual HRESULT __stdcall get_LeadingDaySeparator (
        BSTR * ppLeadingDaySeparator ) = 0;
    virtual HRESULT __stdcall put_LeadingDaySeparator (
        BSTR ppLeadingDaySeparator ) = 0;
    virtual HRESULT __stdcall get_DateFirstSeparator (
        BSTR * ppDateFirstSeparator ) = 0;
    virtual HRESULT __stdcall put_DateFirstSeparator (
        BSTR ppDateFirstSeparator ) = 0;
    virtual HRESULT __stdcall get_DateSecondSeparator (
        BSTR * ppDateSecondSeparator ) = 0;
    virtual HRESULT __stdcall put_DateSecondSeparator (
        BSTR ppDateSecondSeparator ) = 0;
    virtual HRESULT __stdcall get_TimeBase (
        enum CRTimeBase * pTimeBase ) = 0;
    virtual HRESULT __stdcall put_TimeBase (
        enum CRTimeBase pTimeBase ) = 0;
    virtual HRESULT __stdcall get_AmPmType (
        enum CRAmPmType * pAmPmType ) = 0;
    virtual HRESULT __stdcall put_AmPmType (
        enum CRAmPmType pAmPmType ) = 0;
    virtual HRESULT __stdcall get_HourType (
        enum CRHourType * pHourType ) = 0;
    virtual HRESULT __stdcall put_HourType (
        enum CRHourType pHourType ) = 0;
    virtual HRESULT __stdcall get_MinuteType (
        enum CRMinuteType * pMinuteType ) = 0;
    virtual HRESULT __stdcall put_MinuteType (
        enum CRMinuteType pMinuteType ) = 0;
    virtual HRESULT __stdcall get_SecondType (
        enum CRSecondType * pSecondType ) = 0;
    virtual HRESULT __stdcall put_SecondType (
        enum CRSecondType pSecondType ) = 0;
    virtual HRESULT __stdcall get_PmString (
        BSTR * ppPmString ) = 0;
    virtual HRESULT __stdcall put_PmString (
        BSTR ppPmString ) = 0;
    virtual HRESULT __stdcall get_AmString (
        BSTR * ppAmString ) = 0;
    virtual HRESULT __stdcall put_AmString (
        BSTR ppAmString ) = 0;
    virtual HRESULT __stdcall get_MinuteSecondSeparator (
        BSTR * ppMinuteSecondSeparator ) = 0;
    virtual HRESULT __stdcall put_MinuteSecondSeparator (
        BSTR ppMinuteSecondSeparator ) = 0;
    virtual HRESULT __stdcall get_HourMinuteSeparator (
        BSTR * ppHourMinuteSeparator ) = 0;
    virtual HRESULT __stdcall put_HourMinuteSeparator (
        BSTR ppHourMinuteSeparator ) = 0;
    virtual HRESULT __stdcall get_MaxNumberOfLines (
        short * pMaxNumberOfLines ) = 0;
    virtual HRESULT __stdcall put_MaxNumberOfLines (
        short pMaxNumberOfLines ) = 0;
    virtual HRESULT __stdcall get_LeadingDayPosition (
        enum CRLeadingDayPosition * pLeadingDayPosition ) = 0;
    virtual HRESULT __stdcall put_LeadingDayPosition (
        enum CRLeadingDayPosition pLeadingDayPosition ) = 0;
    virtual HRESULT __stdcall get_DateEraType (
        enum CRDateEraType * pDateEraType ) = 0;
    virtual HRESULT __stdcall put_DateEraType (
        enum CRDateEraType pDateEraType ) = 0;
    virtual HRESULT __stdcall get_DateCalendarType (
        enum CRDateCalendarType * pDateCalendarType ) = 0;
    virtual HRESULT __stdcall put_DateCalendarType (
        enum CRDateCalendarType pDateCalendarType ) = 0;
    virtual HRESULT __stdcall get_DatePrefixSeparator (
        BSTR * ppDatePrefixSeparator ) = 0;
    virtual HRESULT __stdcall put_DatePrefixSeparator (
        BSTR ppDatePrefixSeparator ) = 0;
    virtual HRESULT __stdcall get_DateSuffixSeparator (
        BSTR * ppDateSuffixSeparator ) = 0;
    virtual HRESULT __stdcall put_DateSuffixSeparator (
        BSTR ppDateSuffixSeparator ) = 0;
    virtual HRESULT __stdcall get_DisplayReverseSign (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_DisplayReverseSign (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_ZeroValueString (
        BSTR * ppZeroValue ) = 0;
    virtual HRESULT __stdcall put_ZeroValueString (
        BSTR ppZeroValue ) = 0;
    virtual HRESULT __stdcall get_CharacterSpacing (
        long * pCharacterSpacing ) = 0;
    virtual HRESULT __stdcall put_CharacterSpacing (
        long pCharacterSpacing ) = 0;
    virtual HRESULT __stdcall get_LineSpacing (
        double * pLineSpacing ) = 0;
    virtual HRESULT __stdcall get_LineSpacingType (
        enum CRLineSpacingType * pLineSpacingType ) = 0;
    virtual HRESULT __stdcall SetLineSpacing (
        double LineSpacing,
        enum CRLineSpacingType LineSpacingType ) = 0;
    virtual HRESULT __stdcall get_FirstLineIndent (
        long * pFirstLineIndent ) = 0;
    virtual HRESULT __stdcall put_FirstLineIndent (
        long pFirstLineIndent ) = 0;
    virtual HRESULT __stdcall get_LeftIndent (
        long * pLeftIndent ) = 0;
    virtual HRESULT __stdcall put_LeftIndent (
        long pLeftIndent ) = 0;
    virtual HRESULT __stdcall get_RightIndent (
        long * pRightIndent ) = 0;
    virtual HRESULT __stdcall put_RightIndent (
        long pRightIndent ) = 0;
    virtual HRESULT __stdcall get_TextFormat (
        enum CRTextFormat * pTextFormat ) = 0;
    virtual HRESULT __stdcall put_TextFormat (
        enum CRTextFormat pTextFormat ) = 0;
    virtual HRESULT __stdcall get_ConditionFormula (
        VARIANT FormulaType,
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_ConditionFormula (
        VARIANT FormulaType,
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall get_BeginPosition (
        long * pPosition ) = 0;
    virtual HRESULT __stdcall get_EndPosition (
        long * pPosition ) = 0;
};

struct __declspec(uuid("af37680d-6120-4e28-96dd-63fd2dc27b7a"))
IFieldDefinition : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Kind (
        enum CRFieldKind * pKind ) = 0;
    virtual HRESULT __stdcall get_ValueType (
        CRFieldValueType * pValueType ) = 0;
    virtual HRESULT __stdcall get_NumberOfBytes (
        short * pNumberOfBytes ) = 0;
    virtual HRESULT __stdcall get_Name (
        BSTR * pName ) = 0;
    virtual HRESULT __stdcall get_Value (
        VARIANT * pValue ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct IReport * * ppParent ) = 0;
    virtual HRESULT __stdcall get_PreviousValue (
        VARIANT * pPreValue ) = 0;
    virtual HRESULT __stdcall get_NextValue (
        VARIANT * pNextValue ) = 0;
    virtual HRESULT __stdcall get_UseCount (
        long * pCount ) = 0;
};

enum CRFieldKind
{
    crDatabaseField = 1,
    crFormulaField = 2,
    crSummaryField = 3,
    crSpecialVarField = 4,
    crGroupNameField = 5,
    crParameterField = 6,
    crRunningTotalField = 7,
    crSQLExpressionField = 8
};

enum __MIDL___MIDL_itf_crvb60r_0232_0001
{
    crInt8sField = 1,
    crInt8uField = 2,
    crInt16sField = 3,
    crInt16uField = 4,
    crInt32sField = 5,
    crInt32uField = 6,
    crNumberField = 7,
    crCurrencyField = 8,
    crBooleanField = 9,
    crDateField = 10,
    crTimeField = 11,
    crStringField = 12,
    crTransientMemoField = 13,
    crPersistentMemoField = 14,
    crBlobField = 15,
    crDateTimeField = 16,
    crBitmapField = 17,
    crIconField = 18,
    crPictureField = 19,
    crOleField = 20,
    crChartField = 21,
    crUnknownField = 22
};

struct __declspec(uuid("af376827-6120-4e28-96dd-63fd2dc27b7a"))
IBlobFieldObject : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Name (
        BSTR * ppName ) = 0;
    virtual HRESULT __stdcall put_Name (
        BSTR ppName ) = 0;
    virtual HRESULT __stdcall get_Kind (
        enum CRObjectKind * pObjectKind ) = 0;
    virtual HRESULT __stdcall get_Left (
        long * pLeft ) = 0;
    virtual HRESULT __stdcall put_Left (
        long pLeft ) = 0;
    virtual HRESULT __stdcall get_Top (
        long * pTop ) = 0;
    virtual HRESULT __stdcall put_Top (
        long pTop ) = 0;
    virtual HRESULT __stdcall get_Width (
        long * pWidth ) = 0;
    virtual HRESULT __stdcall put_Width (
        long pWidth ) = 0;
    virtual HRESULT __stdcall get_Height (
        long * pHeight ) = 0;
    virtual HRESULT __stdcall put_Height (
        long pHeight ) = 0;
    virtual HRESULT __stdcall get_LeftLineStyle (
        enum CRLineStyle * pLeftLineStyle ) = 0;
    virtual HRESULT __stdcall put_LeftLineStyle (
        enum CRLineStyle pLeftLineStyle ) = 0;
    virtual HRESULT __stdcall get_RightLineStyle (
        enum CRLineStyle * pRightLineStyle ) = 0;
    virtual HRESULT __stdcall put_RightLineStyle (
        enum CRLineStyle pRightLineStyle ) = 0;
    virtual HRESULT __stdcall get_TopLineStyle (
        enum CRLineStyle * pTopLineStyle ) = 0;
    virtual HRESULT __stdcall put_TopLineStyle (
        enum CRLineStyle pTopLineStyle ) = 0;
    virtual HRESULT __stdcall get_BottomLineStyle (
        enum CRLineStyle * pBottomLineStyle ) = 0;
    virtual HRESULT __stdcall put_BottomLineStyle (
        enum CRLineStyle pBottomLineStyle ) = 0;
    virtual HRESULT __stdcall get_HasDropShadow (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_HasDropShadow (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_BackColor (
        OLE_COLOR * pBackColor ) = 0;
    virtual HRESULT __stdcall put_BackColor (
        OLE_COLOR pBackColor ) = 0;
    virtual HRESULT __stdcall get_BorderColor (
        OLE_COLOR * pBorderColor ) = 0;
    virtual HRESULT __stdcall put_BorderColor (
        OLE_COLOR pBorderColor ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct ISection * * ppParent ) = 0;
    virtual HRESULT __stdcall get_Suppress (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_Suppress (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_CloseAtPageBreak (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_CloseAtPageBreak (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_KeepTogether (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_KeepTogether (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_LeftCropping (
        long * pLeftCropping ) = 0;
    virtual HRESULT __stdcall put_LeftCropping (
        long pLeftCropping ) = 0;
    virtual HRESULT __stdcall get_RightCropping (
        long * pRightCropping ) = 0;
    virtual HRESULT __stdcall put_RightCropping (
        long pRightCropping ) = 0;
    virtual HRESULT __stdcall get_TopCropping (
        long * pTopCropping ) = 0;
    virtual HRESULT __stdcall put_TopCropping (
        long pTopCropping ) = 0;
    virtual HRESULT __stdcall get_BottomCropping (
        long * pBottomCropping ) = 0;
    virtual HRESULT __stdcall put_BottomCropping (
        long pBottomCropping ) = 0;
    virtual HRESULT __stdcall get_XScaling (
        double * pXScaling ) = 0;
    virtual HRESULT __stdcall put_XScaling (
        double pXScaling ) = 0;
    virtual HRESULT __stdcall get_YScaling (
        double * pYScaling ) = 0;
    virtual HRESULT __stdcall put_YScaling (
        double pYScaling ) = 0;
    virtual HRESULT __stdcall get_Field (
        struct IDatabaseFieldDefinition * * ppDatabaseFieldDefinition ) = 0;
    virtual HRESULT __stdcall get_ConditionFormula (
        VARIANT FormulaType,
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_ConditionFormula (
        VARIANT FormulaType,
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall get_CssClass (
        BSTR * ppCssClass ) = 0;
    virtual HRESULT __stdcall put_CssClass (
        BSTR ppCssClass ) = 0;
};

struct __declspec(uuid("af37680e-6120-4e28-96dd-63fd2dc27b7a"))
IDatabaseFieldDefinition : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Kind (
        enum CRFieldKind * pKind ) = 0;
    virtual HRESULT __stdcall get_ValueType (
        CRFieldValueType * pValueType ) = 0;
    virtual HRESULT __stdcall get_NumberOfBytes (
        short * pNumberOfBytes ) = 0;
    virtual HRESULT __stdcall get_Name (
        BSTR * pName ) = 0;
    virtual HRESULT __stdcall get_Value (
        VARIANT * pValue ) = 0;
    virtual HRESULT __stdcall get_DatabaseFieldName (
        BSTR * ppDatabaseFieldName ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct IReport * * ppParent ) = 0;
    virtual HRESULT __stdcall get_PreviousValue (
        VARIANT * pPreValue ) = 0;
    virtual HRESULT __stdcall get_NextValue (
        VARIANT * pNextValue ) = 0;
    virtual HRESULT __stdcall get_TableAliasName (
        BSTR * ppTableAliasName ) = 0;
    virtual HRESULT __stdcall get_DatabaseFieldDisplayName (
        BSTR * ppDatabaseFieldDisplayName ) = 0;
};

enum CRSpecialVarType
{
    crSVTPrintDate = 0,
    crSVTPrintTime = 1,
    crSVTModificationDate = 2,
    crSVTModificationTime = 3,
    crSVTDataDate = 4,
    crSVTDataTime = 5,
    crSVTRecordNumber = 6,
    crSVTPageNumber = 7,
    crSVTGroupNumber = 8,
    crSVTTotalPageCount = 9,
    crSVTReportTitle = 10,
    crSVTReportComments = 11,
    crSVTRecordSelection = 12,
    crSVTGroupSelection = 13,
    crSVTFilename = 14,
    crSVTFileAuthor = 15,
    crSVTFileCreationDate = 16,
    crSVTPageNofM = 17
};

struct __declspec(uuid("af376810-6120-4e28-96dd-63fd2dc27b7a"))
ISubreportObject : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Name (
        BSTR * ppName ) = 0;
    virtual HRESULT __stdcall put_Name (
        BSTR ppName ) = 0;
    virtual HRESULT __stdcall get_Kind (
        enum CRObjectKind * pObjectKind ) = 0;
    virtual HRESULT __stdcall get_Left (
        long * pLeft ) = 0;
    virtual HRESULT __stdcall put_Left (
        long pLeft ) = 0;
    virtual HRESULT __stdcall get_Top (
        long * pTop ) = 0;
    virtual HRESULT __stdcall put_Top (
        long pTop ) = 0;
    virtual HRESULT __stdcall get_Width (
        long * pWidth ) = 0;
    virtual HRESULT __stdcall put_Width (
        long pWidth ) = 0;
    virtual HRESULT __stdcall get_Height (
        long * pHeight ) = 0;
    virtual HRESULT __stdcall put_Height (
        long pHeight ) = 0;
    virtual HRESULT __stdcall get_LeftLineStyle (
        enum CRLineStyle * pLeftLineStyle ) = 0;
    virtual HRESULT __stdcall put_LeftLineStyle (
        enum CRLineStyle pLeftLineStyle ) = 0;
    virtual HRESULT __stdcall get_RightLineStyle (
        enum CRLineStyle * pRightLineStyle ) = 0;
    virtual HRESULT __stdcall put_RightLineStyle (
        enum CRLineStyle pRightLineStyle ) = 0;
    virtual HRESULT __stdcall get_TopLineStyle (
        enum CRLineStyle * pTopLineStyle ) = 0;
    virtual HRESULT __stdcall put_TopLineStyle (
        enum CRLineStyle pTopLineStyle ) = 0;
    virtual HRESULT __stdcall get_BottomLineStyle (
        enum CRLineStyle * pBottomLineStyle ) = 0;
    virtual HRESULT __stdcall put_BottomLineStyle (
        enum CRLineStyle pBottomLineStyle ) = 0;
    virtual HRESULT __stdcall get_HasDropShadow (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_HasDropShadow (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_BackColor (
        OLE_COLOR * pBackColor ) = 0;
    virtual HRESULT __stdcall put_BackColor (
        OLE_COLOR pBackColor ) = 0;
    virtual HRESULT __stdcall get_BorderColor (
        OLE_COLOR * pBorderColor ) = 0;
    virtual HRESULT __stdcall put_BorderColor (
        OLE_COLOR pBorderColor ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct ISection * * ppParent ) = 0;
    virtual HRESULT __stdcall get_Suppress (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_Suppress (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_CloseAtPageBreak (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_CloseAtPageBreak (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_KeepTogether (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_KeepTogether (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_SubreportName (
        BSTR * ppSubreportName ) = 0;
    virtual HRESULT __stdcall put_SubreportName (
        BSTR ppSubreportName ) = 0;
    virtual HRESULT __stdcall OpenSubreport (
        struct IReport * * ppReport ) = 0;
    virtual HRESULT __stdcall get_CanGrow (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_CanGrow (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_EnableOnDemand (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall get_Links (
        struct ISubreportLinks * * ppLinks ) = 0;
    virtual HRESULT __stdcall ReimportSubreport (
        VARIANT_BOOL * pReimported ) = 0;
    virtual HRESULT __stdcall get_ConditionFormula (
        VARIANT FormulaType,
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_ConditionFormula (
        VARIANT FormulaType,
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall get_CssClass (
        BSTR * ppCssClass ) = 0;
    virtual HRESULT __stdcall put_CssClass (
        BSTR ppCssClass ) = 0;
};

struct __declspec(uuid("af37684e-6120-4e28-96dd-63fd2dc27b7a"))
ISubreportLinks : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppNewEnum ) = 0;
    virtual HRESULT __stdcall get_Item (
        long index,
        struct ISubreportLink * * ppSubreportLink ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * pCount ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct ISubreportObject * * ppParent ) = 0;
    virtual HRESULT __stdcall Add (
        VARIANT MainReportField,
        VARIANT SubreportField,
        struct ISubreportLink * * ppSubreportLink ) = 0;
    virtual HRESULT __stdcall Delete (
        long index ) = 0;
};

struct __declspec(uuid("af37684d-6120-4e28-96dd-63fd2dc27b7a"))
ISubreportLink : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Parent (
        struct ISubreportObject * * ppParent ) = 0;
    virtual HRESULT __stdcall get_MainReportField (
        struct IFieldDefinition * * ppFieldDefinition ) = 0;
    virtual HRESULT __stdcall get_SubreportField (
        struct IFieldDefinition * * ppFieldDefinition ) = 0;
};

struct __declspec(uuid("af376828-6120-4e28-96dd-63fd2dc27b7a"))
ILineObject : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Name (
        BSTR * ppName ) = 0;
    virtual HRESULT __stdcall put_Name (
        BSTR ppName ) = 0;
    virtual HRESULT __stdcall get_Kind (
        enum CRObjectKind * pObjectKind ) = 0;
    virtual HRESULT __stdcall get_Left (
        long * pLeft ) = 0;
    virtual HRESULT __stdcall put_Left (
        long pLeft ) = 0;
    virtual HRESULT __stdcall get_Top (
        long * pTop ) = 0;
    virtual HRESULT __stdcall put_Top (
        long pTop ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct ISection * * ppParent ) = 0;
    virtual HRESULT __stdcall get_Suppress (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_Suppress (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_LineColor (
        OLE_COLOR * pLineColor ) = 0;
    virtual HRESULT __stdcall put_LineColor (
        OLE_COLOR pLineColor ) = 0;
    virtual HRESULT __stdcall get_Right (
        long * pRight ) = 0;
    virtual HRESULT __stdcall put_Right (
        long pRight ) = 0;
    virtual HRESULT __stdcall get_Bottom (
        long * pBottom ) = 0;
    virtual HRESULT __stdcall put_Bottom (
        long pBottom ) = 0;
    virtual HRESULT __stdcall get_LineThickness (
        long * pLineThickness ) = 0;
    virtual HRESULT __stdcall put_LineThickness (
        long pLineThickness ) = 0;
    virtual HRESULT __stdcall get_ExtendToBottomOfSection (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_ExtendToBottomOfSection (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_LineStyle (
        enum CRLineStyle * pLineStyle ) = 0;
    virtual HRESULT __stdcall put_LineStyle (
        enum CRLineStyle pLineStyle ) = 0;
    virtual HRESULT __stdcall get_EndSection (
        struct ISection * * ppEndSection ) = 0;
    virtual HRESULT __stdcall get_ConditionFormula (
        VARIANT FormulaType,
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_ConditionFormula (
        VARIANT FormulaType,
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall get_CssClass (
        BSTR * ppCssClass ) = 0;
    virtual HRESULT __stdcall put_CssClass (
        BSTR ppCssClass ) = 0;
};

struct __declspec(uuid("af376829-6120-4e28-96dd-63fd2dc27b7a"))
IBoxObject : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Name (
        BSTR * ppName ) = 0;
    virtual HRESULT __stdcall put_Name (
        BSTR ppName ) = 0;
    virtual HRESULT __stdcall get_Kind (
        enum CRObjectKind * pObjectKind ) = 0;
    virtual HRESULT __stdcall get_Left (
        long * pLeft ) = 0;
    virtual HRESULT __stdcall put_Left (
        long pLeft ) = 0;
    virtual HRESULT __stdcall get_Top (
        long * pTop ) = 0;
    virtual HRESULT __stdcall put_Top (
        long pTop ) = 0;
    virtual HRESULT __stdcall get_Right (
        long * pRight ) = 0;
    virtual HRESULT __stdcall put_Right (
        long pRight ) = 0;
    virtual HRESULT __stdcall get_Bottom (
        long * pBottom ) = 0;
    virtual HRESULT __stdcall put_Bottom (
        long pBottom ) = 0;
    virtual HRESULT __stdcall get_LineStyle (
        enum CRLineStyle * pLineStyle ) = 0;
    virtual HRESULT __stdcall put_LineStyle (
        enum CRLineStyle pLineStyle ) = 0;
    virtual HRESULT __stdcall get_HasDropShadow (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_HasDropShadow (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_LineColor (
        OLE_COLOR * pLineColor ) = 0;
    virtual HRESULT __stdcall put_LineColor (
        OLE_COLOR pLineColor ) = 0;
    virtual HRESULT __stdcall get_FillColor (
        OLE_COLOR * pFillColor ) = 0;
    virtual HRESULT __stdcall put_FillColor (
        OLE_COLOR pFillColor ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct ISection * * ppParent ) = 0;
    virtual HRESULT __stdcall get_Suppress (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_Suppress (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_CloseAtPageBreak (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_CloseAtPageBreak (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_BottomRightSection (
        struct ISection * * ppBottomRightSection ) = 0;
    virtual HRESULT __stdcall get_LineThickness (
        long * pLineThickness ) = 0;
    virtual HRESULT __stdcall put_LineThickness (
        long pLineThickness ) = 0;
    virtual HRESULT __stdcall get_ExtendToBottomOfSection (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_ExtendToBottomOfSection (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_CornerEllipseHeight (
        long * pCornerEllipseHeight ) = 0;
    virtual HRESULT __stdcall put_CornerEllipseHeight (
        long pCornerEllipseHeight ) = 0;
    virtual HRESULT __stdcall get_CornerEllipseWidth (
        long * pCornerEllipseWidth ) = 0;
    virtual HRESULT __stdcall put_CornerEllipseWidth (
        long pCornerEllipseWidth ) = 0;
    virtual HRESULT __stdcall get_ConditionFormula (
        VARIANT FormulaType,
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_ConditionFormula (
        VARIANT FormulaType,
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall get_CssClass (
        BSTR * ppCssClass ) = 0;
    virtual HRESULT __stdcall put_CssClass (
        BSTR ppCssClass ) = 0;
};

struct __declspec(uuid("af37682a-6120-4e28-96dd-63fd2dc27b7a"))
ICrossTabObject : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Name (
        BSTR * ppName ) = 0;
    virtual HRESULT __stdcall put_Name (
        BSTR ppName ) = 0;
    virtual HRESULT __stdcall get_Kind (
        enum CRObjectKind * pObjectKind ) = 0;
    virtual HRESULT __stdcall get_Left (
        long * pLeft ) = 0;
    virtual HRESULT __stdcall put_Left (
        long pLeft ) = 0;
    virtual HRESULT __stdcall get_Top (
        long * pTop ) = 0;
    virtual HRESULT __stdcall put_Top (
        long pTop ) = 0;
    virtual HRESULT __stdcall get_Width (
        long * pWidth ) = 0;
    virtual HRESULT __stdcall get_Height (
        long * pHeight ) = 0;
    virtual HRESULT __stdcall get_LeftLineStyle (
        enum CRLineStyle * pLeftLineStyle ) = 0;
    virtual HRESULT __stdcall put_LeftLineStyle (
        enum CRLineStyle pLeftLineStyle ) = 0;
    virtual HRESULT __stdcall get_RightLineStyle (
        enum CRLineStyle * pRightLineStyle ) = 0;
    virtual HRESULT __stdcall put_RightLineStyle (
        enum CRLineStyle pRightLineStyle ) = 0;
    virtual HRESULT __stdcall get_TopLineStyle (
        enum CRLineStyle * pTopLineStyle ) = 0;
    virtual HRESULT __stdcall put_TopLineStyle (
        enum CRLineStyle pTopLineStyle ) = 0;
    virtual HRESULT __stdcall get_BottomLineStyle (
        enum CRLineStyle * pBottomLineStyle ) = 0;
    virtual HRESULT __stdcall put_BottomLineStyle (
        enum CRLineStyle pBottomLineStyle ) = 0;
    virtual HRESULT __stdcall get_HasDropShadow (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_HasDropShadow (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_BackColor (
        OLE_COLOR * pBackColor ) = 0;
    virtual HRESULT __stdcall put_BackColor (
        OLE_COLOR pBackColor ) = 0;
    virtual HRESULT __stdcall get_BorderColor (
        OLE_COLOR * pBorderColor ) = 0;
    virtual HRESULT __stdcall put_BorderColor (
        OLE_COLOR pBorderColor ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct ISection * * ppParent ) = 0;
    virtual HRESULT __stdcall get_Suppress (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_Suppress (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_CloseAtPageBreak (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_CloseAtPageBreak (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_KeepTogether (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_KeepTogether (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_SummaryFields (
        struct IObjectSummaryFieldDefinitions * * ppSummaryFields ) = 0;
    virtual HRESULT __stdcall get_RowGroups (
        struct ICrossTabGroups * * ppRowGroups ) = 0;
    virtual HRESULT __stdcall get_ColumnGroups (
        struct ICrossTabGroups * * ppColumnGroups ) = 0;
    virtual HRESULT __stdcall get_EnableShowGrid (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_EnableShowGrid (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_EnableShowCellMargins (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_EnableShowCellMargins (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_EnableSuppressEmptyRows (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_EnableSuppressEmptyRows (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_EnableSuppressEmptyColumns (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_EnableSuppressEmptyColumns (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_EnableKeepColumnsTogether (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_EnableKeepColumnsTogether (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_EnableSuppressRowGrandTotals (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_EnableSuppressRowGrandTotals (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_EnableSuppressColumnGrandTotals (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_EnableSuppressColumnGrandTotals (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_RowGrandTotalColor (
        OLE_COLOR * pColor ) = 0;
    virtual HRESULT __stdcall put_RowGrandTotalColor (
        OLE_COLOR pColor ) = 0;
    virtual HRESULT __stdcall get_ColumnGrandTotalColor (
        OLE_COLOR * pColor ) = 0;
    virtual HRESULT __stdcall put_ColumnGrandTotalColor (
        OLE_COLOR pColor ) = 0;
    virtual HRESULT __stdcall get_EnableRepeatRowLabels (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_EnableRepeatRowLabels (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_ConditionFormula (
        VARIANT FormulaType,
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_ConditionFormula (
        VARIANT FormulaType,
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall get_CssClass (
        BSTR * ppCssClass ) = 0;
    virtual HRESULT __stdcall put_CssClass (
        BSTR ppCssClass ) = 0;
};

struct __declspec(uuid("af376852-6120-4e28-96dd-63fd2dc27b7a"))
IObjectSummaryFieldDefinitions : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppNewEnum ) = 0;
    virtual HRESULT __stdcall get_Item (
        long index,
        struct ISummaryFieldDefinition * * ppSummaryField ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * pCount ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct IReportObject * * ppReportObject ) = 0;
    virtual HRESULT __stdcall Add (
        VARIANT summaryField ) = 0;
    virtual HRESULT __stdcall Delete (
        long index ) = 0;
};

struct __declspec(uuid("af376815-6120-4e28-96dd-63fd2dc27b7a"))
ISummaryFieldDefinition : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Kind (
        enum CRFieldKind * pKind ) = 0;
    virtual HRESULT __stdcall get_ValueType (
        CRFieldValueType * pValueType ) = 0;
    virtual HRESULT __stdcall get_NumberOfBytes (
        short * pNumberOfBytes ) = 0;
    virtual HRESULT __stdcall get_Name (
        BSTR * pName ) = 0;
    virtual HRESULT __stdcall get_Value (
        VARIANT * pValue ) = 0;
    virtual HRESULT __stdcall get_SummaryType (
        enum CRSummaryType * pSummaryType ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct IReport * * ppParent ) = 0;
    virtual HRESULT __stdcall get_PreviousValue (
        VARIANT * pPreValue ) = 0;
    virtual HRESULT __stdcall get_NextValue (
        VARIANT * pNextValue ) = 0;
    virtual HRESULT __stdcall get_HeaderArea (
        struct IArea * * ppArea ) = 0;
    virtual HRESULT __stdcall get_FooterArea (
        struct IArea * * ppArea ) = 0;
    virtual HRESULT __stdcall get_SummarizedField (
        IDispatch * * ppSummarizedField ) = 0;
    virtual HRESULT __stdcall SetSummarizedField (
        VARIANT SummarizedField ) = 0;
    virtual HRESULT __stdcall get_SecondarySummarizedField (
        IDispatch * * ppSummarizedField ) = 0;
    virtual HRESULT __stdcall SetSecondarySummarizedField (
        VARIANT secondarySummariedField ) = 0;
    virtual HRESULT __stdcall get_SummaryOperationParameter (
        long * pOperationParameter ) = 0;
    virtual HRESULT __stdcall put_SummaryOperationParameter (
        long pOperationParameter ) = 0;
    virtual HRESULT __stdcall put_SummaryType (
        enum CRSummaryType pSummaryType ) = 0;
    virtual HRESULT __stdcall get_ForCrossTab (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall get_HierarchicalSummaryType (
        enum CRHierarchicalSummaryType * pHierarchicalType ) = 0;
    virtual HRESULT __stdcall put_HierarchicalSummaryType (
        enum CRHierarchicalSummaryType pHierarchicalType ) = 0;
};

enum CRSummaryType
{
    crSTSum = 0,
    crSTAverage = 1,
    crSTSampleVariance = 2,
    crSTSampleStandardDeviation = 3,
    crSTMaximum = 4,
    crSTMinimum = 5,
    crSTCount = 6,
    crSTPopVariance = 7,
    crSTPopStandardDeviation = 8,
    crSTDistinctCount = 9,
    crSTDCorrelation = 10,
    crSTDCovariance = 11,
    crSTDWeightedAvg = 12,
    crSTDMedian = 13,
    crSTDPercentile = 14,
    crSTDNthLargest = 15,
    crSTDNthSmallest = 16,
    crSTDMode = 17,
    crSTDNthMostFrequent = 18,
    crSTDPercentage = 19
};

enum CRHierarchicalSummaryType
{
    crHierarchicalSummaryNone = 0,
    crSummaryAcrossHierarchy = 1
};

struct __declspec(uuid("af376808-6120-4e28-96dd-63fd2dc27b7a"))
IReportObject : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Name (
        BSTR * ppName ) = 0;
    virtual HRESULT __stdcall put_Name (
        BSTR ppName ) = 0;
    virtual HRESULT __stdcall get_Kind (
        enum CRObjectKind * pObjectKind ) = 0;
    virtual HRESULT __stdcall get_Left (
        long * pLeft ) = 0;
    virtual HRESULT __stdcall put_Left (
        long pLeft ) = 0;
    virtual HRESULT __stdcall get_Top (
        long * pTop ) = 0;
    virtual HRESULT __stdcall put_Top (
        long pTop ) = 0;
    virtual HRESULT __stdcall get_Width (
        long * pWidth ) = 0;
    virtual HRESULT __stdcall put_Width (
        long pWidth ) = 0;
    virtual HRESULT __stdcall get_Height (
        long * pHeight ) = 0;
    virtual HRESULT __stdcall put_Height (
        long pHeight ) = 0;
    virtual HRESULT __stdcall get_LeftLineStyle (
        enum CRLineStyle * pLeftLineStyle ) = 0;
    virtual HRESULT __stdcall put_LeftLineStyle (
        enum CRLineStyle pLeftLineStyle ) = 0;
    virtual HRESULT __stdcall get_RightLineStyle (
        enum CRLineStyle * pRightLineStyle ) = 0;
    virtual HRESULT __stdcall put_RightLineStyle (
        enum CRLineStyle pRightLineStyle ) = 0;
    virtual HRESULT __stdcall get_TopLineStyle (
        enum CRLineStyle * pTopLineStyle ) = 0;
    virtual HRESULT __stdcall put_TopLineStyle (
        enum CRLineStyle pTopLineStyle ) = 0;
    virtual HRESULT __stdcall get_BottomLineStyle (
        enum CRLineStyle * pBottomLineStyle ) = 0;
    virtual HRESULT __stdcall put_BottomLineStyle (
        enum CRLineStyle pBottomLineStyle ) = 0;
    virtual HRESULT __stdcall get_EnableTightHorizontal (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_EnableTightHorizontal (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_HasDropShadow (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_HasDropShadow (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_BackColor (
        OLE_COLOR * pBackColor ) = 0;
    virtual HRESULT __stdcall put_BackColor (
        OLE_COLOR pBackColor ) = 0;
    virtual HRESULT __stdcall get_BorderColor (
        OLE_COLOR * pBorderColor ) = 0;
    virtual HRESULT __stdcall put_BorderColor (
        OLE_COLOR pBorderColor ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct ISection * * ppParent ) = 0;
    virtual HRESULT __stdcall get_Suppress (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_Suppress (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_CloseAtPageBreak (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_CloseAtPageBreak (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_KeepTogether (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_KeepTogether (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_ConditionFormula (
        VARIANT FormulaType,
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_ConditionFormula (
        VARIANT FormulaType,
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall get_CssClass (
        BSTR * ppCssClass ) = 0;
    virtual HRESULT __stdcall put_CssClass (
        BSTR ppCssClass ) = 0;
};

struct __declspec(uuid("af37684f-6120-4e28-96dd-63fd2dc27b7a"))
ICrossTabGroups : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppNewEnum ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct ICrossTabObject * * ppCrossTabObject ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * pCount ) = 0;
    virtual HRESULT __stdcall get_Item (
        long index,
        struct ICrossTabGroup * * ppCrossTabGroup ) = 0;
    virtual HRESULT __stdcall Add (
        VARIANT Field,
        struct ICrossTabGroup * * ppCrossTabGroup ) = 0;
    virtual HRESULT __stdcall Delete (
        long index ) = 0;
};

struct __declspec(uuid("af376850-6120-4e28-96dd-63fd2dc27b7a"))
ICrossTabGroup : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Parent (
        struct ICrossTabObject * * ppCrossTabObject ) = 0;
    virtual HRESULT __stdcall get_Field (
        struct IFieldDefinition * * ppField ) = 0;
    virtual HRESULT __stdcall put_Field (
        VARIANT ppField ) = 0;
    virtual HRESULT __stdcall get_Condition (
        enum CRGroupCondition * pGroupCondition ) = 0;
    virtual HRESULT __stdcall put_Condition (
        enum CRGroupCondition pGroupCondition ) = 0;
    virtual HRESULT __stdcall get_SortDirection (
        enum CRSortDirection * pSortDirection ) = 0;
    virtual HRESULT __stdcall put_SortDirection (
        enum CRSortDirection pSortDirection ) = 0;
    virtual HRESULT __stdcall get_BackColor (
        OLE_COLOR * pBackColor ) = 0;
    virtual HRESULT __stdcall put_BackColor (
        OLE_COLOR pBackColor ) = 0;
    virtual HRESULT __stdcall get_EnableSuppressSubtotal (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_EnableSuppressSubtotal (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_EnableSuppressLabel (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_EnableSuppressLabel (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_SpecifiedGroups (
        VARIANT * pSpecifedGroupArray ) = 0;
    virtual HRESULT __stdcall put_SpecifiedGroups (
        VARIANT * pSpecifedGroupArray ) = 0;
};

enum CRGroupCondition
{
    crGCDaily = 0,
    crGCWeekly = 1,
    crGCBiweekly = 2,
    crGCSemimonthly = 3,
    crGCMonthly = 4,
    crGCQuarterly = 5,
    crGCSemiAnnually = 6,
    crGCAnnually = 7,
    crGCToYes = 8,
    crGCToNo = 9,
    crGCEveryYes = 10,
    crGCEveryNo = 11,
    crGCNextIsYes = 12,
    crGCNextIsNo = 13,
    crGCAnyValue = 14,
    crGCBySecond = 15,
    crGCByMinute = 16,
    crGCByHour = 17,
    crGCByAMPM = 18
};

enum CRSortDirection
{
    crAscendingOrder = 0,
    crDescendingOrder = 1,
    crOriginalOrder = 2,
    crSpecifiedOrder = 3
};

struct __declspec(uuid("af376826-6120-4e28-96dd-63fd2dc27b7a"))
ICROleObject : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Name (
        BSTR * ppName ) = 0;
    virtual HRESULT __stdcall put_Name (
        BSTR ppName ) = 0;
    virtual HRESULT __stdcall get_Kind (
        enum CRObjectKind * pObjectKind ) = 0;
    virtual HRESULT __stdcall get_Left (
        long * pLeft ) = 0;
    virtual HRESULT __stdcall put_Left (
        long pLeft ) = 0;
    virtual HRESULT __stdcall get_Top (
        long * pTop ) = 0;
    virtual HRESULT __stdcall put_Top (
        long pTop ) = 0;
    virtual HRESULT __stdcall get_Width (
        long * pWidth ) = 0;
    virtual HRESULT __stdcall put_Width (
        long pWidth ) = 0;
    virtual HRESULT __stdcall get_Height (
        long * pHeight ) = 0;
    virtual HRESULT __stdcall put_Height (
        long pHeight ) = 0;
    virtual HRESULT __stdcall get_LeftLineStyle (
        enum CRLineStyle * pLeftLineStyle ) = 0;
    virtual HRESULT __stdcall put_LeftLineStyle (
        enum CRLineStyle pLeftLineStyle ) = 0;
    virtual HRESULT __stdcall get_RightLineStyle (
        enum CRLineStyle * pRightLineStyle ) = 0;
    virtual HRESULT __stdcall put_RightLineStyle (
        enum CRLineStyle pRightLineStyle ) = 0;
    virtual HRESULT __stdcall get_TopLineStyle (
        enum CRLineStyle * pTopLineStyle ) = 0;
    virtual HRESULT __stdcall put_TopLineStyle (
        enum CRLineStyle pTopLineStyle ) = 0;
    virtual HRESULT __stdcall get_BottomLineStyle (
        enum CRLineStyle * pBottomLineStyle ) = 0;
    virtual HRESULT __stdcall put_BottomLineStyle (
        enum CRLineStyle pBottomLineStyle ) = 0;
    virtual HRESULT __stdcall get_HasDropShadow (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_HasDropShadow (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_BackColor (
        OLE_COLOR * pBackColor ) = 0;
    virtual HRESULT __stdcall put_BackColor (
        OLE_COLOR pBackColor ) = 0;
    virtual HRESULT __stdcall get_BorderColor (
        OLE_COLOR * pBorderColor ) = 0;
    virtual HRESULT __stdcall put_BorderColor (
        OLE_COLOR pBorderColor ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct ISection * * ppParent ) = 0;
    virtual HRESULT __stdcall get_Suppress (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_Suppress (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_CloseAtPageBreak (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_CloseAtPageBreak (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_KeepTogether (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_KeepTogether (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_LeftCropping (
        long * pLeftCropping ) = 0;
    virtual HRESULT __stdcall put_LeftCropping (
        long pLeftCropping ) = 0;
    virtual HRESULT __stdcall get_RightCropping (
        long * pRightCropping ) = 0;
    virtual HRESULT __stdcall put_RightCropping (
        long pRightCropping ) = 0;
    virtual HRESULT __stdcall get_TopCropping (
        long * pTopCropping ) = 0;
    virtual HRESULT __stdcall put_TopCropping (
        long pTopCropping ) = 0;
    virtual HRESULT __stdcall get_BottomCropping (
        long * pBottomCropping ) = 0;
    virtual HRESULT __stdcall put_BottomCropping (
        long pBottomCropping ) = 0;
    virtual HRESULT __stdcall get_XScaling (
        double * pXScaling ) = 0;
    virtual HRESULT __stdcall put_XScaling (
        double pXScaling ) = 0;
    virtual HRESULT __stdcall get_YScaling (
        double * pYScaling ) = 0;
    virtual HRESULT __stdcall put_YScaling (
        double pYScaling ) = 0;
    virtual HRESULT __stdcall get_FormattedPicture (
        IPictureDisp * * ppPicture ) = 0;
    virtual HRESULT __stdcall putref_FormattedPicture (
        IPictureDisp * ppPicture ) = 0;
    virtual HRESULT __stdcall SetOleLocation (
        BSTR pLocation ) = 0;
    virtual HRESULT __stdcall get_ConditionFormula (
        VARIANT FormulaType,
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_ConditionFormula (
        VARIANT FormulaType,
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall GetLinkSource (
        BSTR * pLinkSource ) = 0;
    virtual HRESULT __stdcall get_CssClass (
        BSTR * ppCssClass ) = 0;
    virtual HRESULT __stdcall put_CssClass (
        BSTR ppCssClass ) = 0;
};

enum CRGraphDataType
{
    crGroupGraph = 0,
    crDetailGraph = 1,
    crCrossTabGraph = 2,
    crOlapGraph = 3
};

struct __declspec(uuid("af376824-6120-4e28-96dd-63fd2dc27b7a"))
IGraphObject : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Name (
        BSTR * ppName ) = 0;
    virtual HRESULT __stdcall put_Name (
        BSTR ppName ) = 0;
    virtual HRESULT __stdcall get_Kind (
        enum CRObjectKind * pObjectKind ) = 0;
    virtual HRESULT __stdcall get_Left (
        long * pLeft ) = 0;
    virtual HRESULT __stdcall put_Left (
        long pLeft ) = 0;
    virtual HRESULT __stdcall get_Top (
        long * pTop ) = 0;
    virtual HRESULT __stdcall put_Top (
        long pTop ) = 0;
    virtual HRESULT __stdcall get_Width (
        long * pWidth ) = 0;
    virtual HRESULT __stdcall put_Width (
        long pWidth ) = 0;
    virtual HRESULT __stdcall get_Height (
        long * pHeight ) = 0;
    virtual HRESULT __stdcall put_Height (
        long pHeight ) = 0;
    virtual HRESULT __stdcall get_LeftLineStyle (
        enum CRLineStyle * pLeftLineStyle ) = 0;
    virtual HRESULT __stdcall put_LeftLineStyle (
        enum CRLineStyle pLeftLineStyle ) = 0;
    virtual HRESULT __stdcall get_RightLineStyle (
        enum CRLineStyle * pRightLineStyle ) = 0;
    virtual HRESULT __stdcall put_RightLineStyle (
        enum CRLineStyle pRightLineStyle ) = 0;
    virtual HRESULT __stdcall get_TopLineStyle (
        enum CRLineStyle * pTopLineStyle ) = 0;
    virtual HRESULT __stdcall put_TopLineStyle (
        enum CRLineStyle pTopLineStyle ) = 0;
    virtual HRESULT __stdcall get_BottomLineStyle (
        enum CRLineStyle * pBottomLineStyle ) = 0;
    virtual HRESULT __stdcall put_BottomLineStyle (
        enum CRLineStyle pBottomLineStyle ) = 0;
    virtual HRESULT __stdcall get_HasDropShadow (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_HasDropShadow (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_BackColor (
        OLE_COLOR * pBackColor ) = 0;
    virtual HRESULT __stdcall put_BackColor (
        OLE_COLOR pBackColor ) = 0;
    virtual HRESULT __stdcall get_BorderColor (
        OLE_COLOR * pBorderColor ) = 0;
    virtual HRESULT __stdcall put_BorderColor (
        OLE_COLOR pBorderColor ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct ISection * * ppParent ) = 0;
    virtual HRESULT __stdcall get_Suppress (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_Suppress (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_CloseAtPageBreak (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_CloseAtPageBreak (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_KeepTogether (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_KeepTogether (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_DataType (
        enum CRGraphDataType * pDataType ) = 0;
    virtual HRESULT __stdcall get_GraphType (
        enum CRGraphType * pGraphType ) = 0;
    virtual HRESULT __stdcall put_GraphType (
        enum CRGraphType pGraphType ) = 0;
    virtual HRESULT __stdcall get_Title (
        BSTR * ppTitle ) = 0;
    virtual HRESULT __stdcall put_Title (
        BSTR ppTitle ) = 0;
    virtual HRESULT __stdcall get_SubTitle (
        BSTR * ppSubTitle ) = 0;
    virtual HRESULT __stdcall put_SubTitle (
        BSTR ppSubTitle ) = 0;
    virtual HRESULT __stdcall get_FootNote (
        BSTR * ppFootNote ) = 0;
    virtual HRESULT __stdcall put_FootNote (
        BSTR ppFootNote ) = 0;
    virtual HRESULT __stdcall get_GroupsTitle (
        BSTR * ppGroupsTitle ) = 0;
    virtual HRESULT __stdcall put_GroupsTitle (
        BSTR ppGroupsTitle ) = 0;
    virtual HRESULT __stdcall get_SeriesTitle (
        BSTR * ppSeriesTitle ) = 0;
    virtual HRESULT __stdcall put_SeriesTitle (
        BSTR ppSeriesTitle ) = 0;
    virtual HRESULT __stdcall get_XAxisTitle (
        BSTR * ppXAxisTitle ) = 0;
    virtual HRESULT __stdcall put_XAxisTitle (
        BSTR ppXAxisTitle ) = 0;
    virtual HRESULT __stdcall get_YAxisTitle (
        BSTR * ppYAxisTitle ) = 0;
    virtual HRESULT __stdcall put_YAxisTitle (
        BSTR ppYAxisTitle ) = 0;
    virtual HRESULT __stdcall get_Y2AxisTitle (
        BSTR * ppY2AxisTitle ) = 0;
    virtual HRESULT __stdcall put_Y2AxisTitle (
        BSTR ppY2AxisTitle ) = 0;
    virtual HRESULT __stdcall get_MaxDataAxisValue (
        double * pMaxDataAxisValue ) = 0;
    virtual HRESULT __stdcall put_MaxDataAxisValue (
        double pMaxDataAxisValue ) = 0;
    virtual HRESULT __stdcall get_MinDataAxisValue (
        double * pMinDataAxisValue ) = 0;
    virtual HRESULT __stdcall put_MinDataAxisValue (
        double pMinDataAxisValue ) = 0;
    virtual HRESULT __stdcall get_MaxData2AxisValue (
        double * pMaxData2AxisValue ) = 0;
    virtual HRESULT __stdcall put_MaxData2AxisValue (
        double pMaxData2AxisValue ) = 0;
    virtual HRESULT __stdcall get_MinData2AxisValue (
        double * pMinData2AxisValue ) = 0;
    virtual HRESULT __stdcall put_MinData2AxisValue (
        double pMinData2AxisValue ) = 0;
    virtual HRESULT __stdcall get_MaxSeriesAxisValue (
        double * pMaxSeriesAxisValue ) = 0;
    virtual HRESULT __stdcall put_MaxSeriesAxisValue (
        double pMaxSeriesAxisValue ) = 0;
    virtual HRESULT __stdcall get_MinSeriesAxisValue (
        double * pMinSeriesAxisValue ) = 0;
    virtual HRESULT __stdcall put_MinSeriesAxisValue (
        double pMinSeriesAxisValue ) = 0;
    virtual HRESULT __stdcall get_DataPoint (
        enum CRGraphDataPoint * pDataPoint ) = 0;
    virtual HRESULT __stdcall put_DataPoint (
        enum CRGraphDataPoint pDataPoint ) = 0;
    virtual HRESULT __stdcall get_GroupAxisGridline (
        enum CRGridlineType * pGroupAxisGridline ) = 0;
    virtual HRESULT __stdcall put_GroupAxisGridline (
        enum CRGridlineType pGroupAxisGridline ) = 0;
    virtual HRESULT __stdcall get_SeriesAxisGridline (
        enum CRGridlineType * pSeriesAxisGridline ) = 0;
    virtual HRESULT __stdcall put_SeriesAxisGridline (
        enum CRGridlineType pSeriesAxisGridline ) = 0;
    virtual HRESULT __stdcall get_DataAxisGridline (
        enum CRGridlineType * pDataAxisGridline ) = 0;
    virtual HRESULT __stdcall put_DataAxisGridline (
        enum CRGridlineType pDataAxisGridline ) = 0;
    virtual HRESULT __stdcall get_Data2AxisGridline (
        enum CRGridlineType * pData2AxisGridline ) = 0;
    virtual HRESULT __stdcall put_Data2AxisGridline (
        enum CRGridlineType pData2AxisGridline ) = 0;
    virtual HRESULT __stdcall get_EnableShowLegend (
        VARIANT_BOOL * pEnableShowLegend ) = 0;
    virtual HRESULT __stdcall put_EnableShowLegend (
        VARIANT_BOOL pEnableShowLegend ) = 0;
    virtual HRESULT __stdcall get_LegendPosition (
        enum CRLegendPosition * pLegendPosition ) = 0;
    virtual HRESULT __stdcall put_LegendPosition (
        enum CRLegendPosition pLegendPosition ) = 0;
    virtual HRESULT __stdcall get_GraphDirection (
        enum CRGraphDirection * pDirection ) = 0;
    virtual HRESULT __stdcall put_GraphDirection (
        enum CRGraphDirection pDirection ) = 0;
    virtual HRESULT __stdcall get_PieSize (
        enum CRPieSize * pPieSize ) = 0;
    virtual HRESULT __stdcall put_PieSize (
        enum CRPieSize pPieSize ) = 0;
    virtual HRESULT __stdcall get_SliceDetachment (
        enum CRSliceDetachment * pSliceDetachment ) = 0;
    virtual HRESULT __stdcall put_SliceDetachment (
        enum CRSliceDetachment pSliceDetachment ) = 0;
    virtual HRESULT __stdcall get_BarSize (
        enum CRBarSize * pBarSize ) = 0;
    virtual HRESULT __stdcall put_BarSize (
        enum CRBarSize pBarSize ) = 0;
    virtual HRESULT __stdcall get_MarkerSize (
        enum CRMarkerSize * pMarkerSize ) = 0;
    virtual HRESULT __stdcall put_MarkerSize (
        enum CRMarkerSize pMarkerSize ) = 0;
    virtual HRESULT __stdcall get_MarkerShape (
        enum CRMarkerShape * pMarkerShape ) = 0;
    virtual HRESULT __stdcall put_MarkerShape (
        enum CRMarkerShape pMarkerShape ) = 0;
    virtual HRESULT __stdcall get_DataAxisNumberFormat (
        enum CRNumberFormat * pDataAxisNumberFormat ) = 0;
    virtual HRESULT __stdcall put_DataAxisNumberFormat (
        enum CRNumberFormat pDataAxisNumberFormat ) = 0;
    virtual HRESULT __stdcall get_Data2AxisNumberFormat (
        enum CRNumberFormat * pData2AxisNumberFormat ) = 0;
    virtual HRESULT __stdcall put_Data2AxisNumberFormat (
        enum CRNumberFormat pData2AxisNumberFormat ) = 0;
    virtual HRESULT __stdcall get_SeriesAxisNumberFormat (
        enum CRNumberFormat * pSeriesAxisNumberFormat ) = 0;
    virtual HRESULT __stdcall put_SeriesAxisNumberFormat (
        enum CRNumberFormat pSeriesAxisNumberFormat ) = 0;
    virtual HRESULT __stdcall get_AutoRangeDataAxis (
        VARIANT_BOOL * pAutoRangeDataAxis ) = 0;
    virtual HRESULT __stdcall put_AutoRangeDataAxis (
        VARIANT_BOOL pAutoRangeDataAxis ) = 0;
    virtual HRESULT __stdcall get_AutoRangeData2Axis (
        VARIANT_BOOL * pAutoRangeData2Axis ) = 0;
    virtual HRESULT __stdcall put_AutoRangeData2Axis (
        VARIANT_BOOL pAutoRangeData2Axis ) = 0;
    virtual HRESULT __stdcall get_AutoRangeSeriesAxis (
        VARIANT_BOOL * pAutoRangeSeriesAxis ) = 0;
    virtual HRESULT __stdcall put_AutoRangeSeriesAxis (
        VARIANT_BOOL pAutoRangeSeriesAxis ) = 0;
    virtual HRESULT __stdcall get_DataAxisDivisionMethod (
        enum CRDivisionMethod * pDataAxisDivisionMethod ) = 0;
    virtual HRESULT __stdcall put_DataAxisDivisionMethod (
        enum CRDivisionMethod pDataAxisDivisionMethod ) = 0;
    virtual HRESULT __stdcall get_Data2AxisDivisionMethod (
        enum CRDivisionMethod * pData2AxisDivisionMethod ) = 0;
    virtual HRESULT __stdcall put_Data2AxisDivisionMethod (
        enum CRDivisionMethod pData2AxisDivisionMethod ) = 0;
    virtual HRESULT __stdcall get_SeriesAxisDivisionMethod (
        enum CRDivisionMethod * pSeriesAxisDivisionMethod ) = 0;
    virtual HRESULT __stdcall put_SeriesAxisDivisionMethod (
        enum CRDivisionMethod pSeriesAxisDivisionMethod ) = 0;
    virtual HRESULT __stdcall get_DataAxisDivisionNumber (
        long * pDataAxisDivisionNumber ) = 0;
    virtual HRESULT __stdcall put_DataAxisDivisionNumber (
        long pDataAxisDivisionNumber ) = 0;
    virtual HRESULT __stdcall get_Data2AxisDivisionNumber (
        long * pData2AxisDivisionNumber ) = 0;
    virtual HRESULT __stdcall put_Data2AxisDivisionNumber (
        long pData2AxisDivisionNumber ) = 0;
    virtual HRESULT __stdcall get_SeriesAxisDivisionNumber (
        long * pSeriesAxisDivisionNumber ) = 0;
    virtual HRESULT __stdcall put_SeriesAxisDivisionNumber (
        long pSeriesAxisDivisionNumber ) = 0;
    virtual HRESULT __stdcall get_GraphColor (
        enum CRGraphColor * pGraphColor ) = 0;
    virtual HRESULT __stdcall put_GraphColor (
        enum CRGraphColor pGraphColor ) = 0;
    virtual HRESULT __stdcall get_DataValueNumberFormat (
        enum CRNumberFormat * pDataValueNumberFormat ) = 0;
    virtual HRESULT __stdcall put_DataValueNumberFormat (
        enum CRNumberFormat pDataValueNumberFormat ) = 0;
    virtual HRESULT __stdcall get_ViewingAngle (
        enum CRViewingAngle * pViewingAngle ) = 0;
    virtual HRESULT __stdcall put_ViewingAngle (
        enum CRViewingAngle pViewingAngle ) = 0;
    virtual HRESULT __stdcall get_ZAxisTitle (
        BSTR * ppZAxisTitle ) = 0;
    virtual HRESULT __stdcall put_ZAxisTitle (
        BSTR ppZAxisTitle ) = 0;
    virtual HRESULT __stdcall get_ConditionFields (
        struct IFieldDefinitions * * ppConditionFields ) = 0;
    virtual HRESULT __stdcall get_SummaryFields (
        struct IObjectSummaryFieldDefinitions * * ppSummaryFields ) = 0;
    virtual HRESULT __stdcall get_EnableForEachRecord (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_EnableForEachRecord (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_EnableSummarizeValues (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_EnableSummarizeValues (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_CrossTabObject (
        struct ICrossTabObject * * ppCrossTabObject ) = 0;
    virtual HRESULT __stdcall get_TitleFont (
        IFontDisp * * ppFont ) = 0;
    virtual HRESULT __stdcall putref_TitleFont (
        IFontDisp * ppFont ) = 0;
    virtual HRESULT __stdcall get_SubTitleFont (
        IFontDisp * * ppFont ) = 0;
    virtual HRESULT __stdcall putref_SubTitleFont (
        IFontDisp * ppFont ) = 0;
    virtual HRESULT __stdcall get_FootnoteFont (
        IFontDisp * * ppFont ) = 0;
    virtual HRESULT __stdcall putref_FootnoteFont (
        IFontDisp * ppFont ) = 0;
    virtual HRESULT __stdcall get_GroupTitleFont (
        IFontDisp * * ppFont ) = 0;
    virtual HRESULT __stdcall putref_GroupTitleFont (
        IFontDisp * ppFont ) = 0;
    virtual HRESULT __stdcall get_DataTitleFont (
        IFontDisp * * ppFont ) = 0;
    virtual HRESULT __stdcall putref_DataTitleFont (
        IFontDisp * ppFont ) = 0;
    virtual HRESULT __stdcall get_SeriesTitleFont (
        IFontDisp * * ppFont ) = 0;
    virtual HRESULT __stdcall putref_SeriesTitleFont (
        IFontDisp * ppFont ) = 0;
    virtual HRESULT __stdcall get_LegendFont (
        IFontDisp * * ppFont ) = 0;
    virtual HRESULT __stdcall putref_LegendFont (
        IFontDisp * ppFont ) = 0;
    virtual HRESULT __stdcall get_GroupLabelFont (
        IFontDisp * * ppFont ) = 0;
    virtual HRESULT __stdcall putref_GroupLabelFont (
        IFontDisp * ppFont ) = 0;
    virtual HRESULT __stdcall get_DataLabelFont (
        IFontDisp * * ppFont ) = 0;
    virtual HRESULT __stdcall putref_DataLabelFont (
        IFontDisp * ppFont ) = 0;
    virtual HRESULT __stdcall get_SeriesLabelFont (
        IFontDisp * * ppFont ) = 0;
    virtual HRESULT __stdcall putref_SeriesLabelFont (
        IFontDisp * ppFont ) = 0;
    virtual HRESULT __stdcall get_IsTitleByDefault (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_IsTitleByDefault (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_IsSubTitleByDefault (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_IsSubTitleByDefault (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_IsFootnoteByDefault (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_IsFootnoteByDefault (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_IsXAxisTitleByDefault (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_IsXAxisTitleByDefault (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_IsYAxisTitleByDefault (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_IsYAxisTitleByDefault (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_IsZAxisTitleByDefault (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_IsZAxisTitleByDefault (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_EnableAutoScaleDataAxis (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_EnableAutoScaleDataAxis (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_EnableAutoScaleData2Axis (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_EnableAutoScaleData2Axis (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_EnableAutoScaleSeriesAxis (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_EnableAutoScaleSeriesAxis (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_LegendLayout (
        enum CRPieLegendLayout * pLegendLayout ) = 0;
    virtual HRESULT __stdcall put_LegendLayout (
        enum CRPieLegendLayout pLegendLayout ) = 0;
    virtual HRESULT __stdcall get_ConditionFieldSortOrder (
        int index,
        enum CRSortDirection * pSortOrder ) = 0;
    virtual HRESULT __stdcall put_ConditionFieldSortOrder (
        int index,
        enum CRSortDirection pSortOrder ) = 0;
    virtual HRESULT __stdcall get_SpecifiedGroups (
        int index,
        VARIANT * pSpecifedGroupArray ) = 0;
    virtual HRESULT __stdcall put_SpecifiedGroups (
        int index,
        VARIANT pSpecifedGroupArray ) = 0;
    virtual HRESULT __stdcall get_DataTitle (
        BSTR * ppDataTitle ) = 0;
    virtual HRESULT __stdcall put_DataTitle (
        BSTR ppDataTitle ) = 0;
    virtual HRESULT __stdcall get_Data2Title (
        BSTR * ppData2Title ) = 0;
    virtual HRESULT __stdcall put_Data2Title (
        BSTR ppData2Title ) = 0;
    virtual HRESULT __stdcall get_IsGroupsTitleByDefault (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_IsGroupsTitleByDefault (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_IsSeriesTitleByDefault (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_IsSeriesTitleByDefault (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_IsDataTitleByDefault (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_IsDataTitleByDefault (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_IsData2TitleByDefault (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_IsData2TitleByDefault (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_Data2TitleFont (
        IFontDisp * * ppFont ) = 0;
    virtual HRESULT __stdcall putref_Data2TitleFont (
        IFontDisp * ppFont ) = 0;
    virtual HRESULT __stdcall get_Data2LabelFont (
        IFontDisp * * ppFont ) = 0;
    virtual HRESULT __stdcall putref_Data2LabelFont (
        IFontDisp * ppFont ) = 0;
    virtual HRESULT __stdcall get_ConditionFormula (
        VARIANT FormulaType,
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_ConditionFormula (
        VARIANT FormulaType,
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall get_CssClass (
        BSTR * ppCssClass ) = 0;
    virtual HRESULT __stdcall put_CssClass (
        BSTR ppCssClass ) = 0;
};

enum CRGraphType
{
    crSideBySideBarGraph = 0,
    crStackedBarGraph = 1,
    crPercentBarGraph = 2,
    crFaked3DSideBySideBarGraph = 3,
    crFaked3DStackedBarGraph = 4,
    crFaked3DPercentBarGraph = 5,
    crRegularLineGraph = 10,
    crStackedLineGraph = 11,
    crPercentageLineGraph = 12,
    crLineGraphWithMarkers = 13,
    crStackedLineGraphWithMarkers = 14,
    crPercentageLineGraphWithMarkers = 15,
    crStackedAreaGraph = 21,
    crPercentAreaGraph = 22,
    crFaked3DStackedAreaGraph = 24,
    crFaked3DPercentAreaGraph = 25,
    crRegularPieGraph = 30,
    crFaked3DRegularPieGraph = 31,
    crMultiplePieGraph = 32,
    crMultipleProportionalPieGraph = 33,
    crRegularDoughnutGraph = 40,
    crMultipleDoughnutGraph = 41,
    crMultipleProportionalDoughnutGraph = 42,
    crThreeDRegularGraph = 50,
    crThreeDPyramidGraph = 51,
    crThreeDOctagonGraph = 52,
    crThreeDCutCornersGraph = 53,
    crThreeDSurfaceRegularGraph = 60,
    crThreeDSurfaceWithSidesGraph = 61,
    crThreeDSurfaceHoneycombGraph = 62,
    crXyScatterGraph = 70,
    crRegularRadarGraph = 80,
    crStackedRadarGraph = 81,
    crRegularBubbleGraph = 90,
    crHighLowGraph = 100,
    crHighLowOpenCloseGraph = 104,
    crUnknownGraph = 1000
};

enum CRGraphDataPoint
{
    crNone = 0,
    crShowLabel = 1,
    crShowValue = 2
};

enum CRGridlineType
{
    crNoGridlines = 0,
    crMinorGridlines = 1,
    crMajorGridlines = 2,
    crMajorAndMinorGridlines = 3
};

enum CRLegendPosition
{
    crPlaceRight = 4,
    crPlaceLeft = 5,
    crPlaceBottom = 6,
    crPlaceCustom = 7
};

enum CRGraphDirection
{
    crHorizontalGraph = 0,
    crVerticalGraph = 1
};

enum CRPieSize
{
    crMinimumPieSize = 64,
    crSmallPieSize = 48,
    crAveragePieSize = 32,
    crLargePieSize = 16,
    crMaximumPieSize = 0
};

enum CRSliceDetachment
{
    crNoDetachment = 0,
    crSmallestSlice = 1,
    crLargestSlice = 2
};

enum CRBarSize
{
    crMinimumBarSize = 0,
    crSmallBarSize = 1,
    crAverageBarSize = 2,
    crLargeBarSize = 3,
    crMaximumBarSize = 4
};

enum CRMarkerSize
{
    crSmallMarkers = 0,
    crMediumSmallMarkers = 1,
    crMediumMarkers = 2,
    crMediumLargeMarkers = 3,
    crLargeMarkers = 4
};

enum CRMarkerShape
{
    crRectangleShape = 1,
    crCircleShape = 4,
    crDiamondShape = 5,
    crTriangleShape = 8
};

enum CRNumberFormat
{
    crNoDecimal = 0,
    crOneDecimal = 1,
    crTwoDecimal = 2,
    crCurrencyNoDecimal = 3,
    crCurrencyTwoDecimal = 4,
    crPercentNoDecimal = 5,
    crPercentOneDecimal = 6,
    crPercentTwoDecimal = 7,
    crCustomNumberFormat = 8,
    crThousandsNoDecimal = 9,
    crMillionsNoDecimal = 10,
    crCurrencyThousands = 11,
    crCurrencyMillions = 12
};

enum CRDivisionMethod
{
    crAutomaticDivision = 0,
    crManualDivision = 1
};

enum CRGraphColor
{
    crColorGraph = 0,
    crBlackAndWhiteGraph = 1
};

enum CRViewingAngle
{
    crStandardView = 1,
    crTallView = 2,
    crTopView = 3,
    crDistortedView = 4,
    crShortView = 5,
    crGroupEyeView = 6,
    crGroupEmphasisView = 7,
    crFewSeriesView = 8,
    crFewGroupsView = 9,
    crDistortedStdView = 10,
    crThickGroupsView = 11,
    crShorterView = 12,
    crThickSeriesView = 13,
    crThickStdView = 14,
    crBirdsEyeView = 15,
    crMaxView = 16
};

struct __declspec(uuid("af376851-6120-4e28-96dd-63fd2dc27b7a"))
IFieldDefinitions : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppNewEnum ) = 0;
    virtual HRESULT __stdcall get_Item (
        long index,
        struct IFieldDefinition * * ppFieldDefinition ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * pCount ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct IReportObject * * ppReportObject ) = 0;
    virtual HRESULT __stdcall Add (
        VARIANT Field ) = 0;
    virtual HRESULT __stdcall Delete (
        VARIANT Field ) = 0;
};

enum CRPieLegendLayout
{
    crPercentLayout = 0,
    crAmountLayout = 1,
    crBothLayout = 2,
    crNoneLayout = 3
};

enum CRTopBottomNGroupSortOrder
{
    crAllGroupsUnsorted = 0,
    crAllGroupsSorted = 1,
    crTopNGroups = 2,
    crBottomNGroups = 3,
    crUnknownGroupsSortOrder = 10
};

enum CRConvertDateTimeType
{
    crConvertDateTimeToString = 0,
    crConvertDateTimeToDate = 1,
    crKeepDateTimeType = 2
};

struct __declspec(uuid("af376818-6120-4e28-96dd-63fd2dc27b7a"))
IDatabase : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Tables (
        struct IDatabaseTables * * ppTables ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct IReport * * ppParent ) = 0;
    virtual HRESULT __stdcall LogOnServer (
        BSTR pDllName,
        BSTR pServerName,
        VARIANT pDatabaseName = vtMissing,
        VARIANT pUserID = vtMissing,
        VARIANT pPassword = vtMissing ) = 0;
    virtual HRESULT __stdcall LogOffServer (
        BSTR pDllName,
        BSTR pServerName,
        VARIANT pDatabaseName = vtMissing,
        VARIANT pUserID = vtMissing,
        VARIANT pPassword = vtMissing ) = 0;
    virtual HRESULT __stdcall SetDataSource (
        VARIANT data,
        VARIANT dataTag = vtMissing,
        VARIANT tableNumber = vtMissing ) = 0;
    virtual HRESULT __stdcall Verify ( ) = 0;
    virtual HRESULT __stdcall get_Links (
        struct ITableLinks * * ppLinks ) = 0;
    virtual HRESULT __stdcall AddOLEDBSource (
        BSTR pConnectionString,
        BSTR pTableName ) = 0;
    virtual HRESULT __stdcall AddADOCommand (
        VARIANT pConnection,
        VARIANT pCommand ) = 0;
    virtual HRESULT __stdcall LogOnServerEx (
        BSTR pDllName,
        BSTR pServerName,
        VARIANT pDatabaseName = vtMissing,
        VARIANT pUserID = vtMissing,
        VARIANT pPassword = vtMissing,
        VARIANT pServerType = vtMissing,
        VARIANT pConnectionString = vtMissing ) = 0;
    virtual HRESULT __stdcall get_DictionaryLocation (
        BSTR * ppLocation ) = 0;
    virtual HRESULT __stdcall put_DictionaryLocation (
        BSTR ppLocation ) = 0;
    virtual HRESULT __stdcall LogOnServerWithPrivateInfo (
        BSTR pDllName,
        VARIANT privateInfo ) = 0;
    virtual HRESULT __stdcall ConvertDatabaseDriver (
        BSTR pDllName,
        VARIANT_BOOL blDoImmediateConvert ) = 0;
};

struct __declspec(uuid("af376819-6120-4e28-96dd-63fd2dc27b7a"))
IDatabaseTables : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppNewEnum ) = 0;
    virtual HRESULT __stdcall get_Item (
        long index,
        struct IDatabaseTable * * ppDatabaseTable ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * pCount ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct IDatabase * * ppParent ) = 0;
    virtual HRESULT __stdcall Add (
        BSTR pLocation,
        VARIANT pSubLocation = vtMissing,
        VARIANT pConnectInfo = vtMissing,
        VARIANT tableType = vtMissing,
        VARIANT pDllName = vtMissing,
        VARIANT pServerName = vtMissing,
        VARIANT pServerType = vtMissing,
        VARIANT pDatabaseName = vtMissing,
        VARIANT pUserID = vtMissing,
        VARIANT pPassword = vtMissing ) = 0;
    virtual HRESULT __stdcall Delete (
        long index ) = 0;
    virtual HRESULT __stdcall AddStoredProcedure (
        BSTR pLocation,
        VARIANT pSubLocation = vtMissing,
        VARIANT pConnectInfo = vtMissing,
        VARIANT tableType = vtMissing,
        VARIANT pDllName = vtMissing,
        VARIANT pServerName = vtMissing,
        VARIANT pServerType = vtMissing,
        VARIANT pDatabaseName = vtMissing,
        VARIANT pUserID = vtMissing,
        VARIANT pPassword = vtMissing,
        VARIANT paramValueInfos = vtMissing ) = 0;
};

struct __declspec(uuid("af37681a-6120-4e28-96dd-63fd2dc27b7a"))
IDatabaseTable : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Name (
        BSTR * ppName ) = 0;
    virtual HRESULT __stdcall put_Name (
        BSTR ppName ) = 0;
    virtual HRESULT __stdcall get_Location (
        BSTR * ppLocation ) = 0;
    virtual HRESULT __stdcall put_Location (
        BSTR ppLocation ) = 0;
    virtual HRESULT __stdcall get_Fields (
        struct IDatabaseFieldDefinitions * * ppFieldDefinitions ) = 0;
    virtual HRESULT __stdcall SetPrivateData (
        long dataTag,
        VARIANT data ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct IDatabase * * ppParent ) = 0;
    virtual HRESULT __stdcall SetDataSource (
        VARIANT data,
        VARIANT dataTag = vtMissing ) = 0;
    virtual HRESULT __stdcall get_DllName (
        BSTR * ppDllName ) = 0;
    virtual HRESULT __stdcall get_DecriptiveName (
        BSTR * ppDescriptiveName ) = 0;
    virtual HRESULT __stdcall get_LogOnServerName (
        BSTR * ppLogOnServerName ) = 0;
    virtual HRESULT __stdcall get_LogOnDatabaseName (
        BSTR * ppLogOnDatabaseName ) = 0;
    virtual HRESULT __stdcall get_LogOnUserID (
        BSTR * ppLogOnUserID ) = 0;
    virtual HRESULT __stdcall get_SessionUserID (
        BSTR * ppSessionUserID ) = 0;
    virtual HRESULT __stdcall TestConnectivity (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall SetLogOnInfo (
        BSTR pServerName,
        VARIANT pDatabaseName = vtMissing,
        VARIANT pUserID = vtMissing,
        VARIANT pPassword = vtMissing ) = 0;
    virtual HRESULT __stdcall SetSessionInfo (
        BSTR pSessionUserID,
        BSTR pSessionPassword ) = 0;
    virtual HRESULT __stdcall get_DatabaseType (
        enum CRDatabaseType * pDatabaseType ) = 0;
    virtual HRESULT __stdcall CheckDifferences (
        long * pDifferences,
        VARIANT * reserved ) = 0;
    virtual HRESULT __stdcall get_SubLocation (
        BSTR * ppSubLocation ) = 0;
    virtual HRESULT __stdcall SetTableLocation (
        BSTR pLocation,
        BSTR pSubLocation,
        BSTR pConnectBufferSting ) = 0;
    virtual HRESULT __stdcall get_ConnectBufferString (
        BSTR * ppConnectBufferString ) = 0;
    virtual HRESULT __stdcall put_ConnectBufferString (
        BSTR ppConnectBufferString ) = 0;
    virtual HRESULT __stdcall put_DllName (
        BSTR ppDllName ) = 0;
    virtual HRESULT __stdcall get_ConnectionProperties (
        struct INameValuePairs * * ppConnectionProperties ) = 0;
};

struct __declspec(uuid("af37681d-6120-4e28-96dd-63fd2dc27b7a"))
IDatabaseFieldDefinitions : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppNewEnum ) = 0;
    virtual HRESULT __stdcall get_Item (
        long index,
        struct IDatabaseFieldDefinition * * ppFieldDefinition ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * pCount ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct IDatabaseTable * * ppParent ) = 0;
    virtual HRESULT __stdcall GetItemByName (
        BSTR Name,
        struct IDatabaseFieldDefinition * * ppDatabaseFieldDefinition ) = 0;
};

enum CRDatabaseType
{
    crStandardDatabase = 1,
    crSQLDatabase = 2
};

struct __declspec(uuid("af376860-6120-4e28-96dd-63fd2dc27b7a"))
INameValuePairs : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppNewEnum ) = 0;
    virtual HRESULT __stdcall get_Item (
        BSTR Name,
        VARIANT * pValue ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * pCount ) = 0;
    virtual HRESULT __stdcall Add (
        BSTR Name,
        VARIANT Value ) = 0;
    virtual HRESULT __stdcall Delete (
        VARIANT index ) = 0;
    virtual HRESULT __stdcall DeleteAll ( ) = 0;
    virtual HRESULT __stdcall get_NameIDs (
        VARIANT * pIDs ) = 0;
};

struct __declspec(uuid("af37681b-6120-4e28-96dd-63fd2dc27b7a"))
ITableLinks : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppNewEnum ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * pCount ) = 0;
    virtual HRESULT __stdcall get_Item (
        long index,
        struct ITableLink * * ppDatabaseTable ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct IDatabase * * ppParent ) = 0;
    virtual HRESULT __stdcall Add (
        struct IDatabaseTable * psrcTable,
        struct IDatabaseTable * pDestTable,
        VARIANT srcFields,
        VARIANT destFields,
        enum CRLinkJoinType JoinType,
        enum CRLinkLookUpType LookupType,
        VARIANT_BOOL PartialMatchEnabled,
        short indexInUse,
        struct ITableLink * * ppTableLink ) = 0;
    virtual HRESULT __stdcall Delete (
        long index ) = 0;
};

struct __declspec(uuid("af37681c-6120-4e28-96dd-63fd2dc27b7a"))
ITableLink : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Parent (
        struct IDatabase * * ppParent ) = 0;
    virtual HRESULT __stdcall get_SourceTable (
        struct IDatabaseTable * * ppSrcTable ) = 0;
    virtual HRESULT __stdcall get_DestinationTable (
        struct IDatabaseTable * * ppDestTable ) = 0;
    virtual HRESULT __stdcall get_JoinType (
        enum CRLinkJoinType * pJoinType ) = 0;
    virtual HRESULT __stdcall get_LookupType (
        enum CRLinkLookUpType * pLookupType ) = 0;
    virtual HRESULT __stdcall get_PartialMatchEnabled (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall get_IndexUsed (
        short * pIndexUsed ) = 0;
    virtual HRESULT __stdcall get_SourceFields (
        struct IDatabaseFieldDefinitions * * ppSrcFields ) = 0;
    virtual HRESULT __stdcall get_DestinationFields (
        struct IDatabaseFieldDefinitions * * ppDestFields ) = 0;
};

enum CRLinkJoinType
{
    crJTEqual = 4,
    crJTLeftOuter = 5,
    crJTRightOutter = 6,
    crJROuter = 7,
    crJTGreaterThan = 8,
    crJTLessThan = 9,
    crJTGreaterOrEqual = 10,
    crJTLessOrEqual = 11,
    crJTNotEqual = 12,
    crJTAdvance = 13
};

enum CRLinkLookUpType
{
    crLTLookupParallel = 1,
    crLTLookupProduct = 2,
    crLTLookupSeries = 3
};

enum CRPaperOrientation
{
    crDefaultPaperOrientation = 0,
    crPortrait = 1,
    crLandscape = 2
};

enum CRPaperSize
{
    crDefaultPaperSize = 0,
    crPaperLetter = 1,
    crPaperLetterSmall = 2,
    crPaperTabloid = 3,
    crPaperLedger = 4,
    crPaperLegal = 5,
    crPaperStatement = 6,
    crPaperExecutive = 7,
    crPaperA3 = 8,
    crPaperA4 = 9,
    crPaperA4Small = 10,
    crPaperA5 = 11,
    crPaperB4 = 12,
    crPaperB5 = 13,
    crPaperFolio = 14,
    crPaperQuarto = 15,
    crPaper10x14 = 16,
    crPaper11x17 = 17,
    crPaperNote = 18,
    crPaperEnvelope9 = 19,
    crPaperEnvelope10 = 20,
    crPaperEnvelope11 = 21,
    crPaperEnvelope12 = 22,
    crPaperEnvelope14 = 23,
    crPaperCsheet = 24,
    crPaperDsheet = 25,
    crPaperEsheet = 26,
    crPaperEnvelopeDL = 27,
    crPaperEnvelopeC5 = 28,
    crPaperEnvelopeC3 = 29,
    crPaperEnvelopeC4 = 30,
    crPaperEnvelopeC6 = 31,
    crPaperEnvelopeC65 = 32,
    crPaperEnvelopeB4 = 33,
    crPaperEnvelopeB5 = 34,
    crPaperEnvelopeB6 = 35,
    crPaperEnvelopeItaly = 36,
    crPaperEnvelopeMonarch = 37,
    crPaperEnvelopePersonal = 38,
    crPaperFanfoldUS = 39,
    crPaperFanfoldStdGerman = 40,
    crPaperFanfoldLegalGerman = 41,
    crPaperUser = 256
};

struct __declspec(uuid("af37681e-6120-4e28-96dd-63fd2dc27b7a"))
IFormulaFieldDefinitions : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppNewEnum ) = 0;
    virtual HRESULT __stdcall get_Item (
        long index,
        struct IFormulaFieldDefinition * * ppFormualFieldDefinition ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * pCount ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct IReport * * ppParent ) = 0;
    virtual HRESULT __stdcall Add (
        BSTR FormulaName,
        BSTR Text,
        struct IFormulaFieldDefinition * * ppFormulaField ) = 0;
    virtual HRESULT __stdcall Delete (
        VARIANT index ) = 0;
    virtual HRESULT __stdcall GetItemByName (
        BSTR Name,
        struct IFormulaFieldDefinition * * ppFormulaFieldDefinition ) = 0;
};

struct __declspec(uuid("af37680f-6120-4e28-96dd-63fd2dc27b7a"))
IFormulaFieldDefinition : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Kind (
        enum CRFieldKind * pKind ) = 0;
    virtual HRESULT __stdcall get_ValueType (
        CRFieldValueType * pValueType ) = 0;
    virtual HRESULT __stdcall get_NumberOfBytes (
        short * pNumberOfBytes ) = 0;
    virtual HRESULT __stdcall get_Name (
        BSTR * pName ) = 0;
    virtual HRESULT __stdcall get_Value (
        VARIANT * pValue ) = 0;
    virtual HRESULT __stdcall get_FormulaFieldName (
        BSTR * ppFormulaFieldName ) = 0;
    virtual HRESULT __stdcall get_Text (
        BSTR * ppText ) = 0;
    virtual HRESULT __stdcall put_Text (
        BSTR ppText ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct IReport * * ppParent ) = 0;
    virtual HRESULT __stdcall get_PreviousValue (
        VARIANT * pPreValue ) = 0;
    virtual HRESULT __stdcall get_NextValue (
        VARIANT * pNextValue ) = 0;
    virtual HRESULT __stdcall Check (
        VARIANT_BOOL * pBool,
        BSTR * ppErrorString ) = 0;
};

struct __declspec(uuid("af37681f-6120-4e28-96dd-63fd2dc27b7a"))
IParameterFieldDefinitions : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppNewEnum ) = 0;
    virtual HRESULT __stdcall get_Item (
        long index,
        struct IParameterFieldDefinition * * ppParameterFieldDefinition ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * pCount ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct IReport * * ppParent ) = 0;
    virtual HRESULT __stdcall Add (
        BSTR parameterName,
        CRFieldValueType ValueType,
        struct IParameterFieldDefinition * * ppParameterField ) = 0;
    virtual HRESULT __stdcall Delete (
        VARIANT index ) = 0;
    virtual HRESULT __stdcall GetItemByName (
        BSTR Name,
        VARIANT SubreportName,
        struct IParameterFieldDefinition * * ppParameterFieldDefinition ) = 0;
};

struct __declspec(uuid("af376812-6120-4e28-96dd-63fd2dc27b7a"))
IParameterFieldDefinition : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Kind (
        enum CRFieldKind * pKind ) = 0;
    virtual HRESULT __stdcall get_ValueType (
        CRFieldValueType * pValueType ) = 0;
    virtual HRESULT __stdcall get_NumberOfBytes (
        short * pNumberOfBytes ) = 0;
    virtual HRESULT __stdcall get_Name (
        BSTR * pName ) = 0;
    virtual HRESULT __stdcall get_Value (
        VARIANT * pValue ) = 0;
    virtual HRESULT __stdcall get_ParameterFieldName (
        BSTR * ppParameterFieldName ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct IReport * * ppParent ) = 0;
    virtual HRESULT __stdcall get_PreviousValue (
        VARIANT * pPreValue ) = 0;
    virtual HRESULT __stdcall get_NextValue (
        VARIANT * pNextValue ) = 0;
    virtual HRESULT __stdcall get_Prompt (
        BSTR * ppPrompt ) = 0;
    virtual HRESULT __stdcall put_Prompt (
        BSTR ppPrompt ) = 0;
    virtual HRESULT __stdcall get_IsDefaultValueSet (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall get_ReportName (
        BSTR * ppReportName ) = 0;
    virtual HRESULT __stdcall get_NeedsCurrentValue (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall get_IsCurrentValueSet (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall get_CurrentValue (
        VARIANT * pCurrentValue ) = 0;
    virtual HRESULT __stdcall get_DefaultValue (
        VARIANT * pDefaultValue ) = 0;
    virtual HRESULT __stdcall SetCurrentValue (
        VARIANT CurrentValue,
        VARIANT ValueType = vtMissing ) = 0;
    virtual HRESULT __stdcall SetDefaultValue (
        VARIANT DefaultValue,
        VARIANT ValueType = vtMissing ) = 0;
    virtual HRESULT __stdcall get_EnableRangeLimit (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_EnableRangeLimit (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_MinimumValue (
        VARIANT * pMinimumValue ) = 0;
    virtual HRESULT __stdcall put_MinimumValue (
        VARIANT pMinimumValue ) = 0;
    virtual HRESULT __stdcall get_MaximumValue (
        VARIANT * pMaximumValue ) = 0;
    virtual HRESULT __stdcall put_MaximumValue (
        VARIANT pMaximumValue ) = 0;
    virtual HRESULT __stdcall get_EditMask (
        BSTR * ppEditMask ) = 0;
    virtual HRESULT __stdcall put_EditMask (
        BSTR ppEditMask ) = 0;
    virtual HRESULT __stdcall get_ParameterType (
        enum CRParameterFieldType * pParameterType ) = 0;
    virtual HRESULT __stdcall get_DisallowEditing (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_DisallowEditing (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_NumberOfDefaultValues (
        short * pNumberOfDefaultValues ) = 0;
    virtual HRESULT __stdcall GetNthDefaultValue (
        short index,
        VARIANT * pNthDefaultValue ) = 0;
    virtual HRESULT __stdcall SetNthDefaultValue (
        short index,
        VARIANT nthDefaultValue ) = 0;
    virtual HRESULT __stdcall AddDefaultValue (
        VARIANT DefaultValue ) = 0;
    virtual HRESULT __stdcall DeleteNthDefaultValue (
        short index ) = 0;
    virtual HRESULT __stdcall get_EnableNullValue (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_EnableNullValue (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_EnableMultipleValues (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_EnableMultipleValues (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_DiscreteOrRangeKind (
        enum CRDiscreteOrRangeKind * pDiscreteOrRangeKind ) = 0;
    virtual HRESULT __stdcall put_DiscreteOrRangeKind (
        enum CRDiscreteOrRangeKind pDiscreteOrRangeKind ) = 0;
    virtual HRESULT __stdcall get_PlaceInGroup (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_PlaceInGroup (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_GroupNumber (
        short * pGroupNumber ) = 0;
    virtual HRESULT __stdcall put_GroupNumber (
        short pGroupNumber ) = 0;
    virtual HRESULT __stdcall get_EnableExclusiveGroup (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_EnableExclusiveGroup (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_NumberOfCurrentValues (
        short * pNumberOfCurrentValues ) = 0;
    virtual HRESULT __stdcall get_NumberOfCurrentRanges (
        short * pNumberOfCurrentRanges ) = 0;
    virtual HRESULT __stdcall GetNthCurrentValue (
        short index,
        VARIANT * pCurrentValue ) = 0;
    virtual HRESULT __stdcall AddCurrentValue (
        VARIANT CurrentValue ) = 0;
    virtual HRESULT __stdcall GetNthCurrentRange (
        short index,
        VARIANT * pStart,
        VARIANT * pEnd,
        enum CRRangeInfo * pRangeInfo ) = 0;
    virtual HRESULT __stdcall AddCurrentRange (
        VARIANT start,
        VARIANT end,
        enum CRRangeInfo rangeInfo ) = 0;
    virtual HRESULT __stdcall ClearCurrentValueAndRange ( ) = 0;
    virtual HRESULT __stdcall get_NthValueDescription (
        short index,
        BSTR * pValueDescription ) = 0;
    virtual HRESULT __stdcall put_NthValueDescription (
        short index,
        BSTR pValueDescription ) = 0;
    virtual HRESULT __stdcall get_EnableShowDescriptionOnly (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_EnableShowDescriptionOnly (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_PicklistSortMethod (
        enum CRParameterPicklistSortMethod * pMethod ) = 0;
    virtual HRESULT __stdcall put_PicklistSortMethod (
        enum CRParameterPicklistSortMethod pMethod ) = 0;
    virtual HRESULT __stdcall get_EnableSortBasedOnDesc (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_EnableSortBasedOnDesc (
        VARIANT_BOOL pBool ) = 0;
};

enum CRParameterFieldType
{
    crReportParameter = 0,
    crQueryParameter = 1,
    crStoreProcedureParameter = 2
};

enum CRDiscreteOrRangeKind
{
    crDiscreteValue = 0,
    crRangeValue = 1,
    crDiscreteAndRangeValue = 2
};

enum CRRangeInfo
{
    crRangeNotIncludeUpperLowerBound = 0,
    crRangeIncludeUpperBound = 1,
    crRangeIncludeLowerBound = 2,
    crRangeNoUpperBound = 4,
    crRangeNoLowerBound = 8
};

enum CRParameterPicklistSortMethod
{
    crNoSort = 0,
    crAlphanumericAscending = 1,
    crAlphanumericDescending = 2,
    crNumericAscending = 3,
    crNumericDescending = 4
};

struct __declspec(uuid("af376820-6120-4e28-96dd-63fd2dc27b7a"))
IGroupNameFieldDefinitions : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppNewEnum ) = 0;
    virtual HRESULT __stdcall get_Item (
        long index,
        struct IGroupNameFieldDefinition * * ppGroupNameFieldDefinition ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * pCount ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct IReport * * ppParent ) = 0;
};

struct __declspec(uuid("af376813-6120-4e28-96dd-63fd2dc27b7a"))
IGroupNameFieldDefinition : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Kind (
        enum CRFieldKind * pKind ) = 0;
    virtual HRESULT __stdcall get_ValueType (
        CRFieldValueType * pValueType ) = 0;
    virtual HRESULT __stdcall get_NumberOfBytes (
        short * pNumberOfBytes ) = 0;
    virtual HRESULT __stdcall get_Name (
        BSTR * pName ) = 0;
    virtual HRESULT __stdcall get_Value (
        VARIANT * pValue ) = 0;
    virtual HRESULT __stdcall get_GroupNameFieldName (
        BSTR * ppGroupNameFieldName ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct IReport * * ppParent ) = 0;
    virtual HRESULT __stdcall get_PreviousValue (
        VARIANT * pPreValue ) = 0;
    virtual HRESULT __stdcall get_NextValue (
        VARIANT * pNextValue ) = 0;
    virtual HRESULT __stdcall get_GroupNumber (
        short * pGroupNumber ) = 0;
    virtual HRESULT __stdcall get_GroupNameConditionFormula (
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_GroupNameConditionFormula (
        BSTR pVal ) = 0;
};

struct __declspec(uuid("af376821-6120-4e28-96dd-63fd2dc27b7a"))
ISummaryFieldDefinitions : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppNewEnum ) = 0;
    virtual HRESULT __stdcall get_Item (
        long index,
        struct ISummaryFieldDefinition * * ppSummaryFieldDefinition ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * pCount ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct IReport * * ppParent ) = 0;
    virtual HRESULT __stdcall Add (
        long groupLevel,
        VARIANT Field,
        enum CRSummaryType SummaryType,
        VARIANT secondSummaryFieldOrFactor,
        struct ISummaryFieldDefinition * * ppSummaryDefinition ) = 0;
    virtual HRESULT __stdcall Delete (
        VARIANT index ) = 0;
};

enum CRReportKind
{
    crColumnarReport = 1,
    crLabelReport = 2,
    crMulColumnReport = 3
};

struct __declspec(uuid("af37682b-6120-4e28-96dd-63fd2dc27b7a"))
IPageEngine : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_ImageOptions (
        enum CRImageType * pImageOptions ) = 0;
    virtual HRESULT __stdcall put_ImageOptions (
        enum CRImageType pImageOptions ) = 0;
    virtual HRESULT __stdcall CreatePageGenerator (
        VARIANT GroupPath,
        VARIANT DrillDownLevel,
        struct IPageGenerator * * ppPageGenerator ) = 0;
    virtual HRESULT __stdcall RenderTotallerETF (
        VARIANT rootGroupPath,
        long startingChildNumber,
        short pastRootLevels,
        VARIANT maxNodeCount,
        enum CRRenderResultType resultType,
        VARIANT * pETFArray ) = 0;
    virtual HRESULT __stdcall RenderTotallerHTML (
        VARIANT rootGroupPath,
        long startingChildNumber,
        short pastRootLevels,
        VARIANT maxNodeCount,
        VARIANT openGroupPath,
        VARIANT_BOOL includeDrillDownLinks,
        BSTR baseURL,
        enum CRRenderResultType resultType,
        VARIANT * pHTMLArray ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct IReport * * ppParent ) = 0;
    virtual HRESULT __stdcall get_PlaceHolderOptions (
        enum CRPlaceHolderType * pPlaceHolderType ) = 0;
    virtual HRESULT __stdcall put_PlaceHolderOptions (
        enum CRPlaceHolderType pPlaceHolderType ) = 0;
    virtual HRESULT __stdcall get_ValueFormatOptions (
        enum CRValueFormatType * pValueFormatType ) = 0;
    virtual HRESULT __stdcall put_ValueFormatOptions (
        enum CRValueFormatType pValueFormatType ) = 0;
};

enum CRImageType
{
    crImageUnknown = 0,
    crDIBImageType = 1,
    crJPEGImageType = 2
};

struct __declspec(uuid("af37682c-6120-4e28-96dd-63fd2dc27b7a"))
IPageGenerator : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Parent (
        struct IPageEngine * * ppParent ) = 0;
    virtual HRESULT __stdcall get_Pages (
        struct IPages * * ppPages ) = 0;
    virtual HRESULT __stdcall get_DrillDownLevel (
        short * pDrillDownLevel ) = 0;
    virtual HRESULT __stdcall get_GroupPath (
        VARIANT * pGroupPath ) = 0;
    virtual HRESULT __stdcall GetPageNumberForGroup (
        VARIANT GroupPath,
        long * pPageNumber ) = 0;
    virtual HRESULT __stdcall DrillOnGraph (
        long PageNumber,
        long xOffset,
        long yOffset,
        struct IPageGenerator * * ppPageGenerator ) = 0;
    virtual HRESULT __stdcall SearchForText (
        BSTR Text,
        enum CRSearchDirection direction,
        long * pPageNumber ) = 0;
    virtual HRESULT __stdcall get_GroupName (
        BSTR * ppGroupName ) = 0;
    virtual HRESULT __stdcall get_ReportName (
        BSTR * ppReportName ) = 0;
    virtual HRESULT __stdcall get_ContainingPageNumber (
        long * pContainingPageNumber ) = 0;
    virtual HRESULT __stdcall get_ContainingGroupPath (
        VARIANT * pContainingGroupPath ) = 0;
    virtual HRESULT __stdcall get_ContainingGroupName (
        BSTR * ppContainingGroupName ) = 0;
    virtual HRESULT __stdcall get_xOffset (
        long * pXOffset ) = 0;
    virtual HRESULT __stdcall get_yOffset (
        long * pYOffset ) = 0;
    virtual HRESULT __stdcall RenderTotallerETF (
        VARIANT rootGroupPath,
        long startingChildNumber,
        short pastRootLevels,
        VARIANT maxNodeCount,
        enum CRRenderResultType resultType,
        VARIANT * pETFArray ) = 0;
    virtual HRESULT __stdcall RenderTotallerHTML (
        VARIANT rootGroupPath,
        long startingChildNumber,
        short pastRootLevels,
        VARIANT maxNodeCount,
        VARIANT openGroupPath,
        VARIANT_BOOL includeDrillDownLinks,
        BSTR baseURL,
        enum CRRenderResultType resultType,
        VARIANT * pHTMLArray ) = 0;
    virtual HRESULT __stdcall DrillOnMap (
        long PageNumber,
        long xOffset,
        long yOffset,
        struct IPageGenerator * * ppPageGenerator ) = 0;
    virtual HRESULT __stdcall DrillOnSubreport (
        long PageNumber,
        long xOffset,
        long yOffset,
        struct IPageGenerator * * ppPageGenerator ) = 0;
    virtual HRESULT __stdcall Export (
        enum CRRenderResultType resultType,
        VARIANT * pExportArray ) = 0;
    virtual HRESULT __stdcall CreateSubreportPageGenerator (
        VARIANT GroupPath,
        VARIANT DrillDownLevel,
        struct IPageGenerator * * ppPageGenerator ) = 0;
    virtual HRESULT __stdcall FindText (
        BSTR Text,
        enum CRSearchDirection direction,
        VARIANT * pPageNumber,
        VARIANT_BOOL * pBool ) = 0;
};

struct __declspec(uuid("af37682d-6120-4e28-96dd-63fd2dc27b7a"))
IPages : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppNewEnum ) = 0;
    virtual HRESULT __stdcall get_Item (
        long index,
        struct IPage * * ppPage ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * pCount ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct IPageGenerator * * ppPageGenerator ) = 0;
};

struct __declspec(uuid("af37682e-6120-4e28-96dd-63fd2dc27b7a"))
IPage : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Parent (
        struct IPageGenerator * * ppPageGenerator ) = 0;
    virtual HRESULT __stdcall get_PageNumber (
        long * pPageNumber ) = 0;
    virtual HRESULT __stdcall get_IsLastPage (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall RenderEPF (
        enum CRRenderResultType resultType,
        VARIANT * pEPFArray ) = 0;
    virtual HRESULT __stdcall RenderHTML (
        VARIANT_BOOL includeDrillDownLinks,
        enum CRHTMLPageStyle pageStyle,
        enum CRHTMLToolbarStyle toolbarStyle,
        BSTR baseURL,
        enum CRRenderResultType resultType,
        VARIANT * pHTMLArray ) = 0;
    virtual HRESULT __stdcall get_IsMissingTotalPageCount (
        VARIANT_BOOL * pBool ) = 0;
};

enum CRRenderResultType
{
    crUISafeArrayType = 8209,
    crBSTRType = 8
};

enum CRHTMLPageStyle
{
    crPlainPageStyle = 0,
    crToolbarPageStyle = 1,
    crFramePageStyle = 2,
    crToolbarAtTopPageStyle = 3,
    crToolbarAtBottomPageStyle = 4
};

enum CRHTMLToolbarStyle
{
    crToolbarRefreshButton = 1,
    crToolbarSearchBox = 2
};

enum CRSearchDirection
{
    crForward = 0,
    crBackward = 1
};

enum CRPlaceHolderType
{
    crDelayTotalPageCountCalc = 1,
    crAllowPlaceHolders = 2
};

enum CRValueFormatType
{
    crIncludeFieldValues = 1,
    crIncludeHiddenFields = 2,
    crAllowComplexFieldFormatting = 4
};

struct __declspec(uuid("af37682f-6120-4e28-96dd-63fd2dc27b7a"))
IExportOptions : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Parent (
        struct IReport * * ppParent ) = 0;
    virtual HRESULT __stdcall get_FormatType (
        enum CRExportFormatType * pFormatType ) = 0;
    virtual HRESULT __stdcall put_FormatType (
        enum CRExportFormatType pFormatType ) = 0;
    virtual HRESULT __stdcall get_DestinationType (
        enum CRExportDestinationType * pDestinationType ) = 0;
    virtual HRESULT __stdcall put_DestinationType (
        enum CRExportDestinationType pDestinationType ) = 0;
    virtual HRESULT __stdcall get_ExchangeProfile (
        BSTR * ppExchangeProfile ) = 0;
    virtual HRESULT __stdcall put_ExchangeProfile (
        BSTR ppExchangeProfile ) = 0;
    virtual HRESULT __stdcall get_DiskFileName (
        BSTR * ppDiskFileName ) = 0;
    virtual HRESULT __stdcall put_DiskFileName (
        BSTR ppDiskFileName ) = 0;
    virtual HRESULT __stdcall get_UseReportDateFormat (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_UseReportDateFormat (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_UseReportNumberFormat (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_UseReportNumberFormat (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_CharFieldDelimiter (
        BSTR * ppCharFieldDelimiter ) = 0;
    virtual HRESULT __stdcall put_CharFieldDelimiter (
        BSTR ppCharFieldDelimiter ) = 0;
    virtual HRESULT __stdcall get_CharStringDelimiter (
        BSTR * ppCharStringDelimiter ) = 0;
    virtual HRESULT __stdcall put_CharStringDelimiter (
        BSTR ppCharStringDelimiter ) = 0;
    virtual HRESULT __stdcall get_NumberOfLinesPerPage (
        short * pNumberOfLinesPerPage ) = 0;
    virtual HRESULT __stdcall put_NumberOfLinesPerPage (
        short pNumberOfLinesPerPage ) = 0;
    virtual HRESULT __stdcall get_ODBCDataSourceName (
        BSTR * ppODBCDataSourceName ) = 0;
    virtual HRESULT __stdcall put_ODBCDataSourceName (
        BSTR ppODBCDataSourceName ) = 0;
    virtual HRESULT __stdcall get_ODBCDataSourceUserID (
        BSTR * ppODBCDataSourceUserID ) = 0;
    virtual HRESULT __stdcall put_ODBCDataSourceUserID (
        BSTR ppODBCDataSourceUserID ) = 0;
    virtual HRESULT __stdcall put_ODBCDataSourcePassword (
        BSTR _arg1 ) = 0;
    virtual HRESULT __stdcall get_ODBCExportTableName (
        BSTR * ppODBCExportTableName ) = 0;
    virtual HRESULT __stdcall put_ODBCExportTableName (
        BSTR ppODBCExportTableName ) = 0;
    virtual HRESULT __stdcall get_HTMLFileName (
        BSTR * ppHTMLFileName ) = 0;
    virtual HRESULT __stdcall put_HTMLFileName (
        BSTR ppHTMLFileName ) = 0;
    virtual HRESULT __stdcall put_ExchangePassword (
        BSTR _arg1 ) = 0;
    virtual HRESULT __stdcall get_ExchangeDestinationType (
        enum CRExchangeDestinationType * pExchangeDestinationType ) = 0;
    virtual HRESULT __stdcall put_ExchangeDestinationType (
        enum CRExchangeDestinationType pExchangeDestinationType ) = 0;
    virtual HRESULT __stdcall get_ExchangeFolderPath (
        BSTR * ppExchangeFolderPath ) = 0;
    virtual HRESULT __stdcall put_ExchangeFolderPath (
        BSTR ppExchangeFolderPath ) = 0;
    virtual HRESULT __stdcall get_MailCcList (
        BSTR * ppMailCcList ) = 0;
    virtual HRESULT __stdcall put_MailCcList (
        BSTR ppMailCcList ) = 0;
    virtual HRESULT __stdcall get_MailToList (
        BSTR * ppMailToList ) = 0;
    virtual HRESULT __stdcall put_MailToList (
        BSTR ppMailToList ) = 0;
    virtual HRESULT __stdcall get_MailSubject (
        BSTR * ppMailSubject ) = 0;
    virtual HRESULT __stdcall put_MailSubject (
        BSTR ppMailSubject ) = 0;
    virtual HRESULT __stdcall get_MailMessage (
        BSTR * ppMailMessage ) = 0;
    virtual HRESULT __stdcall put_MailMessage (
        BSTR ppMailMessage ) = 0;
    virtual HRESULT __stdcall get_MailBccList (
        BSTR * ppMailBccList ) = 0;
    virtual HRESULT __stdcall put_MailBccList (
        BSTR ppMailBccList ) = 0;
    virtual HRESULT __stdcall get_FormatDllName (
        BSTR * ppFormatDllName ) = 0;
    virtual HRESULT __stdcall get_DestinationDllName (
        BSTR * ppDestinationDllName ) = 0;
    virtual HRESULT __stdcall get_ExchangeTabHasColumnHeadings (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_ExchangeTabHasColumnHeadings (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall Reset ( ) = 0;
    virtual HRESULT __stdcall PromptForExportOptions ( ) = 0;
    virtual HRESULT __stdcall get_ExcelTabHasColumnHeadings (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_ExcelTabHasColumnHeadings (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_ExcelUseWorksheetFunctions (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_ExcelUseWorksheetFunctions (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_ExcelUseConstantColumnWidth (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_ExcelUseConstantColumnWidth (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_ExcelConstantColumnWidth (
        double * pColWidth ) = 0;
    virtual HRESULT __stdcall put_ExcelConstantColumnWidth (
        double pColWidth ) = 0;
    virtual HRESULT __stdcall get_ExcelAreaType (
        enum CRAreaKind * pAreaKind ) = 0;
    virtual HRESULT __stdcall put_ExcelAreaType (
        enum CRAreaKind pAreaKind ) = 0;
    virtual HRESULT __stdcall get_ExcelAreaGroupNumber (
        short * pGroupNumber ) = 0;
    virtual HRESULT __stdcall put_ExcelAreaGroupNumber (
        short pGroupNumber ) = 0;
    virtual HRESULT __stdcall get_ExcelUseTabularFormat (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_ExcelUseTabularFormat (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_ApplicationFileName (
        BSTR * ppAppFileName ) = 0;
    virtual HRESULT __stdcall put_ApplicationFileName (
        BSTR ppAppFileName ) = 0;
    virtual HRESULT __stdcall get_LotusDominoDatabaseName (
        BSTR * ppLotusDominoDatabaseName ) = 0;
    virtual HRESULT __stdcall put_LotusDominoDatabaseName (
        BSTR ppLotusDominoDatabaseName ) = 0;
    virtual HRESULT __stdcall get_LotusDominoFormName (
        BSTR * ppLotusDominoFormName ) = 0;
    virtual HRESULT __stdcall put_LotusDominoFormName (
        BSTR ppLotusDominoFormName ) = 0;
    virtual HRESULT __stdcall get_LotusDominoComments (
        BSTR * ppLotusDominoComments ) = 0;
    virtual HRESULT __stdcall put_LotusDominoComments (
        BSTR ppLotusDominoComments ) = 0;
    virtual HRESULT __stdcall get_HTMLEnableSeparatedPages (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_HTMLEnableSeparatedPages (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_HTMLHasPageNavigator (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_HTMLHasPageNavigator (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_PDFExportAllPages (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_PDFExportAllPages (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_PDFFirstPageNumber (
        long * pFirstPageNumber ) = 0;
    virtual HRESULT __stdcall put_PDFFirstPageNumber (
        long pFirstPageNumber ) = 0;
    virtual HRESULT __stdcall get_PDFLastPageNumber (
        long * pLastPageNumber ) = 0;
    virtual HRESULT __stdcall put_PDFLastPageNumber (
        long pLastPageNumber ) = 0;
    virtual HRESULT __stdcall get_RTFExportAllPages (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_RTFExportAllPages (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_RTFFirstPageNumber (
        long * pFirstPageNumber ) = 0;
    virtual HRESULT __stdcall put_RTFFirstPageNumber (
        long pFirstPageNumber ) = 0;
    virtual HRESULT __stdcall get_RTFLastPageNumber (
        long * pLastPageNumber ) = 0;
    virtual HRESULT __stdcall put_RTFLastPageNumber (
        long pLastPageNumber ) = 0;
    virtual HRESULT __stdcall get_XMLFileName (
        BSTR * ppXMLFileName ) = 0;
    virtual HRESULT __stdcall put_XMLFileName (
        BSTR ppXMLFileName ) = 0;
    virtual HRESULT __stdcall get_XMLAllowMultipleFiles (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_XMLAllowMultipleFiles (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_WORDWExportAllPages (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_WORDWExportAllPages (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_WORDWFirstPageNumber (
        long * pFirstPageNumber ) = 0;
    virtual HRESULT __stdcall put_WORDWFirstPageNumber (
        long pFirstPageNumber ) = 0;
    virtual HRESULT __stdcall get_WORDWLastPageNumber (
        long * pLastPageNumber ) = 0;
    virtual HRESULT __stdcall put_WORDWLastPageNumber (
        long pLastPageNumber ) = 0;
    virtual HRESULT __stdcall get_UseDefaultCharactersPerInch (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_UseDefaultCharactersPerInch (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_UserDefinedCharactersPerInch (
        long * pUserDefinedCPI ) = 0;
    virtual HRESULT __stdcall put_UserDefinedCharactersPerInch (
        long pUserDefinedCPI ) = 0;
    virtual HRESULT __stdcall put_ExcelPageBreaks (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_ExcelPageBreaks (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_ExcelConvertDateToString (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_ExcelConvertDateToString (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall get_ExcelExportAllPages (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_ExcelExportAllPages (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_ExcelFirstPageNumber (
        long * pFirstPageNumber ) = 0;
    virtual HRESULT __stdcall put_ExcelFirstPageNumber (
        long pFirstPageNumber ) = 0;
    virtual HRESULT __stdcall get_ExcelLastPageNumber (
        long * pLastPageNumber ) = 0;
    virtual HRESULT __stdcall put_ExcelLastPageNumber (
        long pLastPageNumber ) = 0;
    virtual HRESULT __stdcall get_MailUserName (
        BSTR * ppUserName ) = 0;
    virtual HRESULT __stdcall put_MailUserName (
        BSTR ppUserName ) = 0;
    virtual HRESULT __stdcall get_MailPassword (
        BSTR * ppPassword ) = 0;
    virtual HRESULT __stdcall put_MailPassword (
        BSTR ppPassword ) = 0;
};

enum CRExportFormatType
{
    crEFTNoFormat = 0,
    crEFTCrystalReport = 1,
    crEFTDataInterchange = 2,
    crEFTRecordStyle = 3,
    crEFTRichText = 4,
    crEFTCommaSeparatedValues = 5,
    crEFTTabSeparatedValues = 6,
    crEFTCharSeparatedValues = 7,
    crEFTText = 8,
    crEFTTabSeparatedText = 9,
    crEFTPaginatedText = 10,
    crEFTLotus123WKS = 11,
    crEFTLotus123WK1 = 12,
    crEFTLotus123WK3 = 13,
    crEFTWordForWindows = 14,
    crEFTExcel21 = 18,
    crEFTExcel30 = 19,
    crEFTExcel40 = 20,
    crEFTExcel50 = 21,
    crEFTExcel50Tabular = 22,
    crEFTODBC = 23,
    crEFTHTML32Standard = 24,
    crEFTExplorer32Extend = 25,
    crEFTNetScape20 = 26,
    crEFTExcel70 = 27,
    crEFTExcel70Tabular = 28,
    crEFTExcel80 = 29,
    crEFTExcel80Tabular = 30,
    crEFTPortableDocFormat = 31,
    crEFTHTML40 = 32,
    crEFTCrystalReport70 = 33,
    crEFTReportDefinition = 34,
    crEFTExactRichText = 35,
    crEFTExcel97 = 36,
    crEFTXML = 37
};

enum CRExportDestinationType
{
    crEDTNoDestination = 0,
    crEDTDiskFile = 1,
    crEDTEMailMAPI = 2,
    crEDTEMailVIM = 3,
    crEDTMicrosoftExchange = 4,
    crEDTApplication = 5,
    crEDTLotusDomino = 6
};

enum CRExchangeDestinationType
{
    crExhangeFolderType = 0,
    crExchangePostDocMessage = 1011
};

struct __declspec(uuid("af376830-6120-4e28-96dd-63fd2dc27b7a"))
IApplication : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall OpenReport (
        BSTR pFileName,
        VARIANT OpenMethod,
        struct IReport * * ppReport ) = 0;
    virtual HRESULT __stdcall CanClose (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall LogOnServer (
        BSTR pDllName,
        BSTR pServerName,
        VARIANT pDatabaseName = vtMissing,
        VARIANT pUserID = vtMissing,
        VARIANT pPassword = vtMissing ) = 0;
    virtual HRESULT __stdcall LogOffServer (
        BSTR pDllName,
        BSTR pServerName,
        VARIANT pDatabaseName = vtMissing,
        VARIANT pUserID = vtMissing,
        VARIANT pPassword = vtMissing ) = 0;
    virtual HRESULT __stdcall SetMorePrintEngineErrorMessages (
        VARIANT_BOOL bl ) = 0;
    virtual HRESULT __stdcall SetMatchLogOnInfo (
        VARIANT_BOOL bl ) = 0;
    virtual HRESULT __stdcall NewReport (
        struct IReport * * ppReport ) = 0;
    virtual HRESULT __stdcall GetVersion (
        short * versionNumber ) = 0;
    virtual HRESULT __stdcall LogOnServerEx (
        BSTR pDllName,
        BSTR pServerName,
        VARIANT pDatabaseName = vtMissing,
        VARIANT pUserID = vtMissing,
        VARIANT pPassword = vtMissing,
        VARIANT pServerType = vtMissing,
        VARIANT pConnectionString = vtMissing ) = 0;
    virtual HRESULT __stdcall LogOnServerWithPrivateInfo (
        BSTR pDllName,
        VARIANT privateInfo ) = 0;
    virtual HRESULT __stdcall GetLicenseStatus (
        VARIANT * pMaxLicenseNumber,
        VARIANT * pLicenseUsed,
        VARIANT_BOOL * pIsActive ) = 0;
    virtual HRESULT __stdcall SetLicenseKeycode (
        BSTR pKeycode ) = 0;
};

struct __declspec(uuid("af376831-6120-4e28-96dd-63fd2dc27b7a"))
ISortFields : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppNewEnum ) = 0;
    virtual HRESULT __stdcall get_Item (
        long index,
        struct ISortField * * ppSortField ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * pCount ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct IReport * * ppParent ) = 0;
    virtual HRESULT __stdcall Add (
        struct IFieldDefinition * pFieldDefinition,
        enum CRSortDirection SortDirection ) = 0;
    virtual HRESULT __stdcall Delete (
        long index ) = 0;
};

struct __declspec(uuid("af376832-6120-4e28-96dd-63fd2dc27b7a"))
ISortField : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Parent (
        struct IReport * * ppParent ) = 0;
    virtual HRESULT __stdcall get_SortDirection (
        enum CRSortDirection * pSortDirection ) = 0;
    virtual HRESULT __stdcall put_SortDirection (
        enum CRSortDirection pSortDirection ) = 0;
    virtual HRESULT __stdcall get_Field (
        IDispatch * * ppField ) = 0;
    virtual HRESULT __stdcall put_Field (
        IDispatch * ppField ) = 0;
};

struct __declspec(uuid("af376833-6120-4e28-96dd-63fd2dc27b7a"))
IPrintingStatus : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Parent (
        struct IReport * * ppParent ) = 0;
    virtual HRESULT __stdcall get_NumberOfRecordRead (
        long * pRecordsRead ) = 0;
    virtual HRESULT __stdcall get_NumberOfRecordSelected (
        long * pRecordsSelected ) = 0;
    virtual HRESULT __stdcall get_NumberOfRecordPrinted (
        long * pRecordsPrinted ) = 0;
    virtual HRESULT __stdcall get_Progress (
        enum CRPrintingProgress * pProgress ) = 0;
    virtual HRESULT __stdcall get_NumberOfPages (
        long * pNumberOfPages ) = 0;
};

enum CRPrintingProgress
{
    crPrintingNotStarted = 1,
    crPrintingInProgress = 2,
    crPrintingCompleted = 3,
    crPrintingFailed = 4,
    crPrintingCancelled = 5,
    crPrintingHalted = 6
};

struct __declspec(uuid("af376822-6120-4e28-96dd-63fd2dc27b7a"))
IRunningTotalFieldDefinitions : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppNewEnum ) = 0;
    virtual HRESULT __stdcall get_Item (
        long index,
        struct IRunningTotalFieldDefinition * * ppRunningTotalFieldDefinition ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * pCount ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct IReport * * ppParent ) = 0;
    virtual HRESULT __stdcall Add (
        BSTR runningTotalName,
        struct IRunningTotalFieldDefinition * * ppRunningTotalDefinition ) = 0;
    virtual HRESULT __stdcall Delete (
        VARIANT index ) = 0;
    virtual HRESULT __stdcall GetItemByName (
        BSTR Name,
        struct IRunningTotalFieldDefinition * * ppRunningTotalFieldDefinition ) = 0;
};

struct __declspec(uuid("af376816-6120-4e28-96dd-63fd2dc27b7a"))
IRunningTotalFieldDefinition : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Kind (
        enum CRFieldKind * pKind ) = 0;
    virtual HRESULT __stdcall get_ValueType (
        CRFieldValueType * pValueType ) = 0;
    virtual HRESULT __stdcall get_NumberOfBytes (
        short * pNumberOfBytes ) = 0;
    virtual HRESULT __stdcall get_Name (
        BSTR * pName ) = 0;
    virtual HRESULT __stdcall get_Value (
        VARIANT * pValue ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct IReport * * ppParent ) = 0;
    virtual HRESULT __stdcall get_PreviousValue (
        VARIANT * pPreValue ) = 0;
    virtual HRESULT __stdcall get_NextValue (
        VARIANT * pNextValue ) = 0;
    virtual HRESULT __stdcall get_RunningTotalFieldName (
        BSTR * ppRunningTotalFieldName ) = 0;
    virtual HRESULT __stdcall get_SummarizedField (
        IDispatch * * ppSummarizedField ) = 0;
    virtual HRESULT __stdcall SetSummarizedField (
        VARIANT SummarizedField ) = 0;
    virtual HRESULT __stdcall get_SecondarySummarizedField (
        IDispatch * * ppSummarizedField ) = 0;
    virtual HRESULT __stdcall SetSecondarySummarizedField (
        VARIANT secondarySummariedField ) = 0;
    virtual HRESULT __stdcall get_SummaryOperationParameter (
        long * pOperationParameter ) = 0;
    virtual HRESULT __stdcall put_SummaryOperationParameter (
        long pOperationParameter ) = 0;
    virtual HRESULT __stdcall get_SummaryType (
        enum CRSummaryType * pSummaryType ) = 0;
    virtual HRESULT __stdcall put_SummaryType (
        enum CRSummaryType pSummaryType ) = 0;
    virtual HRESULT __stdcall get_EvaluateCondition (
        enum CRRunningTotalCondition * pEvaluateCondition ) = 0;
    virtual HRESULT __stdcall SetNoEvaluateCondition ( ) = 0;
    virtual HRESULT __stdcall get_ResetCondition (
        enum CRRunningTotalCondition * pResetCondition ) = 0;
    virtual HRESULT __stdcall SetNoResetCondition ( ) = 0;
    virtual HRESULT __stdcall get_EvaluateGroupNumber (
        short * pEvaluateGroupNumber ) = 0;
    virtual HRESULT __stdcall put_EvaluateGroupNumber (
        short pEvaluateGroupNumber ) = 0;
    virtual HRESULT __stdcall get_ResetGroupNumber (
        short * pResetGroupNumber ) = 0;
    virtual HRESULT __stdcall put_ResetGroupNumber (
        short pResetGroupNumber ) = 0;
    virtual HRESULT __stdcall get_EvaluateConditionField (
        IDispatch * * ppEvaluateConditionField ) = 0;
    virtual HRESULT __stdcall SetEvaluateConditionField (
        VARIANT pEvaluateConditionField ) = 0;
    virtual HRESULT __stdcall get_ResetConditionField (
        IDispatch * * ppResetConditionField ) = 0;
    virtual HRESULT __stdcall SetResetConditionField (
        VARIANT pResetConditionField ) = 0;
    virtual HRESULT __stdcall get_EvaluateConditionFormula (
        BSTR * ppText ) = 0;
    virtual HRESULT __stdcall put_EvaluateConditionFormula (
        BSTR ppText ) = 0;
    virtual HRESULT __stdcall get_ResetConditionFormula (
        BSTR * ppText ) = 0;
    virtual HRESULT __stdcall put_ResetConditionFormula (
        BSTR ppText ) = 0;
    virtual HRESULT __stdcall get_HierarchicalSummaryType (
        enum CRHierarchicalSummaryType * pHierarchicalType ) = 0;
    virtual HRESULT __stdcall put_HierarchicalSummaryType (
        enum CRHierarchicalSummaryType pHierarchicalType ) = 0;
};

enum CRRunningTotalCondition
{
    crRTEvalNoCondition = 0,
    crRTEvalOnChangeOfField = 1,
    crRTEvalOnChangeOfGroup = 2,
    crRTEvalOnFormula = 3
};

struct __declspec(uuid("af376823-6120-4e28-96dd-63fd2dc27b7a"))
ISQLExpressionFieldDefinitions : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppNewEnum ) = 0;
    virtual HRESULT __stdcall get_Item (
        long index,
        struct ISQLExpressionFieldDefinition * * ppSQLExpressionFieldDefinition ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * pCount ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct IReport * * ppParent ) = 0;
    virtual HRESULT __stdcall Add (
        BSTR SQLExpressionName,
        BSTR Text,
        struct ISQLExpressionFieldDefinition * * ppSQLExpression ) = 0;
    virtual HRESULT __stdcall Delete (
        VARIANT index ) = 0;
    virtual HRESULT __stdcall GetItemByName (
        BSTR Name,
        struct ISQLExpressionFieldDefinition * * ppSQLExpressionFieldDefinition ) = 0;
};

struct __declspec(uuid("af376817-6120-4e28-96dd-63fd2dc27b7a"))
ISQLExpressionFieldDefinition : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Kind (
        enum CRFieldKind * pKind ) = 0;
    virtual HRESULT __stdcall get_ValueType (
        CRFieldValueType * pValueType ) = 0;
    virtual HRESULT __stdcall get_NumberOfBytes (
        short * pNumberOfBytes ) = 0;
    virtual HRESULT __stdcall get_Name (
        BSTR * pName ) = 0;
    virtual HRESULT __stdcall get_Value (
        VARIANT * pValue ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct IReport * * ppParent ) = 0;
    virtual HRESULT __stdcall get_PreviousValue (
        VARIANT * pPreValue ) = 0;
    virtual HRESULT __stdcall get_NextValue (
        VARIANT * pNextValue ) = 0;
    virtual HRESULT __stdcall get_SQLExpressionFieldName (
        BSTR * ppSQLExpressionFieldName ) = 0;
    virtual HRESULT __stdcall get_Text (
        BSTR * ppText ) = 0;
    virtual HRESULT __stdcall put_Text (
        BSTR ppText ) = 0;
    virtual HRESULT __stdcall Check (
        VARIANT_BOOL * pBool,
        BSTR * ppErrorString ) = 0;
};

enum CRReportVariableValueType
{
    crRVNumber = 0,
    crRVCurrency = 1,
    crRVBoolean = 2,
    crRVDate = 3,
    crRVTime = 4,
    crRVDateTime = 5,
    crRVString = 6
};

enum CRReportFormatStyle
{
    crRFStandardStyle = 0,
    crRFLeadingBreakStyle = 1,
    crRFTrailingBreakStyle = 2,
    crRFTableStyle = 3,
    crRFDropTableStyle = 4,
    crRFExecutiveLeadingBreakStyle = 5,
    crRFExecutiveTrailingBreakStyle = 6,
    crRFShadingStyle = 7,
    crRFRedBlueBorderStyle = 8,
    crRFMartoonTealBoxStyle = 9
};

enum CRPrinterDuplexType
{
    crPRDPDefault = 0,
    crPRDPSimplex = 1,
    crPRDPVertical = 2,
    crPRDPHorizontal = 3
};

enum CRPaperSource
{
    crPRBinUpper = 1,
    crPRBinLower = 2,
    crPRBinMiddle = 3,
    crPRBinManual = 4,
    crPRBinEnvelope = 5,
    crPRBinEnvManual = 6,
    crPRBinAuto = 7,
    crPRBinTractor = 8,
    crPRBinSmallFmt = 9,
    crPRBinLargeFmt = 10,
    crPRBinLargeCapacity = 11,
    crPRBinCassette = 14,
    crPRBinFormSource = 15
};

enum CRBindingMatchType
{
    crBMTName = 0,
    crBMTNameAndValue = 1
};

enum CRReportFileFormat
{
    crDefaultFileFormat = 0,
    cr70FileFormat = 1792,
    cr80FileFormat = 2048
};

enum CRFieldMappingType
{
    crAutoFieldMapping = 0,
    crPromptFieldMapping = 1,
    crEventFieldMapping = 2
};

enum CRFormulaSyntax
{
    crCrystalSyntaxFormula = 0,
    crBasicSyntaxFormula = 1
};

struct __declspec(uuid("af37685c-6120-4e28-96dd-63fd2dc27b7a"))
IReportAlerts : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppNewEnum ) = 0;
    virtual HRESULT __stdcall get_Item (
        VARIANT index,
        struct IReportAlert * * ppReportAlert ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * pCount ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct IReport * * ppParent ) = 0;
    virtual HRESULT __stdcall Add (
        BSTR Name,
        BSTR DefaultMessage,
        VARIANT_BOOL IsEnabled,
        BSTR ConditionFormula,
        BSTR MessageFormula,
        struct IReportAlert * * ppAlert ) = 0;
    virtual HRESULT __stdcall Delete (
        VARIANT index ) = 0;
};

struct __declspec(uuid("af37685b-6120-4e28-96dd-63fd2dc27b7a"))
IReportAlert : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Parent (
        struct IReport * * ppParent ) = 0;
    virtual HRESULT __stdcall get_Name (
        BSTR * ppName ) = 0;
    virtual HRESULT __stdcall put_Name (
        BSTR ppName ) = 0;
    virtual HRESULT __stdcall get_DefaultMessage (
        BSTR * ppMessage ) = 0;
    virtual HRESULT __stdcall put_DefaultMessage (
        BSTR ppMessage ) = 0;
    virtual HRESULT __stdcall get_IsEnabled (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_IsEnabled (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_ConditionFormula (
        BSTR * ppText ) = 0;
    virtual HRESULT __stdcall put_ConditionFormula (
        BSTR ppText ) = 0;
    virtual HRESULT __stdcall get_MessageFormula (
        BSTR * ppText ) = 0;
    virtual HRESULT __stdcall put_MessageFormula (
        BSTR ppText ) = 0;
    virtual HRESULT __stdcall get_AlertInstances (
        struct IReportAlertInstances * * ppInstances ) = 0;
};

struct __declspec(uuid("af37685e-6120-4e28-96dd-63fd2dc27b7a"))
IReportAlertInstances : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppNewEnum ) = 0;
    virtual HRESULT __stdcall get_Item (
        long index,
        struct IReportAlertInstance * * ppReportAlertInstance ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * pCount ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct IReportAlert * * ppParent ) = 0;
};

struct __declspec(uuid("af37685d-6120-4e28-96dd-63fd2dc27b7a"))
IReportAlertInstance : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Parent (
        struct IReportAlert * * ppParent ) = 0;
    virtual HRESULT __stdcall get_AlertMessage (
        BSTR * ppMessage ) = 0;
};

struct __declspec(uuid("3dcc8fb4-c434-11d1-a817-00a0c92784cd"))
ICrystalReportSource : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetPage (
        long lCookie,
        BSTR bstrBranch,
        BSTR bstrFormula,
        long lPageNumber,
        short DrillDownLevel ) = 0;
    virtual HRESULT __stdcall GetTotaller (
        long lCookie,
        BSTR bstrBranch,
        BSTR bstrFormula,
        BSTR bstrRootGroup,
        long lStartFrom,
        short nLevelsPastRoot,
        VARIANT vtMaxNodeCount ) = 0;
    virtual HRESULT __stdcall GetLastPageNumber (
        long lCookie,
        BSTR bstrBranch,
        BSTR bstrFormula,
        short DrillDownLevel ) = 0;
    virtual HRESULT __stdcall FindGroup (
        long lCookie,
        BSTR bstrBranch,
        BSTR bstrFormula,
        BSTR bstrGroupPath,
        short DrillDownLevel ) = 0;
    virtual HRESULT __stdcall FindText (
        long lCookie,
        BSTR bstrBranch,
        BSTR bstrFormula,
        long lFromPage,
        long lFromInstance,
        BSTR bstrText,
        enum CRSearchDirection nMode,
        short DrillDownLevel ) = 0;
    virtual HRESULT __stdcall DrillGraph (
        long lCookie,
        BSTR bstrBranch,
        BSTR bstrFormula,
        long lPageNumber,
        long xOffset,
        long yOffset,
        short DrillDownLevel ) = 0;
    virtual HRESULT __stdcall Refresh (
        long lCookie ) = 0;
    virtual HRESULT __stdcall Cancel (
        long lCookie ) = 0;
};

struct __declspec(uuid("3dcc8fb5-c434-11d1-a817-00a0c92784cd"))
ICrystalReportProperties : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetTitle (
        BSTR * pVal ) = 0;
};

struct __declspec(uuid("6876d971-f0f2-11d1-bedf-00a0c95a6a5c"))
ICrystalReportSourceProperties : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetImageType (
        enum CRImageType * pVal ) = 0;
    virtual HRESULT __stdcall SupportsSelectionFormula (
        VARIANT_BOOL * pVal ) = 0;
};

struct __declspec(uuid("b4742013-45a6-11d1-abec-00a0c9274b91"))
ICrystalReportPrinterPort : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Print (
        BSTR pBstrBranch,
        short DrillDownLevel ) = 0;
    virtual HRESULT __stdcall GetPrinterName (
        BSTR * ppPrinterName ) = 0;
    virtual HRESULT __stdcall GetDriverName (
        BSTR * ppDriverName ) = 0;
    virtual HRESULT __stdcall GetPortName (
        BSTR * ppPortName ) = 0;
    virtual HRESULT __stdcall GetPaperOrientation (
        enum CRPaperOrientation * pPaperOrientation ) = 0;
    virtual HRESULT __stdcall GetPaperSize (
        enum CRPaperSize * pPaperSize ) = 0;
};

struct __declspec(uuid("b4742143-45a6-11d1-abec-00a0c9274b91"))
ICrystalReportPrinterPortEx : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Print (
        BSTR pBstrBranch,
        short DrillDownLevel,
        BSTR bstrSubreportContext ) = 0;
    virtual HRESULT __stdcall GetPrinterName (
        BSTR * ppPrinterName ) = 0;
    virtual HRESULT __stdcall GetDriverName (
        BSTR * ppDriverName ) = 0;
    virtual HRESULT __stdcall GetPortName (
        BSTR * ppPortName ) = 0;
    virtual HRESULT __stdcall GetPaperOrientation (
        enum CRPaperOrientation * pPaperOrientation ) = 0;
    virtual HRESULT __stdcall GetPaperSize (
        enum CRPaperSize * pPaperSize ) = 0;
};

struct __declspec(uuid("3dcc8fb3-c434-11d1-a817-00a0c92784cd"))
ICrystalReportSourceEvents : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall OnStartBinding (
        long dwReserved ) = 0;
    virtual HRESULT __stdcall OnStopBinding (
        HRESULT hrStatus,
        BSTR bstrStatusText ) = 0;
    virtual HRESULT __stdcall OnDataAvailable (
        VARIANT vtDataDescription,
        VARIANT vtData,
        VARIANT vtParam ) = 0;
    virtual HRESULT __stdcall OnProgress (
        long ulProgress,
        long ulProgressMax,
        long ulStatusCode,
        BSTR szStatusText ) = 0;
};

struct __declspec(uuid("af376802-6120-4e28-96dd-63fd2dc27b7a"))
IReportEvent : IDispatch
{};

struct __declspec(uuid("bd10a9c0-07cc-11d2-beff-00a0c95a6a5c"))
ICrystalReportExport : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall SetReportSource (
        IUnknown * pNewVal ) = 0;
    virtual HRESULT __stdcall Export (
        unsigned int hWnd,
        BSTR pBstrBranch,
        BSTR bstrSubreportContext,
        BSTR pBstrFormula,
        VARIANT vtPromptingInfo ) = 0;
    virtual HRESULT __stdcall GetFileName (
        BSTR * ppVal ) = 0;
    virtual HRESULT __stdcall SetFileName (
        BSTR pNewVal ) = 0;
    virtual HRESULT __stdcall GetExportType (
        VARIANT * format,
        VARIANT * reserved ) = 0;
    virtual HRESULT __stdcall SetExportType (
        VARIANT format,
        VARIANT reserved ) = 0;
};

struct __declspec(uuid("4d773761-0ad4-11d2-bf01-00a0c95a6a5c"))
ICrystalReportExportEvents : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall ExportCancelled ( ) = 0;
    virtual HRESULT __stdcall ExportFailed ( ) = 0;
    virtual HRESULT __stdcall ExportComplete (
        BSTR pFileName,
        BSTR pFileType ) = 0;
};

struct __declspec(uuid("af3768d1-6120-4e28-96dd-63fd2dc27b7a"))
Areas;
    // [ default ] interface IAreas

struct __declspec(uuid("af3768d2-6120-4e28-96dd-63fd2dc27b7a"))
Sections;
    // [ default ] interface ISections

struct __declspec(uuid("af3768d3-6120-4e28-96dd-63fd2dc27b7a"))
Area;
    // [ default ] interface IArea

struct __declspec(uuid("af3768d4-6120-4e28-96dd-63fd2dc27b7a"))
Section;
    // [ default ] interface ISection
    // [ default, source ] dispinterface ISectionEvent

struct __declspec(uuid("af37684b-6120-4e28-96dd-63fd2dc27b7a"))
ISectionEvent : IDispatch
{};

struct __declspec(uuid("af3768d5-6120-4e28-96dd-63fd2dc27b7a"))
ReportObjects;
    // [ default ] interface IReportObjects

struct __declspec(uuid("af3768d6-6120-4e28-96dd-63fd2dc27b7a"))
FieldObject;
    // [ default ] interface IFieldObject
    // interface IReportObject

struct __declspec(uuid("af3768d7-6120-4e28-96dd-63fd2dc27b7a"))
TextObject;
    // [ default ] interface ITextObject
    // interface IReportObject

struct __declspec(uuid("af3768d8-6120-4e28-96dd-63fd2dc27b7a"))
SubreportObject;
    // [ default ] interface ISubreportObject
    // interface IReportObject

struct __declspec(uuid("af3768d9-6120-4e28-96dd-63fd2dc27b7a"))
DatabaseFieldDefinition;
    // [ default ] interface IDatabaseFieldDefinition
    // interface IFieldDefinition

struct __declspec(uuid("af3768da-6120-4e28-96dd-63fd2dc27b7a"))
FormulaFieldDefinition;
    // [ default ] interface IFormulaFieldDefinition
    // interface IFieldDefinition

struct __declspec(uuid("af3768db-6120-4e28-96dd-63fd2dc27b7a"))
ParameterFieldDefinition;
    // [ default ] interface IParameterFieldDefinition
    // interface IFieldDefinition

struct __declspec(uuid("af3768dc-6120-4e28-96dd-63fd2dc27b7a"))
GroupNameFieldDefinition;
    // [ default ] interface IGroupNameFieldDefinition
    // interface IFieldDefinition

struct __declspec(uuid("af3768dd-6120-4e28-96dd-63fd2dc27b7a"))
SpecialVarFieldDefinition;
    // [ default ] interface ISpecialVarFieldDefinition
    // interface IFieldDefinition

struct __declspec(uuid("af376814-6120-4e28-96dd-63fd2dc27b7a"))
ISpecialVarFieldDefinition : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Kind (
        enum CRFieldKind * pKind ) = 0;
    virtual HRESULT __stdcall get_ValueType (
        CRFieldValueType * pValueType ) = 0;
    virtual HRESULT __stdcall get_NumberOfBytes (
        short * pNumberOfBytes ) = 0;
    virtual HRESULT __stdcall get_Name (
        BSTR * pName ) = 0;
    virtual HRESULT __stdcall get_Value (
        VARIANT * pValue ) = 0;
    virtual HRESULT __stdcall get_specialVarType (
        enum CRSpecialVarType * pSpecialVarType ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct IReport * * ppParent ) = 0;
    virtual HRESULT __stdcall get_PreviousValue (
        VARIANT * pPreValue ) = 0;
    virtual HRESULT __stdcall get_NextValue (
        VARIANT * pNextValue ) = 0;
};

struct __declspec(uuid("af3768de-6120-4e28-96dd-63fd2dc27b7a"))
SummaryFieldDefinition;
    // [ default ] interface ISummaryFieldDefinition
    // interface IFieldDefinition

struct __declspec(uuid("af3768df-6120-4e28-96dd-63fd2dc27b7a"))
RunningTotalFieldDefinition;
    // [ default ] interface IRunningTotalFieldDefinition
    // interface IFieldDefinition

struct __declspec(uuid("af3768e0-6120-4e28-96dd-63fd2dc27b7a"))
SQLExpressionFieldDefinition;
    // [ default ] interface ISQLExpressionFieldDefinition
    // interface IFieldDefinition

struct __declspec(uuid("af3768e1-6120-4e28-96dd-63fd2dc27b7a"))
Database;
    // [ default ] interface IDatabase

struct __declspec(uuid("af3768e2-6120-4e28-96dd-63fd2dc27b7a"))
DatabaseTables;
    // [ default ] interface IDatabaseTables

struct __declspec(uuid("af3768e3-6120-4e28-96dd-63fd2dc27b7a"))
DatabaseTable;
    // [ default ] interface IDatabaseTable

struct __declspec(uuid("af3768e4-6120-4e28-96dd-63fd2dc27b7a"))
DatabaseFieldDefinitions;
    // [ default ] interface IDatabaseFieldDefinitions

struct __declspec(uuid("af3768e5-6120-4e28-96dd-63fd2dc27b7a"))
FormulaFieldDefinitions;
    // [ default ] interface IFormulaFieldDefinitions

struct __declspec(uuid("af3768e6-6120-4e28-96dd-63fd2dc27b7a"))
ParameterFieldDefinitions;
    // [ default ] interface IParameterFieldDefinitions

struct __declspec(uuid("af3768e7-6120-4e28-96dd-63fd2dc27b7a"))
GroupNameFieldDefinitions;
    // [ default ] interface IGroupNameFieldDefinitions

struct __declspec(uuid("af3768e8-6120-4e28-96dd-63fd2dc27b7a"))
SummaryFieldDefinitions;
    // [ default ] interface ISummaryFieldDefinitions

struct __declspec(uuid("af3768e9-6120-4e28-96dd-63fd2dc27b7a"))
RunningTotalFieldDefinitions;
    // [ default ] interface IRunningTotalFieldDefinitions

struct __declspec(uuid("af3768ea-6120-4e28-96dd-63fd2dc27b7a"))
SQLExpressionFieldDefinitions;
    // [ default ] interface ISQLExpressionFieldDefinitions

struct __declspec(uuid("af3768eb-6120-4e28-96dd-63fd2dc27b7a"))
GraphObject;
    // [ default ] interface IGraphObject

struct __declspec(uuid("af3768ec-6120-4e28-96dd-63fd2dc27b7a"))
MapObject;
    // [ default ] interface IMapObject

struct __declspec(uuid("af376825-6120-4e28-96dd-63fd2dc27b7a"))
IMapObject : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Name (
        BSTR * ppName ) = 0;
    virtual HRESULT __stdcall put_Name (
        BSTR ppName ) = 0;
    virtual HRESULT __stdcall get_Kind (
        enum CRObjectKind * pObjectKind ) = 0;
    virtual HRESULT __stdcall get_Left (
        long * pLeft ) = 0;
    virtual HRESULT __stdcall put_Left (
        long pLeft ) = 0;
    virtual HRESULT __stdcall get_Top (
        long * pTop ) = 0;
    virtual HRESULT __stdcall put_Top (
        long pTop ) = 0;
    virtual HRESULT __stdcall get_Width (
        long * pWidth ) = 0;
    virtual HRESULT __stdcall put_Width (
        long pWidth ) = 0;
    virtual HRESULT __stdcall get_Height (
        long * pHeight ) = 0;
    virtual HRESULT __stdcall put_Height (
        long pHeight ) = 0;
    virtual HRESULT __stdcall get_LeftLineStyle (
        enum CRLineStyle * pLeftLineStyle ) = 0;
    virtual HRESULT __stdcall put_LeftLineStyle (
        enum CRLineStyle pLeftLineStyle ) = 0;
    virtual HRESULT __stdcall get_RightLineStyle (
        enum CRLineStyle * pRightLineStyle ) = 0;
    virtual HRESULT __stdcall put_RightLineStyle (
        enum CRLineStyle pRightLineStyle ) = 0;
    virtual HRESULT __stdcall get_TopLineStyle (
        enum CRLineStyle * pTopLineStyle ) = 0;
    virtual HRESULT __stdcall put_TopLineStyle (
        enum CRLineStyle pTopLineStyle ) = 0;
    virtual HRESULT __stdcall get_BottomLineStyle (
        enum CRLineStyle * pBottomLineStyle ) = 0;
    virtual HRESULT __stdcall put_BottomLineStyle (
        enum CRLineStyle pBottomLineStyle ) = 0;
    virtual HRESULT __stdcall get_HasDropShadow (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_HasDropShadow (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_BackColor (
        OLE_COLOR * pBackColor ) = 0;
    virtual HRESULT __stdcall put_BackColor (
        OLE_COLOR pBackColor ) = 0;
    virtual HRESULT __stdcall get_BorderColor (
        OLE_COLOR * pBorderColor ) = 0;
    virtual HRESULT __stdcall put_BorderColor (
        OLE_COLOR pBorderColor ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct ISection * * ppParent ) = 0;
    virtual HRESULT __stdcall get_Suppress (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_Suppress (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_CloseAtPageBreak (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_CloseAtPageBreak (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_KeepTogether (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_KeepTogether (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_ConditionFormula (
        VARIANT FormulaType,
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_ConditionFormula (
        VARIANT FormulaType,
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall get_CssClass (
        BSTR * ppCssClass ) = 0;
    virtual HRESULT __stdcall put_CssClass (
        BSTR ppCssClass ) = 0;
};

struct __declspec(uuid("af3768ed-6120-4e28-96dd-63fd2dc27b7a"))
OleObject;
    // [ default ] interface ICROleObject

struct __declspec(uuid("af3768ee-6120-4e28-96dd-63fd2dc27b7a"))
BlobFieldObject;
    // [ default ] interface IBlobFieldObject

struct __declspec(uuid("af3768ef-6120-4e28-96dd-63fd2dc27b7a"))
LineObject;
    // [ default ] interface ILineObject

struct __declspec(uuid("af3768f0-6120-4e28-96dd-63fd2dc27b7a"))
BoxObject;
    // [ default ] interface IBoxObject

struct __declspec(uuid("af3768f1-6120-4e28-96dd-63fd2dc27b7a"))
OlapGridObject;
    // [ default ] interface IOlapGridObject

struct __declspec(uuid("af37685f-6120-4e28-96dd-63fd2dc27b7a"))
IOlapGridObject : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Name (
        BSTR * ppName ) = 0;
    virtual HRESULT __stdcall put_Name (
        BSTR ppName ) = 0;
    virtual HRESULT __stdcall get_Kind (
        enum CRObjectKind * pObjectKind ) = 0;
    virtual HRESULT __stdcall get_Left (
        long * pLeft ) = 0;
    virtual HRESULT __stdcall put_Left (
        long pLeft ) = 0;
    virtual HRESULT __stdcall get_Top (
        long * pTop ) = 0;
    virtual HRESULT __stdcall put_Top (
        long pTop ) = 0;
    virtual HRESULT __stdcall get_Width (
        long * pWidth ) = 0;
    virtual HRESULT __stdcall get_Height (
        long * pHeight ) = 0;
    virtual HRESULT __stdcall get_LeftLineStyle (
        enum CRLineStyle * pLeftLineStyle ) = 0;
    virtual HRESULT __stdcall put_LeftLineStyle (
        enum CRLineStyle pLeftLineStyle ) = 0;
    virtual HRESULT __stdcall get_RightLineStyle (
        enum CRLineStyle * pRightLineStyle ) = 0;
    virtual HRESULT __stdcall put_RightLineStyle (
        enum CRLineStyle pRightLineStyle ) = 0;
    virtual HRESULT __stdcall get_TopLineStyle (
        enum CRLineStyle * pTopLineStyle ) = 0;
    virtual HRESULT __stdcall put_TopLineStyle (
        enum CRLineStyle pTopLineStyle ) = 0;
    virtual HRESULT __stdcall get_BottomLineStyle (
        enum CRLineStyle * pBottomLineStyle ) = 0;
    virtual HRESULT __stdcall put_BottomLineStyle (
        enum CRLineStyle pBottomLineStyle ) = 0;
    virtual HRESULT __stdcall get_HasDropShadow (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_HasDropShadow (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_BackColor (
        OLE_COLOR * pBackColor ) = 0;
    virtual HRESULT __stdcall put_BackColor (
        OLE_COLOR pBackColor ) = 0;
    virtual HRESULT __stdcall get_BorderColor (
        OLE_COLOR * pBorderColor ) = 0;
    virtual HRESULT __stdcall put_BorderColor (
        OLE_COLOR pBorderColor ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct ISection * * ppParent ) = 0;
    virtual HRESULT __stdcall get_Suppress (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_Suppress (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_CloseAtPageBreak (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_CloseAtPageBreak (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_KeepTogether (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_KeepTogether (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_ConditionFormula (
        VARIANT FormulaType,
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_ConditionFormula (
        VARIANT FormulaType,
        BSTR pVal ) = 0;
};

struct __declspec(uuid("af3768f2-6120-4e28-96dd-63fd2dc27b7a"))
CrossTabObject;
    // [ default ] interface ICrossTabObject

struct __declspec(uuid("af3768f3-6120-4e28-96dd-63fd2dc27b7a"))
PageEngine;
    // [ default ] interface IPageEngine

struct __declspec(uuid("af3768f4-6120-4e28-96dd-63fd2dc27b7a"))
PageGenerator;
    // [ default ] interface IPageGenerator

struct __declspec(uuid("af3768f5-6120-4e28-96dd-63fd2dc27b7a"))
Pages;
    // [ default ] interface IPages

struct __declspec(uuid("af3768f6-6120-4e28-96dd-63fd2dc27b7a"))
Page;
    // [ default ] interface IPage

struct __declspec(uuid("af3768f7-6120-4e28-96dd-63fd2dc27b7a"))
ExportOptions;
    // [ default ] interface IExportOptions

struct __declspec(uuid("af3768f8-6120-4e28-96dd-63fd2dc27b7a"))
Application;
    // [ default ] interface IApplication

struct __declspec(uuid("af3768f9-6120-4e28-96dd-63fd2dc27b7a"))
FormattingInfo;
    // [ default ] interface IFormattingInfo

struct __declspec(uuid("af37684c-6120-4e28-96dd-63fd2dc27b7a"))
IFormattingInfo : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_IsRepeatedGroupHeader (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall get_IsStartOfGroup (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall get_IsEndOfGroup (
        VARIANT_BOOL * pBool ) = 0;
};

struct __declspec(uuid("af3768fa-6120-4e28-96dd-63fd2dc27b7a"))
SortFields;
    // [ default ] interface ISortFields

struct __declspec(uuid("af3768fb-6120-4e28-96dd-63fd2dc27b7a"))
SortField;
    // [ default ] interface ISortField

struct __declspec(uuid("af3768fc-6120-4e28-96dd-63fd2dc27b7a"))
PrintingStatus;
    // [ default ] interface IPrintingStatus

struct __declspec(uuid("af3768fd-6120-4e28-96dd-63fd2dc27b7a"))
SubreportLink;
    // [ default ] interface ISubreportLink

struct __declspec(uuid("af3768fe-6120-4e28-96dd-63fd2dc27b7a"))
SubreportLinks;
    // [ default ] interface ISubreportLinks

struct __declspec(uuid("af3768ff-6120-4e28-96dd-63fd2dc27b7a"))
CrossTabGroups;
    // [ default ] interface ICrossTabGroups

struct __declspec(uuid("af376900-6120-4e28-96dd-63fd2dc27b7a"))
CrossTabGroup;
    // [ default ] interface ICrossTabGroup

struct __declspec(uuid("af376901-6120-4e28-96dd-63fd2dc27b7a"))
FieldDefinitions;
    // [ default ] interface IFieldDefinitions

struct __declspec(uuid("af376902-6120-4e28-96dd-63fd2dc27b7a"))
ObjectSummaryFieldDefinitions;
    // [ default ] interface IObjectSummaryFieldDefinitions

struct __declspec(uuid("af376903-6120-4e28-96dd-63fd2dc27b7a"))
TableLink;
    // [ default ] interface ITableLink

struct __declspec(uuid("af376904-6120-4e28-96dd-63fd2dc27b7a"))
TableLinks;
    // [ default ] interface ITableLinks

struct __declspec(uuid("af376905-6120-4e28-96dd-63fd2dc27b7a"))
FieldMappingData;
    // [ default ] interface IFieldMappingData

struct __declspec(uuid("af376856-6120-4e28-96dd-63fd2dc27b7a"))
IFieldMappingData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_ValueType (
        CRFieldValueType * pValueType ) = 0;
    virtual HRESULT __stdcall put_ValueType (
        CRFieldValueType pValueType ) = 0;
    virtual HRESULT __stdcall get_TableName (
        BSTR * pTableName ) = 0;
    virtual HRESULT __stdcall put_TableName (
        BSTR pTableName ) = 0;
    virtual HRESULT __stdcall get_FieldName (
        BSTR * pFieldName ) = 0;
    virtual HRESULT __stdcall put_FieldName (
        BSTR pFieldName ) = 0;
    virtual HRESULT __stdcall get_MappingToFieldIndex (
        short * pMappingTo ) = 0;
    virtual HRESULT __stdcall put_MappingToFieldIndex (
        short pMappingTo ) = 0;
};

struct __declspec(uuid("af376906-6120-4e28-96dd-63fd2dc27b7a"))
ParameterValue;
    // [ default ] interface IParameterValue

struct __declspec(uuid("af376857-6120-4e28-96dd-63fd2dc27b7a"))
IParameterValue : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_StartValue (
        VARIANT * StartValue ) = 0;
    virtual HRESULT __stdcall put_StartValue (
        VARIANT StartValue ) = 0;
    virtual HRESULT __stdcall get_EndValue (
        VARIANT * EndValue ) = 0;
    virtual HRESULT __stdcall put_EndValue (
        VARIANT EndValue ) = 0;
    virtual HRESULT __stdcall get_RangeValue (
        VARIANT_BOOL * pBool ) = 0;
    virtual HRESULT __stdcall put_RangeValue (
        VARIANT_BOOL pBool ) = 0;
    virtual HRESULT __stdcall get_rangeInfo (
        enum CRRangeInfo * rangeInfo ) = 0;
    virtual HRESULT __stdcall put_rangeInfo (
        enum CRRangeInfo rangeInfo ) = 0;
};

struct __declspec(uuid("af376907-6120-4e28-96dd-63fd2dc27b7a"))
ParameterValues;
    // [ default ] interface IParameterValues

struct __declspec(uuid("af376858-6120-4e28-96dd-63fd2dc27b7a"))
IParameterValues : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppNewEnum ) = 0;
    virtual HRESULT __stdcall get_Item (
        long index,
        struct IParameterValue * * ppValue ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * pCount ) = 0;
    virtual HRESULT __stdcall Add (
        struct IParameterValue * pValue ) = 0;
    virtual HRESULT __stdcall Delete (
        long index ) = 0;
};

struct __declspec(uuid("af376908-6120-4e28-96dd-63fd2dc27b7a"))
ParameterValueInfo;
    // [ default ] interface IParameterValueInfo

struct __declspec(uuid("af376859-6120-4e28-96dd-63fd2dc27b7a"))
IParameterValueInfo : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_ParameterValues (
        struct IParameterValues * * ppValues ) = 0;
    virtual HRESULT __stdcall put_ParameterValues (
        struct IParameterValues * ppValues ) = 0;
    virtual HRESULT __stdcall get_parameterName (
        BSTR * pParameterName ) = 0;
    virtual HRESULT __stdcall put_parameterName (
        BSTR pParameterName ) = 0;
};

struct __declspec(uuid("af376909-6120-4e28-96dd-63fd2dc27b7a"))
ParameterValueInfos;
    // [ default ] interface IParameterValueInfos

struct __declspec(uuid("af37685a-6120-4e28-96dd-63fd2dc27b7a"))
IParameterValueInfos : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppNewEnum ) = 0;
    virtual HRESULT __stdcall get_Item (
        long index,
        struct IParameterValueInfo * * ppValueInfo ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * pCount ) = 0;
    virtual HRESULT __stdcall Add (
        struct IParameterValueInfo * pValueInfo ) = 0;
    virtual HRESULT __stdcall Delete (
        long index ) = 0;
};

struct __declspec(uuid("af37690a-6120-4e28-96dd-63fd2dc27b7a"))
ReportAlert;
    // [ default ] interface IReportAlert

struct __declspec(uuid("af37690b-6120-4e28-96dd-63fd2dc27b7a"))
ReportAlerts;
    // [ default ] interface IReportAlerts

struct __declspec(uuid("af37690c-6120-4e28-96dd-63fd2dc27b7a"))
ReportAlertInstance;
    // [ default ] interface IReportAlertInstance

struct __declspec(uuid("af37690d-6120-4e28-96dd-63fd2dc27b7a"))
ReportAlertInstances;
    // [ default ] interface IReportAlertInstances

struct __declspec(uuid("af37690e-6120-4e28-96dd-63fd2dc27b7a"))
FieldElements;
    // [ default ] interface IFieldElements

struct __declspec(uuid("af37690f-6120-4e28-96dd-63fd2dc27b7a"))
FieldElement;
    // [ default ] interface IFieldElement

struct __declspec(uuid("af376910-6120-4e28-96dd-63fd2dc27b7a"))
ConnectionProperties;
    // [ default ] interface INameValuePairs

struct __declspec(uuid("af376911-6120-4e28-96dd-63fd2dc27b7a"))
ConnectionProperty;
    // [ default ] interface IConnectionProperty

struct __declspec(uuid("af376861-6120-4e28-96dd-63fd2dc27b7a"))
IConnectionProperty : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Name (
        BSTR * pName ) = 0;
    virtual HRESULT __stdcall put_Name (
        BSTR pName ) = 0;
    virtual HRESULT __stdcall get_LocalizedName (
        BSTR * pLocName ) = 0;
    virtual HRESULT __stdcall put_LocalizedName (
        BSTR pLocName ) = 0;
    virtual HRESULT __stdcall get_Description (
        BSTR * pDescription ) = 0;
    virtual HRESULT __stdcall put_Description (
        BSTR pDescription ) = 0;
    virtual HRESULT __stdcall get_Value (
        VARIANT * pValue ) = 0;
    virtual HRESULT __stdcall put_Value (
        VARIANT pValue ) = 0;
    virtual HRESULT __stdcall get_ChildProperties (
        struct INameValuePairs * * ppNVPairs ) = 0;
};

enum CROpenReportMethod
{
    crOpenReportByDefault = 0,
    crOpenReportByTempCopy = 1
};

enum CRSectionAreaFormatConditionFormulaType
{
    crSectionAreaEnableSuppressConditionFormulaType = 0,
    crSectionAreaEnablePrintAtBottomOfPageConditionFormulaType = 1,
    crSectionAreaEnableNewPageAfterConditionFormulaType = 2,
    crSectionAreaEnableNewPageBeforeConditionFormulaType = 3,
    crSectionAreaEnableKeepTogetherConditionFormulaType = 4,
    crSectionAreaEnableSuppressIfBlankConditionFormulaType = 5,
    crSectionAreaEnableResetPageNumberAfterConditionFormulaType = 6,
    crSectionAreaEnableUnderlaySectionConditionFormulaType = 7,
    crSectionAreaBackgroundColorConditionFormulaType = 8,
    crSectionAreaShowAreaConditionFormulaType = 9,
    crSectionAreaEnableHideForDrillDownConditionFormulaType = 10
};

enum CRBooleanFieldFormatConditionFormulaType
{
    crOutputFormatConditionFormulaType = 20
};

enum CRBorderConditionFormulaType
{
    crLeftLineStyleConditionFormulaType = 40,
    crRightLineStyleConditionFormulaType = 41,
    crTopLineStyleConditionFormulaType = 42,
    crBottomLineStyleConditionFormulaType = 43,
    crHasDropShadowConditionFormulaType = 44,
    crBackgroundColorConditionFormulaType = 45,
    crBorderColorConditionFormulaType = 46,
    crTightHorizontalConditionFormulaType = 47,
    crTightVerticalConditionFormulaType = 48
};

enum CRObjectFormatConditionFormulaType
{
    crEnableSuppressConditionFormulaType = 60,
    crEnableKeepTogetherConditionFormulaType = 61,
    crEnableCloseAtPageBreakConditionFormulaType = 62,
    crHorizontalAlignmentConditionFormulaType = 63,
    crEnableCanGrowConditionFormulaType = 64,
    crToolTipTextConditionFormulaType = 65,
    crRotationConditionFormulaType = 66,
    crHyperLinkConditionFormulaType = 67
};

enum CRCommonFieldFormatConditionFormulaType
{
    crSuppressIfDuplicatedConditionFormulaType = 80,
    crUseSystemDefaultConditionFormulaType = 81
};

enum CRNumericFieldFormatConditionFormulaType
{
    crNDecimalPlacesConditionFormulaType = 100,
    crRoundingFormatConditionFormulaType = 101,
    crEnableUseLeadZeroConditionFormulaType = 102,
    crNegativeFormatConditionFormulaType = 103,
    crCurrencySymbolFormatConditionFormulaType = 104,
    crEnableSuppressIfZeroConditionFormulaType = 105,
    crThousandsSeparatorConditionFormulaType = 106,
    crThousandSymbolConditionFormulaType = 107,
    crDecimalSymbolConditionFormulaType = 108,
    crCurrencySymbolConditionFormulaType = 109,
    crHasOneSymbolPerPageConditionFormulaType = 110,
    crCurrencyPositionConditionFormulaType = 111,
    crDisplayReverseSignConditionFormulaType = 112,
    crZeroValueStringConditionFormulaType = 113,
    crAllowFieldClippingConditionFormulaType = 114
};

enum CRDateFieldFormatConditionFormulaType
{
    crYearFormatConditionFormulaType = 120,
    crMonthFormatConditionFormulaType = 121,
    crDayFormatConditionFormulaType = 122,
    crWindowsDefaultTypeConditionFormulaType = 123,
    crDateOrderConditionFormulaType = 124,
    crDayOfWeekTypeConditionFormulaType = 125,
    crDayOfWeekSeparatorConditionFormulaType = 126,
    crDayOfWeekPositionConditionFormulaType = 127,
    crDateFirstSeparatorConditionFormulaType = 128,
    crDateSecondSeparatorConditionFormulaType = 129,
    crEraTypeConditionFormulaType = 130,
    crCalendarTypeConditionFormulaType = 131,
    crDatePrefixSeparatorConditionFormulaType = 132,
    crDateSuffixSeparatorConditionFormulaType = 133,
    crDayOfWeekEnclosureConditionFormulaType = 134
};

enum CRDateTimeFieldFormatConditionFormulaType
{
    crDateTimeOrderConditionFormulaType = 140,
    crDateTimeSeparatorConditionFormulaType = 141
};

enum CRTimeFieldFormatConditionFormulaType
{
    crTimeBaseConditionFormulaType = 160,
    crAMPMFormatConditionFormulaType = 161,
    crHourFormatConditionFormulaType = 162,
    crMinuteFormatConditionFormulaType = 163,
    crSecondFormatConditionFormulaType = 164,
    crPMStringConditionFormulaType = 165,
    crAMStringConditionFormulaType = 166,
    crMinuteSecondSeparatorConditionFormulaType = 167,
    crHourMinuteSeparatorConditionFormulaType = 168
};

enum CRFontColorConditionFormulaType
{
    crColorConditionFormulaType = 180,
    crFontConditionFormulaType = 181,
    crFontStyleConditionFormulaType = 182,
    crFontSizeConditionFormulaType = 183,
    crFontStrikeOutConditionFormulaType = 184,
    crFontUnderLineConditionFormulaType = 185
};

enum CRStringFieldConditionFormulaType
{
    crTextInterpretationConditionFormulaType = 200
};

enum CRSubreportConditionFormulaType
{
    crCaptionConditionFormulaType = 220,
    crDrillDownTabTextConditionFormulaType = 221
};

enum CRTableDifferences
{
    crTDOK = 0,
    crTDDatabaseNotFound = 1,
    crTDServerNotFound = 2,
    crTDServerNotOpened = 4,
    crTDAliasChanged = 8,
    crTDIndexesChanged = 16,
    crTDDriverChanged = 32,
    crTDDictionaryChanged = 64,
    crTDFileTypeChanged = 128,
    crTDRecordSizeChanged = 256,
    crTDAccessChanged = 512,
    crTDParametersChanged = 1024,
    crTDLocationChanged = 2048,
    crTDDatabaseOtherChanges = 4096,
    crTDNumberFieldChanged = 65536,
    crTDFieldOtherChanges = 131072,
    crTDFieldNameChanged = 262144,
    crTDFieldDescChanged = 524288,
    crTDFieldTypeChanged = 1048576,
    crTDFieldSizeChanged = 2097152,
    crTDNativeFieldTypeChanged = 4194304,
    crTDNativeFieldOffsetChanged = 8388608,
    crTDNativeFieldSizeChanged = 16777216,
    crTDFieldDecimalPlacesChanged = 33554432
};

struct __declspec(uuid("3dcc8fb6-c434-11d1-a817-00a0c92784cd"))
ICrystalReportSourceEx : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetPage (
        long lCookie,
        BSTR bstrViewContext,
        BSTR bstrSubreportContext,
        BSTR bstrFormula,
        VARIANT vtPromptingInfo,
        long lPageNumber,
        VARIANT vtReserved ) = 0;
    virtual HRESULT __stdcall GetTotaller (
        long lCookie,
        BSTR bstrViewContext,
        BSTR bstrSubreportContext,
        BSTR bstrFormula,
        VARIANT vtPromptingInfo,
        long lStartFrom,
        short nLevelsPastRoot,
        VARIANT vtMaxNodeCount ) = 0;
    virtual HRESULT __stdcall GetLastPageNumber (
        long lCookie,
        BSTR bstrViewContext,
        BSTR bstrSubreportContext,
        BSTR bstrFormula,
        VARIANT vtPromptingInfo,
        VARIANT vtReserved ) = 0;
    virtual HRESULT __stdcall FindGroup (
        long lCookie,
        BSTR bstrViewContext,
        BSTR bstrSubreportContext,
        BSTR bstrFormula,
        VARIANT vtPromptingInfo,
        BSTR bstrGroupPath,
        VARIANT vtReserved ) = 0;
    virtual HRESULT __stdcall FindText (
        long lCookie,
        BSTR bstrViewContext,
        BSTR bstrSubreportContext,
        BSTR bstrFormula,
        VARIANT vtPromptingInfo,
        long lFromPage,
        long lFromInstance,
        BSTR bstrText,
        enum CRSearchDirection nMode,
        VARIANT vtReserved ) = 0;
    virtual HRESULT __stdcall DrillGraph (
        long lCookie,
        BSTR bstrViewContext,
        BSTR bstrSubreportContext,
        BSTR bstrFormula,
        VARIANT vtPromptingInfo,
        long lPageNumber,
        long xOffset,
        long yOffset,
        BSTR bstrReserved,
        VARIANT vtReserved,
        VARIANT vtReserved2 ) = 0;
    virtual HRESULT __stdcall DrillMap (
        long lCookie,
        BSTR bstrViewContext,
        BSTR bstrSubreportContext,
        BSTR bstrFormula,
        VARIANT vtPromptingInfo,
        long lPageNumber,
        long xOffset,
        long yOffset,
        BSTR bstrReserved,
        VARIANT vtReserved,
        VARIANT vtReserved2 ) = 0;
    virtual HRESULT __stdcall Search (
        long lCookie,
        BSTR bstrViewContext,
        BSTR bstrSubreportContext,
        BSTR bstrFormula,
        VARIANT vtPromptingInfo,
        long lPageN,
        long lSectionInstN,
        BSTR bstrSearchFormula,
        BSTR bstrReserved,
        VARIANT vtReserved ) = 0;
    virtual HRESULT __stdcall Export (
        long lCookie,
        BSTR bstrViewContext,
        BSTR bstrSubreportContext,
        BSTR bstrFormula,
        VARIANT vtPromptingInfo,
        VARIANT exportFormat,
        VARIANT pageRange ) = 0;
    virtual HRESULT __stdcall GetExportFormats (
        long lCookie ) = 0;
    virtual HRESULT __stdcall Refresh (
        long lCookie,
        VARIANT vtPromptingInfo ) = 0;
    virtual HRESULT __stdcall Cancel (
        long lCookie ) = 0;
};

struct __declspec(uuid("b4742163-45a6-11d1-abec-00a0c9274b91"))
ICrystalReportSourceEx2 : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetPage (
        long lCookie,
        BSTR bstrViewContext,
        BSTR bstrSubreportContext,
        BSTR bstrFormula,
        VARIANT vtPromptingInfo,
        long lPageNumber,
        VARIANT vtReserved ) = 0;
    virtual HRESULT __stdcall GetTotaller (
        long lCookie,
        BSTR bstrViewContext,
        BSTR bstrSubreportContext,
        BSTR bstrFormula,
        VARIANT vtPromptingInfo,
        long lStartFrom,
        short nLevelsPastRoot,
        VARIANT vtMaxNodeCount ) = 0;
    virtual HRESULT __stdcall GetLastPageNumber (
        long lCookie,
        BSTR bstrViewContext,
        BSTR bstrSubreportContext,
        BSTR bstrFormula,
        VARIANT vtPromptingInfo,
        VARIANT vtReserved ) = 0;
    virtual HRESULT __stdcall FindGroup (
        long lCookie,
        BSTR bstrViewContext,
        BSTR bstrSubreportContext,
        BSTR bstrFormula,
        VARIANT vtPromptingInfo,
        BSTR bstrGroupPath,
        VARIANT vtReserved ) = 0;
    virtual HRESULT __stdcall FindText (
        long lCookie,
        BSTR bstrViewContext,
        BSTR bstrSubreportContext,
        BSTR bstrFormula,
        VARIANT vtPromptingInfo,
        long lFromPage,
        long lFromInstance,
        BSTR bstrText,
        enum CRSearchDirection nMode,
        VARIANT vtReserved ) = 0;
    virtual HRESULT __stdcall DrillGraph (
        long lCookie,
        BSTR bstrViewContext,
        BSTR bstrSubreportContext,
        BSTR bstrFormula,
        VARIANT vtPromptingInfo,
        long lPageNumber,
        long xOffset,
        long yOffset,
        BSTR bstrReserved,
        VARIANT vtReserved,
        VARIANT vtReserved2 ) = 0;
    virtual HRESULT __stdcall DrillMap (
        long lCookie,
        BSTR bstrViewContext,
        BSTR bstrSubreportContext,
        BSTR bstrFormula,
        VARIANT vtPromptingInfo,
        long lPageNumber,
        long xOffset,
        long yOffset,
        BSTR bstrReserved,
        VARIANT vtReserved,
        VARIANT vtReserved2 ) = 0;
    virtual HRESULT __stdcall Search (
        long lCookie,
        BSTR bstrViewContext,
        BSTR bstrSubreportContext,
        BSTR bstrFormula,
        VARIANT vtPromptingInfo,
        long lPageN,
        long lSectionInstN,
        BSTR bstrSearchFormula,
        BSTR bstrReserved,
        VARIANT vtReserved ) = 0;
    virtual HRESULT __stdcall Export (
        long lCookie,
        BSTR bstrViewContext,
        BSTR bstrSubreportContext,
        BSTR bstrFormula,
        VARIANT vtPromptingInfo,
        VARIANT exportFormat,
        VARIANT pageRange ) = 0;
    virtual HRESULT __stdcall GetExportFormats (
        long lCookie ) = 0;
    virtual HRESULT __stdcall Refresh (
        long lCookie,
        VARIANT vtPromptingInfo ) = 0;
    virtual HRESULT __stdcall Cancel (
        long lCookie ) = 0;
    virtual HRESULT __stdcall Update (
        long lCookie ) = 0;
};

//
// Named GUID constants initializations
//

extern "C" const GUID __declspec(selectany) LIBID_CRAXDRT =
    {0xaf376990,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_Report =
    {0xaf3768d0,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IReport =
    {0xaf376800,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IAreas =
    {0xaf376803,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IArea =
    {0xaf376805,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_ISections =
    {0xaf376804,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_ISection =
    {0xaf376806,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IReportObjects =
    {0xaf376807,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IFieldObject =
    {0xaf376809,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_ITextObject =
    {0xaf37680c,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IFieldElements =
    {0xaf37680b,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IFieldElement =
    {0xaf37680a,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IFieldDefinition =
    {0xaf37680d,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IBlobFieldObject =
    {0xaf376827,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IDatabaseFieldDefinition =
    {0xaf37680e,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_ISubreportObject =
    {0xaf376810,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_ISubreportLinks =
    {0xaf37684e,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_ISubreportLink =
    {0xaf37684d,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_ILineObject =
    {0xaf376828,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IBoxObject =
    {0xaf376829,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_ICrossTabObject =
    {0xaf37682a,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IObjectSummaryFieldDefinitions =
    {0xaf376852,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_ISummaryFieldDefinition =
    {0xaf376815,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IReportObject =
    {0xaf376808,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_ICrossTabGroups =
    {0xaf37684f,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_ICrossTabGroup =
    {0xaf376850,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_ICROleObject =
    {0xaf376826,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IGraphObject =
    {0xaf376824,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IFieldDefinitions =
    {0xaf376851,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IDatabase =
    {0xaf376818,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IDatabaseTables =
    {0xaf376819,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IDatabaseTable =
    {0xaf37681a,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IDatabaseFieldDefinitions =
    {0xaf37681d,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_INameValuePairs =
    {0xaf376860,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_ITableLinks =
    {0xaf37681b,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_ITableLink =
    {0xaf37681c,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IFormulaFieldDefinitions =
    {0xaf37681e,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IFormulaFieldDefinition =
    {0xaf37680f,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IParameterFieldDefinitions =
    {0xaf37681f,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IParameterFieldDefinition =
    {0xaf376812,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IGroupNameFieldDefinitions =
    {0xaf376820,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IGroupNameFieldDefinition =
    {0xaf376813,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_ISummaryFieldDefinitions =
    {0xaf376821,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IPageEngine =
    {0xaf37682b,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IPageGenerator =
    {0xaf37682c,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IPages =
    {0xaf37682d,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IPage =
    {0xaf37682e,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IExportOptions =
    {0xaf37682f,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IApplication =
    {0xaf376830,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_ISortFields =
    {0xaf376831,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_ISortField =
    {0xaf376832,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IPrintingStatus =
    {0xaf376833,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IRunningTotalFieldDefinitions =
    {0xaf376822,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IRunningTotalFieldDefinition =
    {0xaf376816,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_ISQLExpressionFieldDefinitions =
    {0xaf376823,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_ISQLExpressionFieldDefinition =
    {0xaf376817,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IReportAlerts =
    {0xaf37685c,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IReportAlert =
    {0xaf37685b,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IReportAlertInstances =
    {0xaf37685e,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IReportAlertInstance =
    {0xaf37685d,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_ICrystalReportSource =
    {0x3dcc8fb4,0xc434,0x11d1,{0xa8,0x17,0x00,0xa0,0xc9,0x27,0x84,0xcd}};
extern "C" const GUID __declspec(selectany) IID_ICrystalReportProperties =
    {0x3dcc8fb5,0xc434,0x11d1,{0xa8,0x17,0x00,0xa0,0xc9,0x27,0x84,0xcd}};
extern "C" const GUID __declspec(selectany) IID_ICrystalReportSourceProperties =
    {0x6876d971,0xf0f2,0x11d1,{0xbe,0xdf,0x00,0xa0,0xc9,0x5a,0x6a,0x5c}};
extern "C" const GUID __declspec(selectany) IID_ICrystalReportPrinterPort =
    {0xb4742013,0x45a6,0x11d1,{0xab,0xec,0x00,0xa0,0xc9,0x27,0x4b,0x91}};
extern "C" const GUID __declspec(selectany) IID_ICrystalReportPrinterPortEx =
    {0xb4742143,0x45a6,0x11d1,{0xab,0xec,0x00,0xa0,0xc9,0x27,0x4b,0x91}};
extern "C" const GUID __declspec(selectany) IID_ICrystalReportSourceEvents =
    {0x3dcc8fb3,0xc434,0x11d1,{0xa8,0x17,0x00,0xa0,0xc9,0x27,0x84,0xcd}};
extern "C" const GUID __declspec(selectany) DIID_IReportEvent =
    {0xaf376802,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_ICrystalReportExport =
    {0xbd10a9c0,0x07cc,0x11d2,{0xbe,0xff,0x00,0xa0,0xc9,0x5a,0x6a,0x5c}};
extern "C" const GUID __declspec(selectany) IID_ICrystalReportExportEvents =
    {0x4d773761,0x0ad4,0x11d2,{0xbf,0x01,0x00,0xa0,0xc9,0x5a,0x6a,0x5c}};
extern "C" const GUID __declspec(selectany) CLSID_Areas =
    {0xaf3768d1,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_Sections =
    {0xaf3768d2,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_Area =
    {0xaf3768d3,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_Section =
    {0xaf3768d4,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) DIID_ISectionEvent =
    {0xaf37684b,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_ReportObjects =
    {0xaf3768d5,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_FieldObject =
    {0xaf3768d6,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_TextObject =
    {0xaf3768d7,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_SubreportObject =
    {0xaf3768d8,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_DatabaseFieldDefinition =
    {0xaf3768d9,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_FormulaFieldDefinition =
    {0xaf3768da,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_ParameterFieldDefinition =
    {0xaf3768db,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_GroupNameFieldDefinition =
    {0xaf3768dc,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_SpecialVarFieldDefinition =
    {0xaf3768dd,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_ISpecialVarFieldDefinition =
    {0xaf376814,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_SummaryFieldDefinition =
    {0xaf3768de,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_RunningTotalFieldDefinition =
    {0xaf3768df,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_SQLExpressionFieldDefinition =
    {0xaf3768e0,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_Database =
    {0xaf3768e1,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_DatabaseTables =
    {0xaf3768e2,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_DatabaseTable =
    {0xaf3768e3,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_DatabaseFieldDefinitions =
    {0xaf3768e4,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_FormulaFieldDefinitions =
    {0xaf3768e5,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_ParameterFieldDefinitions =
    {0xaf3768e6,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_GroupNameFieldDefinitions =
    {0xaf3768e7,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_SummaryFieldDefinitions =
    {0xaf3768e8,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_RunningTotalFieldDefinitions =
    {0xaf3768e9,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_SQLExpressionFieldDefinitions =
    {0xaf3768ea,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_GraphObject =
    {0xaf3768eb,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_MapObject =
    {0xaf3768ec,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IMapObject =
    {0xaf376825,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_OleObject =
    {0xaf3768ed,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_BlobFieldObject =
    {0xaf3768ee,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_LineObject =
    {0xaf3768ef,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_BoxObject =
    {0xaf3768f0,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_OlapGridObject =
    {0xaf3768f1,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IOlapGridObject =
    {0xaf37685f,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_CrossTabObject =
    {0xaf3768f2,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_PageEngine =
    {0xaf3768f3,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_PageGenerator =
    {0xaf3768f4,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_Pages =
    {0xaf3768f5,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_Page =
    {0xaf3768f6,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_ExportOptions =
    {0xaf3768f7,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_Application =
    {0xaf3768f8,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_FormattingInfo =
    {0xaf3768f9,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IFormattingInfo =
    {0xaf37684c,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_SortFields =
    {0xaf3768fa,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_SortField =
    {0xaf3768fb,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_PrintingStatus =
    {0xaf3768fc,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_SubreportLink =
    {0xaf3768fd,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_SubreportLinks =
    {0xaf3768fe,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_CrossTabGroups =
    {0xaf3768ff,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_CrossTabGroup =
    {0xaf376900,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_FieldDefinitions =
    {0xaf376901,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_ObjectSummaryFieldDefinitions =
    {0xaf376902,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_TableLink =
    {0xaf376903,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_TableLinks =
    {0xaf376904,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_FieldMappingData =
    {0xaf376905,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IFieldMappingData =
    {0xaf376856,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_ParameterValue =
    {0xaf376906,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IParameterValue =
    {0xaf376857,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_ParameterValues =
    {0xaf376907,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IParameterValues =
    {0xaf376858,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_ParameterValueInfo =
    {0xaf376908,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IParameterValueInfo =
    {0xaf376859,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_ParameterValueInfos =
    {0xaf376909,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IParameterValueInfos =
    {0xaf37685a,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_ReportAlert =
    {0xaf37690a,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_ReportAlerts =
    {0xaf37690b,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_ReportAlertInstance =
    {0xaf37690c,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_ReportAlertInstances =
    {0xaf37690d,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_FieldElements =
    {0xaf37690e,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_FieldElement =
    {0xaf37690f,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_ConnectionProperties =
    {0xaf376910,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_ConnectionProperty =
    {0xaf376911,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IConnectionProperty =
    {0xaf376861,0x6120,0x4e28,{0x96,0xdd,0x63,0xfd,0x2d,0xc2,0x7b,0x7a}};
extern "C" const GUID __declspec(selectany) IID_ICrystalReportSourceEx =
    {0x3dcc8fb6,0xc434,0x11d1,{0xa8,0x17,0x00,0xa0,0xc9,0x27,0x84,0xcd}};
extern "C" const GUID __declspec(selectany) IID_ICrystalReportSourceEx2 =
    {0xb4742163,0x45a6,0x11d1,{0xab,0xec,0x00,0xa0,0xc9,0x27,0x4b,0x91}};

#pragma pack(pop)
