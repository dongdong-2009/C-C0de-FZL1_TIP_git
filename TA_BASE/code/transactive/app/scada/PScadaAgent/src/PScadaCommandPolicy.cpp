/**
  * The source code in this file is the property of
  * Ripple Systems and is not for redistribution
  * in any form.
  *
  * Source : $File: //depot/FZL1_TIP/TA_BASE/transactive/app/scada/PScadaAgent/src/PScadaCommandPolicy.cpp $
  * @author  A. Parker
  * @version $Revision: #1 $
  * Last modification : $DateTime: 2015/01/26 09:59:14 $
  * Last modified by : $Author: CM $
  *
  */

#include "app/scada/PScadaAgent/src/PScadaCommandPolicy.h"
#include "core/utilities/src/RunParams.h"
#include "core/utilities/src/TAAssert.h"

using namespace TA_Base_Bus;

namespace TA_IRS_App
{

	int				PScadaCommandPolicy::m_maxControlState = 0;
    PolicyResult*	PScadaCommandPolicy::m_policyData = 0;
    TA_Base_Core::ReEntrantThreadLockable PScadaCommandPolicy::m_policyDataLock;

    ECommandPolicyResult PScadaCommandPolicy::updateControlState(TA_Base_Bus::DataPoint* dp, EDataPointControlState newControlState, bool isRequestedBySystem)
    {
		ECommandPolicyResult ret = PR_ACCEPTED;
        if (0 == m_policyData)
        {
            initPolicyData();
        }
        TA_ASSERT(m_policyData != 0, "m_policyData == 0");

		const EDataPointControlState currentState = dp->getControlState().controlState;
		if (currentState < m_maxControlState && newControlState < m_maxControlState)
		{
			PolicyResult& thePolicy = m_policyData[m_maxControlState * currentState + newControlState];
			ret = thePolicy.m_result;

			if (PR_IGNORED == thePolicy.m_result)
			{
				LOG_GENERIC( SourceInfo, TA_Base_Core::DebugUtil::DebugInfo,
					"datapoint:%s updated control state %s, result is:%d, ignored",
					dp->getDataPointName().c_str(), thePolicy.m_desc.c_str(), thePolicy.m_result);
			}
			else
			{
				dp->updateControlState (thePolicy.m_newControlState, isRequestedBySystem);

				LOG_GENERIC( SourceInfo, TA_Base_Core::DebugUtil::DebugInfo,
					"datapoint:%s updated control state %s, result is:%d, new control state is:%d",
					dp->getDataPointName().c_str(), thePolicy.m_desc.c_str(), thePolicy.m_result, thePolicy.m_newControlState);
			}
		}
		else
		{
			dp->updateControlState(newControlState, isRequestedBySystem);

			LOG_GENERIC( SourceInfo, TA_Base_Core::DebugUtil::DebugWarn,
				"datapoint:%s, one of the control state current[%d] or new[%d] is big then m_maxControlState[%d], directly updated to new state",
				dp->getDataPointName().c_str(), currentState, newControlState, m_maxControlState);
			ret = PR_ACCEPTED;
		}
		return ret;
    };

	void PScadaCommandPolicy::initPolicyData()
	{
		TA_THREADGUARD( m_policyDataLock );

        if (0 == m_policyData)
        {
			m_maxControlState = TA_Base_Bus::deviceControlException + 1;
			if (m_maxControlState > 1024)
			{
				LOG_GENERIC( SourceInfo, TA_Base_Core::DebugUtil::DebugWarn,
                        "m_maxControlState[%d] is bigger then 1024", m_maxControlState);
			}

			PolicyResult* policyData = new PolicyResult[m_maxControlState * m_maxControlState];

		policyData[m_maxControlState * noControl                + noControl ]                = PolicyResult(PR_ACCEPTED, noControl ,                "from noControl to noControl ");
		policyData[m_maxControlState * written                  + noControl ]                = PolicyResult(PR_ACCEPTED, noControl ,                "from written to noControl ");
		policyData[m_maxControlState * pending                  + noControl ]                = PolicyResult(PR_ACCEPTED, noControl ,                "from pending to noControl ");
		policyData[m_maxControlState * conditionalSuccess       + noControl ]                = PolicyResult(PR_ACCEPTED, noControl ,                "from conditionalSuccess to noControl ");
		policyData[m_maxControlState * success                  + noControl ]                = PolicyResult(PR_ACCEPTED, noControl ,                "from success to noControl ");
		policyData[m_maxControlState * failed                   + noControl ]                = PolicyResult(PR_ACCEPTED, noControl ,                "from failed to noControl ");
		policyData[m_maxControlState * LCC_failed               + noControl ]                = PolicyResult(PR_ACCEPTED, noControl ,                "from LCC_failed to noControl ");
		policyData[m_maxControlState * RCC_failed               + noControl ]                = PolicyResult(PR_ACCEPTED, noControl ,                "from RCC_failed to noControl ");
		policyData[m_maxControlState * comms_failed             + noControl ]                = PolicyResult(PR_ACCEPTED, noControl ,                "from comms_failed to noControl ");
		policyData[m_maxControlState * selectCmdWritten         + noControl ]                = PolicyResult(PR_ACCEPTED, noControl ,                "from selectCmdWritten to noControl ");
		policyData[m_maxControlState * selectCmdConfirm         + noControl ]                = PolicyResult(PR_ACCEPTED, noControl ,                "from selectCmdConfirm to noControl ");
		policyData[m_maxControlState * selectCmdConfirmTimeout  + noControl ]                = PolicyResult(PR_ACCEPTED, noControl ,                "from selectCmdConfirmTimeout to noControl ");
		policyData[m_maxControlState * operateCmdTimeout        + noControl ]                = PolicyResult(PR_ACCEPTED, noControl ,                "from operateCmdTimeout to noControl ");
		policyData[m_maxControlState * execCmdWritten           + noControl ]                = PolicyResult(PR_ACCEPTED, noControl ,                "from execCmdWritten to noControl ");
		policyData[m_maxControlState * execCmdConfirm           + noControl ]                = PolicyResult(PR_ACCEPTED, noControl ,                "from execCmdConfirm to noControl ");
		policyData[m_maxControlState * execCmdConfirmTimeout    + noControl ]                = PolicyResult(PR_ACCEPTED, noControl ,                "from execCmdConfirmTimeout to noControl ");
		policyData[m_maxControlState * execCmdSuccess           + noControl ]                = PolicyResult(PR_ACCEPTED, noControl ,                "from execCmdSuccess to noControl ");
		policyData[m_maxControlState * execCmdSuccessTimeout    + noControl ]                = PolicyResult(PR_ACCEPTED, noControl ,                "from execCmdSuccessTimeout to noControl ");
		policyData[m_maxControlState * cancelCmdWritten         + noControl ]                = PolicyResult(PR_ACCEPTED, noControl ,                "from cancelCmdWritten to noControl ");
		policyData[m_maxControlState * cancelCmdConfirm         + noControl ]                = PolicyResult(PR_ACCEPTED, noControl ,                "from cancelCmdConfirm to noControl ");
		policyData[m_maxControlState * cancelCmdConfirmTimeout  + noControl ]                = PolicyResult(PR_ACCEPTED, noControl ,                "from cancelCmdConfirmTimeout to noControl ");
		policyData[m_maxControlState * selectCmdCfmNegative     + noControl ]                = PolicyResult(PR_ACCEPTED, noControl ,                "from selectCmdCfmNegative to noControl ");
		policyData[m_maxControlState * execCmdCfmNegative       + noControl ]                = PolicyResult(PR_ACCEPTED, noControl ,                "from execCmdCfmNegative to noControl ");
		policyData[m_maxControlState * cancelCmdCfmNegative     + noControl ]                = PolicyResult(PR_ACCEPTED, noControl ,                "from cancelCmdCfmNegative to noControl ");
		policyData[m_maxControlState * deviceControlException   + noControl ]                = PolicyResult(PR_ACCEPTED, noControl ,                "from deviceControlException to noControl ");
		policyData[m_maxControlState * noControl                + written ]                  = PolicyResult(PR_ACCEPTED, written ,                  "from noControl to written ");
		policyData[m_maxControlState * written                  + written ]                  = PolicyResult(PR_ACCEPTED, written ,                  "from written to written ");
		policyData[m_maxControlState * pending                  + written ]                  = PolicyResult(PR_ACCEPTED, written ,                  "from pending to written ");
		policyData[m_maxControlState * conditionalSuccess       + written ]                  = PolicyResult(PR_ACCEPTED, written ,                  "from conditionalSuccess to written ");
		policyData[m_maxControlState * success                  + written ]                  = PolicyResult(PR_ACCEPTED, written ,                  "from success to written ");
		policyData[m_maxControlState * failed                   + written ]                  = PolicyResult(PR_ACCEPTED, written ,                  "from failed to written ");
		policyData[m_maxControlState * LCC_failed               + written ]                  = PolicyResult(PR_ACCEPTED, written ,                  "from LCC_failed to written ");
		policyData[m_maxControlState * RCC_failed               + written ]                  = PolicyResult(PR_ACCEPTED, written ,                  "from RCC_failed to written ");
		policyData[m_maxControlState * comms_failed             + written ]                  = PolicyResult(PR_ACCEPTED, written ,                  "from comms_failed to written ");
		policyData[m_maxControlState * selectCmdWritten         + written ]                  = PolicyResult(PR_ACCEPTED, written ,                  "from selectCmdWritten to written ");
		policyData[m_maxControlState * selectCmdConfirm         + written ]                  = PolicyResult(PR_ACCEPTED, written ,                  "from selectCmdConfirm to written ");
		policyData[m_maxControlState * selectCmdConfirmTimeout  + written ]                  = PolicyResult(PR_ACCEPTED, written ,                  "from selectCmdConfirmTimeout to written ");
		policyData[m_maxControlState * operateCmdTimeout        + written ]                  = PolicyResult(PR_ACCEPTED, written ,                  "from operateCmdTimeout to written ");
		policyData[m_maxControlState * execCmdWritten           + written ]                  = PolicyResult(PR_ACCEPTED, written ,                  "from execCmdWritten to written ");
		policyData[m_maxControlState * execCmdConfirm           + written ]                  = PolicyResult(PR_ACCEPTED, written ,                  "from execCmdConfirm to written ");
		policyData[m_maxControlState * execCmdConfirmTimeout    + written ]                  = PolicyResult(PR_ACCEPTED, written ,                  "from execCmdConfirmTimeout to written ");
		policyData[m_maxControlState * execCmdSuccess           + written ]                  = PolicyResult(PR_ACCEPTED, written ,                  "from execCmdSuccess to written ");
		policyData[m_maxControlState * execCmdSuccessTimeout    + written ]                  = PolicyResult(PR_ACCEPTED, written ,                  "from execCmdSuccessTimeout to written ");
		policyData[m_maxControlState * cancelCmdWritten         + written ]                  = PolicyResult(PR_ACCEPTED, written ,                  "from cancelCmdWritten to written ");
		policyData[m_maxControlState * cancelCmdConfirm         + written ]                  = PolicyResult(PR_ACCEPTED, written ,                  "from cancelCmdConfirm to written ");
		policyData[m_maxControlState * cancelCmdConfirmTimeout  + written ]                  = PolicyResult(PR_ACCEPTED, written ,                  "from cancelCmdConfirmTimeout to written ");
		policyData[m_maxControlState * selectCmdCfmNegative     + written ]                  = PolicyResult(PR_ACCEPTED, written ,                  "from selectCmdCfmNegative to written ");
		policyData[m_maxControlState * execCmdCfmNegative       + written ]                  = PolicyResult(PR_ACCEPTED, written ,                  "from execCmdCfmNegative to written ");
		policyData[m_maxControlState * cancelCmdCfmNegative     + written ]                  = PolicyResult(PR_ACCEPTED, written ,                  "from cancelCmdCfmNegative to written ");
		policyData[m_maxControlState * deviceControlException   + written ]                  = PolicyResult(PR_ACCEPTED, written ,                  "from deviceControlException to written ");
		policyData[m_maxControlState * noControl                + pending ]                  = PolicyResult(PR_ACCEPTED, pending ,                  "from noControl to pending ");
		policyData[m_maxControlState * written                  + pending ]                  = PolicyResult(PR_ACCEPTED, pending ,                  "from written to pending ");
		policyData[m_maxControlState * pending                  + pending ]                  = PolicyResult(PR_ACCEPTED, pending ,                  "from pending to pending ");
		policyData[m_maxControlState * conditionalSuccess       + pending ]                  = PolicyResult(PR_ACCEPTED, pending ,                  "from conditionalSuccess to pending ");
		policyData[m_maxControlState * success                  + pending ]                  = PolicyResult(PR_ACCEPTED, pending ,                  "from success to pending ");
		policyData[m_maxControlState * failed                   + pending ]                  = PolicyResult(PR_ACCEPTED, pending ,                  "from failed to pending ");
		policyData[m_maxControlState * LCC_failed               + pending ]                  = PolicyResult(PR_ACCEPTED, pending ,                  "from LCC_failed to pending ");
		policyData[m_maxControlState * RCC_failed               + pending ]                  = PolicyResult(PR_ACCEPTED, pending ,                  "from RCC_failed to pending ");
		policyData[m_maxControlState * comms_failed             + pending ]                  = PolicyResult(PR_ACCEPTED, pending ,                  "from comms_failed to pending ");
		policyData[m_maxControlState * selectCmdWritten         + pending ]                  = PolicyResult(PR_ACCEPTED, pending ,                  "from selectCmdWritten to pending ");
		policyData[m_maxControlState * selectCmdConfirm         + pending ]                  = PolicyResult(PR_ACCEPTED, pending ,                  "from selectCmdConfirm to pending ");
		policyData[m_maxControlState * selectCmdConfirmTimeout  + pending ]                  = PolicyResult(PR_ACCEPTED, pending ,                  "from selectCmdConfirmTimeout to pending ");
		policyData[m_maxControlState * operateCmdTimeout        + pending ]                  = PolicyResult(PR_ACCEPTED, pending ,                  "from operateCmdTimeout to pending ");
		policyData[m_maxControlState * execCmdWritten           + pending ]                  = PolicyResult(PR_ACCEPTED, pending ,                  "from execCmdWritten to pending ");
		policyData[m_maxControlState * execCmdConfirm           + pending ]                  = PolicyResult(PR_ACCEPTED, pending ,                  "from execCmdConfirm to pending ");
		policyData[m_maxControlState * execCmdConfirmTimeout    + pending ]                  = PolicyResult(PR_ACCEPTED, pending ,                  "from execCmdConfirmTimeout to pending ");
		policyData[m_maxControlState * execCmdSuccess           + pending ]                  = PolicyResult(PR_ACCEPTED, pending ,                  "from execCmdSuccess to pending ");
		policyData[m_maxControlState * execCmdSuccessTimeout    + pending ]                  = PolicyResult(PR_ACCEPTED, pending ,                  "from execCmdSuccessTimeout to pending ");
		policyData[m_maxControlState * cancelCmdWritten         + pending ]                  = PolicyResult(PR_ACCEPTED, pending ,                  "from cancelCmdWritten to pending ");
		policyData[m_maxControlState * cancelCmdConfirm         + pending ]                  = PolicyResult(PR_ACCEPTED, pending ,                  "from cancelCmdConfirm to pending ");
		policyData[m_maxControlState * cancelCmdConfirmTimeout  + pending ]                  = PolicyResult(PR_ACCEPTED, pending ,                  "from cancelCmdConfirmTimeout to pending ");
		policyData[m_maxControlState * selectCmdCfmNegative     + pending ]                  = PolicyResult(PR_ACCEPTED, pending ,                  "from selectCmdCfmNegative to pending ");
		policyData[m_maxControlState * execCmdCfmNegative       + pending ]                  = PolicyResult(PR_ACCEPTED, pending ,                  "from execCmdCfmNegative to pending ");
		policyData[m_maxControlState * cancelCmdCfmNegative     + pending ]                  = PolicyResult(PR_ACCEPTED, pending ,                  "from cancelCmdCfmNegative to pending ");
		policyData[m_maxControlState * deviceControlException   + pending ]                  = PolicyResult(PR_ACCEPTED, pending ,                  "from deviceControlException to pending ");
		policyData[m_maxControlState * noControl                + conditionalSuccess ]       = PolicyResult(PR_ACCEPTED, conditionalSuccess ,       "from noControl to conditionalSuccess ");
		policyData[m_maxControlState * written                  + conditionalSuccess ]       = PolicyResult(PR_ACCEPTED, conditionalSuccess ,       "from written to conditionalSuccess ");
		policyData[m_maxControlState * pending                  + conditionalSuccess ]       = PolicyResult(PR_ACCEPTED, conditionalSuccess ,       "from pending to conditionalSuccess ");
		policyData[m_maxControlState * conditionalSuccess       + conditionalSuccess ]       = PolicyResult(PR_ACCEPTED, conditionalSuccess ,       "from conditionalSuccess to conditionalSuccess ");
		policyData[m_maxControlState * success                  + conditionalSuccess ]       = PolicyResult(PR_ACCEPTED, conditionalSuccess ,       "from success to conditionalSuccess ");
		policyData[m_maxControlState * failed                   + conditionalSuccess ]       = PolicyResult(PR_ACCEPTED, conditionalSuccess ,       "from failed to conditionalSuccess ");
		policyData[m_maxControlState * LCC_failed               + conditionalSuccess ]       = PolicyResult(PR_ACCEPTED, conditionalSuccess ,       "from LCC_failed to conditionalSuccess ");
		policyData[m_maxControlState * RCC_failed               + conditionalSuccess ]       = PolicyResult(PR_ACCEPTED, conditionalSuccess ,       "from RCC_failed to conditionalSuccess ");
		policyData[m_maxControlState * comms_failed             + conditionalSuccess ]       = PolicyResult(PR_ACCEPTED, conditionalSuccess ,       "from comms_failed to conditionalSuccess ");
		policyData[m_maxControlState * selectCmdWritten         + conditionalSuccess ]       = PolicyResult(PR_ACCEPTED, conditionalSuccess ,       "from selectCmdWritten to conditionalSuccess ");
		policyData[m_maxControlState * selectCmdConfirm         + conditionalSuccess ]       = PolicyResult(PR_ACCEPTED, conditionalSuccess ,       "from selectCmdConfirm to conditionalSuccess ");
		policyData[m_maxControlState * selectCmdConfirmTimeout  + conditionalSuccess ]       = PolicyResult(PR_ACCEPTED, conditionalSuccess ,       "from selectCmdConfirmTimeout to conditionalSuccess ");
		policyData[m_maxControlState * operateCmdTimeout        + conditionalSuccess ]       = PolicyResult(PR_ACCEPTED, conditionalSuccess ,       "from operateCmdTimeout to conditionalSuccess ");
		policyData[m_maxControlState * execCmdWritten           + conditionalSuccess ]       = PolicyResult(PR_ACCEPTED, conditionalSuccess ,       "from execCmdWritten to conditionalSuccess ");
		policyData[m_maxControlState * execCmdConfirm           + conditionalSuccess ]       = PolicyResult(PR_ACCEPTED, conditionalSuccess ,       "from execCmdConfirm to conditionalSuccess ");
		policyData[m_maxControlState * execCmdConfirmTimeout    + conditionalSuccess ]       = PolicyResult(PR_ACCEPTED, conditionalSuccess ,       "from execCmdConfirmTimeout to conditionalSuccess ");
		policyData[m_maxControlState * execCmdSuccess           + conditionalSuccess ]       = PolicyResult(PR_ACCEPTED, conditionalSuccess ,       "from execCmdSuccess to conditionalSuccess ");
		policyData[m_maxControlState * execCmdSuccessTimeout    + conditionalSuccess ]       = PolicyResult(PR_ACCEPTED, conditionalSuccess ,       "from execCmdSuccessTimeout to conditionalSuccess ");
		policyData[m_maxControlState * cancelCmdWritten         + conditionalSuccess ]       = PolicyResult(PR_ACCEPTED, conditionalSuccess ,       "from cancelCmdWritten to conditionalSuccess ");
		policyData[m_maxControlState * cancelCmdConfirm         + conditionalSuccess ]       = PolicyResult(PR_ACCEPTED, conditionalSuccess ,       "from cancelCmdConfirm to conditionalSuccess ");
		policyData[m_maxControlState * cancelCmdConfirmTimeout  + conditionalSuccess ]       = PolicyResult(PR_ACCEPTED, conditionalSuccess ,       "from cancelCmdConfirmTimeout to conditionalSuccess ");
		policyData[m_maxControlState * selectCmdCfmNegative     + conditionalSuccess ]       = PolicyResult(PR_ACCEPTED, conditionalSuccess ,       "from selectCmdCfmNegative to conditionalSuccess ");
		policyData[m_maxControlState * execCmdCfmNegative       + conditionalSuccess ]       = PolicyResult(PR_ACCEPTED, conditionalSuccess ,       "from execCmdCfmNegative to conditionalSuccess ");
		policyData[m_maxControlState * cancelCmdCfmNegative     + conditionalSuccess ]       = PolicyResult(PR_ACCEPTED, conditionalSuccess ,       "from cancelCmdCfmNegative to conditionalSuccess ");
		policyData[m_maxControlState * deviceControlException   + conditionalSuccess ]       = PolicyResult(PR_ACCEPTED, conditionalSuccess ,       "from deviceControlException to conditionalSuccess ");
		policyData[m_maxControlState * noControl                + success ]                  = PolicyResult(PR_ACCEPTED, success ,                  "from noControl to success ");
		policyData[m_maxControlState * written                  + success ]                  = PolicyResult(PR_ACCEPTED, success ,                  "from written to success ");
		policyData[m_maxControlState * pending                  + success ]                  = PolicyResult(PR_ACCEPTED, success ,                  "from pending to success ");
		policyData[m_maxControlState * conditionalSuccess       + success ]                  = PolicyResult(PR_ACCEPTED, success ,                  "from conditionalSuccess to success ");
		policyData[m_maxControlState * success                  + success ]                  = PolicyResult(PR_ACCEPTED, success ,                  "from success to success ");
		policyData[m_maxControlState * failed                   + success ]                  = PolicyResult(PR_ACCEPTED, success ,                  "from failed to success ");
		policyData[m_maxControlState * LCC_failed               + success ]                  = PolicyResult(PR_ACCEPTED, success ,                  "from LCC_failed to success ");
		policyData[m_maxControlState * RCC_failed               + success ]                  = PolicyResult(PR_ACCEPTED, success ,                  "from RCC_failed to success ");
		policyData[m_maxControlState * comms_failed             + success ]                  = PolicyResult(PR_ACCEPTED, success ,                  "from comms_failed to success ");
		policyData[m_maxControlState * selectCmdWritten         + success ]                  = PolicyResult(PR_ACCEPTED, success ,                  "from selectCmdWritten to success ");
		policyData[m_maxControlState * selectCmdConfirm         + success ]                  = PolicyResult(PR_ACCEPTED, success ,                  "from selectCmdConfirm to success ");
		policyData[m_maxControlState * selectCmdConfirmTimeout  + success ]                  = PolicyResult(PR_ACCEPTED, success ,                  "from selectCmdConfirmTimeout to success ");
		policyData[m_maxControlState * operateCmdTimeout        + success ]                  = PolicyResult(PR_ACCEPTED, success ,                  "from operateCmdTimeout to success ");
		policyData[m_maxControlState * execCmdWritten           + success ]                  = PolicyResult(PR_ACCEPTED, success ,                  "from execCmdWritten to success ");
		policyData[m_maxControlState * execCmdConfirm           + success ]                  = PolicyResult(PR_ACCEPTED, success ,                  "from execCmdConfirm to success ");
		policyData[m_maxControlState * execCmdConfirmTimeout    + success ]                  = PolicyResult(PR_ACCEPTED, success ,                  "from execCmdConfirmTimeout to success ");
		policyData[m_maxControlState * execCmdSuccess           + success ]                  = PolicyResult(PR_ACCEPTED, success ,                  "from execCmdSuccess to success ");
		policyData[m_maxControlState * execCmdSuccessTimeout    + success ]                  = PolicyResult(PR_ACCEPTED, success ,                  "from execCmdSuccessTimeout to success ");
		policyData[m_maxControlState * cancelCmdWritten         + success ]                  = PolicyResult(PR_ACCEPTED, success ,                  "from cancelCmdWritten to success ");
		policyData[m_maxControlState * cancelCmdConfirm         + success ]                  = PolicyResult(PR_ACCEPTED, success ,                  "from cancelCmdConfirm to success ");
		policyData[m_maxControlState * cancelCmdConfirmTimeout  + success ]                  = PolicyResult(PR_ACCEPTED, success ,                  "from cancelCmdConfirmTimeout to success ");
		policyData[m_maxControlState * selectCmdCfmNegative     + success ]                  = PolicyResult(PR_ACCEPTED, success ,                  "from selectCmdCfmNegative to success ");
		policyData[m_maxControlState * execCmdCfmNegative       + success ]                  = PolicyResult(PR_ACCEPTED, success ,                  "from execCmdCfmNegative to success ");
		policyData[m_maxControlState * cancelCmdCfmNegative     + success ]                  = PolicyResult(PR_ACCEPTED, success ,                  "from cancelCmdCfmNegative to success ");
		policyData[m_maxControlState * deviceControlException   + success ]                  = PolicyResult(PR_ACCEPTED, success ,                  "from deviceControlException to success ");
		policyData[m_maxControlState * noControl                + failed ]                   = PolicyResult(PR_ACCEPTED, failed ,                   "from noControl to failed ");
		policyData[m_maxControlState * written                  + failed ]                   = PolicyResult(PR_ACCEPTED, failed ,                   "from written to failed ");
		policyData[m_maxControlState * pending                  + failed ]                   = PolicyResult(PR_ACCEPTED, failed ,                   "from pending to failed ");
		policyData[m_maxControlState * conditionalSuccess       + failed ]                   = PolicyResult(PR_ACCEPTED, failed ,                   "from conditionalSuccess to failed ");
		policyData[m_maxControlState * success                  + failed ]                   = PolicyResult(PR_ACCEPTED, failed ,                   "from success to failed ");
		policyData[m_maxControlState * failed                   + failed ]                   = PolicyResult(PR_ACCEPTED, failed ,                   "from failed to failed ");
		policyData[m_maxControlState * LCC_failed               + failed ]                   = PolicyResult(PR_ACCEPTED, failed ,                   "from LCC_failed to failed ");
		policyData[m_maxControlState * RCC_failed               + failed ]                   = PolicyResult(PR_ACCEPTED, failed ,                   "from RCC_failed to failed ");
		policyData[m_maxControlState * comms_failed             + failed ]                   = PolicyResult(PR_ACCEPTED, failed ,                   "from comms_failed to failed ");
		policyData[m_maxControlState * selectCmdWritten         + failed ]                   = PolicyResult(PR_ACCEPTED, failed ,                   "from selectCmdWritten to failed ");
		policyData[m_maxControlState * selectCmdConfirm         + failed ]                   = PolicyResult(PR_ACCEPTED, failed ,                   "from selectCmdConfirm to failed ");
		policyData[m_maxControlState * selectCmdConfirmTimeout  + failed ]                   = PolicyResult(PR_ACCEPTED, failed ,                   "from selectCmdConfirmTimeout to failed ");
		policyData[m_maxControlState * operateCmdTimeout        + failed ]                   = PolicyResult(PR_ACCEPTED, failed ,                   "from operateCmdTimeout to failed ");
		policyData[m_maxControlState * execCmdWritten           + failed ]                   = PolicyResult(PR_ACCEPTED, failed ,                   "from execCmdWritten to failed ");
		policyData[m_maxControlState * execCmdConfirm           + failed ]                   = PolicyResult(PR_ACCEPTED, failed ,                   "from execCmdConfirm to failed ");
		policyData[m_maxControlState * execCmdConfirmTimeout    + failed ]                   = PolicyResult(PR_ACCEPTED, failed ,                   "from execCmdConfirmTimeout to failed ");
		policyData[m_maxControlState * execCmdSuccess           + failed ]                   = PolicyResult(PR_ACCEPTED, failed ,                   "from execCmdSuccess to failed ");
		policyData[m_maxControlState * execCmdSuccessTimeout    + failed ]                   = PolicyResult(PR_ACCEPTED, failed ,                   "from execCmdSuccessTimeout to failed ");
		policyData[m_maxControlState * cancelCmdWritten         + failed ]                   = PolicyResult(PR_ACCEPTED, failed ,                   "from cancelCmdWritten to failed ");
		policyData[m_maxControlState * cancelCmdConfirm         + failed ]                   = PolicyResult(PR_ACCEPTED, failed ,                   "from cancelCmdConfirm to failed ");
		policyData[m_maxControlState * cancelCmdConfirmTimeout  + failed ]                   = PolicyResult(PR_ACCEPTED, failed ,                   "from cancelCmdConfirmTimeout to failed ");
		policyData[m_maxControlState * selectCmdCfmNegative     + failed ]                   = PolicyResult(PR_ACCEPTED, failed ,                   "from selectCmdCfmNegative to failed ");
		policyData[m_maxControlState * execCmdCfmNegative       + failed ]                   = PolicyResult(PR_ACCEPTED, failed ,                   "from execCmdCfmNegative to failed ");
		policyData[m_maxControlState * cancelCmdCfmNegative     + failed ]                   = PolicyResult(PR_ACCEPTED, failed ,                   "from cancelCmdCfmNegative to failed ");
		policyData[m_maxControlState * deviceControlException   + failed ]                   = PolicyResult(PR_ACCEPTED, failed ,                   "from deviceControlException to failed ");
		policyData[m_maxControlState * noControl                + LCC_failed ]               = PolicyResult(PR_ACCEPTED, LCC_failed ,               "from noControl to LCC_failed ");
		policyData[m_maxControlState * written                  + LCC_failed ]               = PolicyResult(PR_ACCEPTED, LCC_failed ,               "from written to LCC_failed ");
		policyData[m_maxControlState * pending                  + LCC_failed ]               = PolicyResult(PR_ACCEPTED, LCC_failed ,               "from pending to LCC_failed ");
		policyData[m_maxControlState * conditionalSuccess       + LCC_failed ]               = PolicyResult(PR_ACCEPTED, LCC_failed ,               "from conditionalSuccess to LCC_failed ");
		policyData[m_maxControlState * success                  + LCC_failed ]               = PolicyResult(PR_ACCEPTED, LCC_failed ,               "from success to LCC_failed ");
		policyData[m_maxControlState * failed                   + LCC_failed ]               = PolicyResult(PR_ACCEPTED, LCC_failed ,               "from failed to LCC_failed ");
		policyData[m_maxControlState * LCC_failed               + LCC_failed ]               = PolicyResult(PR_ACCEPTED, LCC_failed ,               "from LCC_failed to LCC_failed ");
		policyData[m_maxControlState * RCC_failed               + LCC_failed ]               = PolicyResult(PR_ACCEPTED, LCC_failed ,               "from RCC_failed to LCC_failed ");
		policyData[m_maxControlState * comms_failed             + LCC_failed ]               = PolicyResult(PR_ACCEPTED, LCC_failed ,               "from comms_failed to LCC_failed ");
		policyData[m_maxControlState * selectCmdWritten         + LCC_failed ]               = PolicyResult(PR_ACCEPTED, LCC_failed ,               "from selectCmdWritten to LCC_failed ");
		policyData[m_maxControlState * selectCmdConfirm         + LCC_failed ]               = PolicyResult(PR_ACCEPTED, LCC_failed ,               "from selectCmdConfirm to LCC_failed ");
		policyData[m_maxControlState * selectCmdConfirmTimeout  + LCC_failed ]               = PolicyResult(PR_ACCEPTED, LCC_failed ,               "from selectCmdConfirmTimeout to LCC_failed ");
		policyData[m_maxControlState * operateCmdTimeout        + LCC_failed ]               = PolicyResult(PR_ACCEPTED, LCC_failed ,               "from operateCmdTimeout to LCC_failed ");
		policyData[m_maxControlState * execCmdWritten           + LCC_failed ]               = PolicyResult(PR_ACCEPTED, LCC_failed ,               "from execCmdWritten to LCC_failed ");
		policyData[m_maxControlState * execCmdConfirm           + LCC_failed ]               = PolicyResult(PR_ACCEPTED, LCC_failed ,               "from execCmdConfirm to LCC_failed ");
		policyData[m_maxControlState * execCmdConfirmTimeout    + LCC_failed ]               = PolicyResult(PR_ACCEPTED, LCC_failed ,               "from execCmdConfirmTimeout to LCC_failed ");
		policyData[m_maxControlState * execCmdSuccess           + LCC_failed ]               = PolicyResult(PR_ACCEPTED, LCC_failed ,               "from execCmdSuccess to LCC_failed ");
		policyData[m_maxControlState * execCmdSuccessTimeout    + LCC_failed ]               = PolicyResult(PR_ACCEPTED, LCC_failed ,               "from execCmdSuccessTimeout to LCC_failed ");
		policyData[m_maxControlState * cancelCmdWritten         + LCC_failed ]               = PolicyResult(PR_ACCEPTED, LCC_failed ,               "from cancelCmdWritten to LCC_failed ");
		policyData[m_maxControlState * cancelCmdConfirm         + LCC_failed ]               = PolicyResult(PR_ACCEPTED, LCC_failed ,               "from cancelCmdConfirm to LCC_failed ");
		policyData[m_maxControlState * cancelCmdConfirmTimeout  + LCC_failed ]               = PolicyResult(PR_ACCEPTED, LCC_failed ,               "from cancelCmdConfirmTimeout to LCC_failed ");
		policyData[m_maxControlState * selectCmdCfmNegative     + LCC_failed ]               = PolicyResult(PR_ACCEPTED, LCC_failed ,               "from selectCmdCfmNegative to LCC_failed ");
		policyData[m_maxControlState * execCmdCfmNegative       + LCC_failed ]               = PolicyResult(PR_ACCEPTED, LCC_failed ,               "from execCmdCfmNegative to LCC_failed ");
		policyData[m_maxControlState * cancelCmdCfmNegative     + LCC_failed ]               = PolicyResult(PR_ACCEPTED, LCC_failed ,               "from cancelCmdCfmNegative to LCC_failed ");
		policyData[m_maxControlState * deviceControlException   + LCC_failed ]               = PolicyResult(PR_ACCEPTED, LCC_failed ,               "from deviceControlException to LCC_failed ");
		policyData[m_maxControlState * noControl                + RCC_failed ]               = PolicyResult(PR_ACCEPTED, RCC_failed ,               "from noControl to RCC_failed ");
		policyData[m_maxControlState * written                  + RCC_failed ]               = PolicyResult(PR_ACCEPTED, RCC_failed ,               "from written to RCC_failed ");
		policyData[m_maxControlState * pending                  + RCC_failed ]               = PolicyResult(PR_ACCEPTED, RCC_failed ,               "from pending to RCC_failed ");
		policyData[m_maxControlState * conditionalSuccess       + RCC_failed ]               = PolicyResult(PR_ACCEPTED, RCC_failed ,               "from conditionalSuccess to RCC_failed ");
		policyData[m_maxControlState * success                  + RCC_failed ]               = PolicyResult(PR_ACCEPTED, RCC_failed ,               "from success to RCC_failed ");
		policyData[m_maxControlState * failed                   + RCC_failed ]               = PolicyResult(PR_ACCEPTED, RCC_failed ,               "from failed to RCC_failed ");
		policyData[m_maxControlState * LCC_failed               + RCC_failed ]               = PolicyResult(PR_ACCEPTED, RCC_failed ,               "from LCC_failed to RCC_failed ");
		policyData[m_maxControlState * RCC_failed               + RCC_failed ]               = PolicyResult(PR_ACCEPTED, RCC_failed ,               "from RCC_failed to RCC_failed ");
		policyData[m_maxControlState * comms_failed             + RCC_failed ]               = PolicyResult(PR_ACCEPTED, RCC_failed ,               "from comms_failed to RCC_failed ");
		policyData[m_maxControlState * selectCmdWritten         + RCC_failed ]               = PolicyResult(PR_ACCEPTED, RCC_failed ,               "from selectCmdWritten to RCC_failed ");
		policyData[m_maxControlState * selectCmdConfirm         + RCC_failed ]               = PolicyResult(PR_ACCEPTED, RCC_failed ,               "from selectCmdConfirm to RCC_failed ");
		policyData[m_maxControlState * selectCmdConfirmTimeout  + RCC_failed ]               = PolicyResult(PR_ACCEPTED, RCC_failed ,               "from selectCmdConfirmTimeout to RCC_failed ");
		policyData[m_maxControlState * operateCmdTimeout        + RCC_failed ]               = PolicyResult(PR_ACCEPTED, RCC_failed ,               "from operateCmdTimeout to RCC_failed ");
		policyData[m_maxControlState * execCmdWritten           + RCC_failed ]               = PolicyResult(PR_ACCEPTED, RCC_failed ,               "from execCmdWritten to RCC_failed ");
		policyData[m_maxControlState * execCmdConfirm           + RCC_failed ]               = PolicyResult(PR_ACCEPTED, RCC_failed ,               "from execCmdConfirm to RCC_failed ");
		policyData[m_maxControlState * execCmdConfirmTimeout    + RCC_failed ]               = PolicyResult(PR_ACCEPTED, RCC_failed ,               "from execCmdConfirmTimeout to RCC_failed ");
		policyData[m_maxControlState * execCmdSuccess           + RCC_failed ]               = PolicyResult(PR_ACCEPTED, RCC_failed ,               "from execCmdSuccess to RCC_failed ");
		policyData[m_maxControlState * execCmdSuccessTimeout    + RCC_failed ]               = PolicyResult(PR_ACCEPTED, RCC_failed ,               "from execCmdSuccessTimeout to RCC_failed ");
		policyData[m_maxControlState * cancelCmdWritten         + RCC_failed ]               = PolicyResult(PR_ACCEPTED, RCC_failed ,               "from cancelCmdWritten to RCC_failed ");
		policyData[m_maxControlState * cancelCmdConfirm         + RCC_failed ]               = PolicyResult(PR_ACCEPTED, RCC_failed ,               "from cancelCmdConfirm to RCC_failed ");
		policyData[m_maxControlState * cancelCmdConfirmTimeout  + RCC_failed ]               = PolicyResult(PR_ACCEPTED, RCC_failed ,               "from cancelCmdConfirmTimeout to RCC_failed ");
		policyData[m_maxControlState * selectCmdCfmNegative     + RCC_failed ]               = PolicyResult(PR_ACCEPTED, RCC_failed ,               "from selectCmdCfmNegative to RCC_failed ");
		policyData[m_maxControlState * execCmdCfmNegative       + RCC_failed ]               = PolicyResult(PR_ACCEPTED, RCC_failed ,               "from execCmdCfmNegative to RCC_failed ");
		policyData[m_maxControlState * cancelCmdCfmNegative     + RCC_failed ]               = PolicyResult(PR_ACCEPTED, RCC_failed ,               "from cancelCmdCfmNegative to RCC_failed ");
		policyData[m_maxControlState * deviceControlException   + RCC_failed ]               = PolicyResult(PR_ACCEPTED, RCC_failed ,               "from deviceControlException to RCC_failed ");
		policyData[m_maxControlState * noControl                + comms_failed ]             = PolicyResult(PR_ACCEPTED, comms_failed ,             "from noControl to comms_failed ");
		policyData[m_maxControlState * written                  + comms_failed ]             = PolicyResult(PR_ACCEPTED, comms_failed ,             "from written to comms_failed ");
		policyData[m_maxControlState * pending                  + comms_failed ]             = PolicyResult(PR_ACCEPTED, comms_failed ,             "from pending to comms_failed ");
		policyData[m_maxControlState * conditionalSuccess       + comms_failed ]             = PolicyResult(PR_ACCEPTED, comms_failed ,             "from conditionalSuccess to comms_failed ");
		policyData[m_maxControlState * success                  + comms_failed ]             = PolicyResult(PR_ACCEPTED, comms_failed ,             "from success to comms_failed ");
		policyData[m_maxControlState * failed                   + comms_failed ]             = PolicyResult(PR_ACCEPTED, comms_failed ,             "from failed to comms_failed ");
		policyData[m_maxControlState * LCC_failed               + comms_failed ]             = PolicyResult(PR_ACCEPTED, comms_failed ,             "from LCC_failed to comms_failed ");
		policyData[m_maxControlState * RCC_failed               + comms_failed ]             = PolicyResult(PR_ACCEPTED, comms_failed ,             "from RCC_failed to comms_failed ");
		policyData[m_maxControlState * comms_failed             + comms_failed ]             = PolicyResult(PR_ACCEPTED, comms_failed ,             "from comms_failed to comms_failed ");
		policyData[m_maxControlState * selectCmdWritten         + comms_failed ]             = PolicyResult(PR_ACCEPTED, comms_failed ,             "from selectCmdWritten to comms_failed ");
		policyData[m_maxControlState * selectCmdConfirm         + comms_failed ]             = PolicyResult(PR_ACCEPTED, comms_failed ,             "from selectCmdConfirm to comms_failed ");
		policyData[m_maxControlState * selectCmdConfirmTimeout  + comms_failed ]             = PolicyResult(PR_ACCEPTED, comms_failed ,             "from selectCmdConfirmTimeout to comms_failed ");
		policyData[m_maxControlState * operateCmdTimeout        + comms_failed ]             = PolicyResult(PR_ACCEPTED, comms_failed ,             "from operateCmdTimeout to comms_failed ");
		policyData[m_maxControlState * execCmdWritten           + comms_failed ]             = PolicyResult(PR_ACCEPTED, comms_failed ,             "from execCmdWritten to comms_failed ");
		policyData[m_maxControlState * execCmdConfirm           + comms_failed ]             = PolicyResult(PR_ACCEPTED, comms_failed ,             "from execCmdConfirm to comms_failed ");
		policyData[m_maxControlState * execCmdConfirmTimeout    + comms_failed ]             = PolicyResult(PR_ACCEPTED, comms_failed ,             "from execCmdConfirmTimeout to comms_failed ");
		policyData[m_maxControlState * execCmdSuccess           + comms_failed ]             = PolicyResult(PR_ACCEPTED, comms_failed ,             "from execCmdSuccess to comms_failed ");
		policyData[m_maxControlState * execCmdSuccessTimeout    + comms_failed ]             = PolicyResult(PR_ACCEPTED, comms_failed ,             "from execCmdSuccessTimeout to comms_failed ");
		policyData[m_maxControlState * cancelCmdWritten         + comms_failed ]             = PolicyResult(PR_ACCEPTED, comms_failed ,             "from cancelCmdWritten to comms_failed ");
		policyData[m_maxControlState * cancelCmdConfirm         + comms_failed ]             = PolicyResult(PR_ACCEPTED, comms_failed ,             "from cancelCmdConfirm to comms_failed ");
		policyData[m_maxControlState * cancelCmdConfirmTimeout  + comms_failed ]             = PolicyResult(PR_ACCEPTED, comms_failed ,             "from cancelCmdConfirmTimeout to comms_failed ");
		policyData[m_maxControlState * selectCmdCfmNegative     + comms_failed ]             = PolicyResult(PR_ACCEPTED, comms_failed ,             "from selectCmdCfmNegative to comms_failed ");
		policyData[m_maxControlState * execCmdCfmNegative       + comms_failed ]             = PolicyResult(PR_ACCEPTED, comms_failed ,             "from execCmdCfmNegative to comms_failed ");
		policyData[m_maxControlState * cancelCmdCfmNegative     + comms_failed ]             = PolicyResult(PR_ACCEPTED, comms_failed ,             "from cancelCmdCfmNegative to comms_failed ");
		policyData[m_maxControlState * deviceControlException   + comms_failed ]             = PolicyResult(PR_ACCEPTED, comms_failed ,             "from deviceControlException to comms_failed ");
		policyData[m_maxControlState * noControl                + selectCmdWritten ]         = PolicyResult(PR_ACCEPTED, selectCmdWritten ,         "from noControl to selectCmdWritten ");
		policyData[m_maxControlState * written                  + selectCmdWritten ]         = PolicyResult(PR_ACCEPTED, selectCmdWritten ,         "from written to selectCmdWritten ");
		policyData[m_maxControlState * pending                  + selectCmdWritten ]         = PolicyResult(PR_ACCEPTED, selectCmdWritten ,         "from pending to selectCmdWritten ");
		policyData[m_maxControlState * conditionalSuccess       + selectCmdWritten ]         = PolicyResult(PR_ACCEPTED, selectCmdWritten ,         "from conditionalSuccess to selectCmdWritten ");
		policyData[m_maxControlState * success                  + selectCmdWritten ]         = PolicyResult(PR_ACCEPTED, selectCmdWritten ,         "from success to selectCmdWritten ");
		policyData[m_maxControlState * failed                   + selectCmdWritten ]         = PolicyResult(PR_ACCEPTED, selectCmdWritten ,         "from failed to selectCmdWritten ");
		policyData[m_maxControlState * LCC_failed               + selectCmdWritten ]         = PolicyResult(PR_ACCEPTED, selectCmdWritten ,         "from LCC_failed to selectCmdWritten ");
		policyData[m_maxControlState * RCC_failed               + selectCmdWritten ]         = PolicyResult(PR_ACCEPTED, selectCmdWritten ,         "from RCC_failed to selectCmdWritten ");
		policyData[m_maxControlState * comms_failed             + selectCmdWritten ]         = PolicyResult(PR_ACCEPTED, selectCmdWritten ,         "from comms_failed to selectCmdWritten ");
		policyData[m_maxControlState * selectCmdWritten         + selectCmdWritten ]         = PolicyResult(PR_ACCEPTED, selectCmdWritten ,         "from selectCmdWritten to selectCmdWritten ");
		policyData[m_maxControlState * selectCmdConfirm         + selectCmdWritten ]         = PolicyResult(PR_ACCEPTED, selectCmdWritten ,         "from selectCmdConfirm to selectCmdWritten ");
		policyData[m_maxControlState * selectCmdConfirmTimeout  + selectCmdWritten ]         = PolicyResult(PR_ACCEPTED, selectCmdWritten ,         "from selectCmdConfirmTimeout to selectCmdWritten ");
		policyData[m_maxControlState * operateCmdTimeout        + selectCmdWritten ]         = PolicyResult(PR_ACCEPTED, selectCmdWritten ,         "from operateCmdTimeout to selectCmdWritten ");
		policyData[m_maxControlState * execCmdWritten           + selectCmdWritten ]         = PolicyResult(PR_ACCEPTED, selectCmdWritten ,         "from execCmdWritten to selectCmdWritten ");
		policyData[m_maxControlState * execCmdConfirm           + selectCmdWritten ]         = PolicyResult(PR_ACCEPTED, selectCmdWritten ,         "from execCmdConfirm to selectCmdWritten ");
		policyData[m_maxControlState * execCmdConfirmTimeout    + selectCmdWritten ]         = PolicyResult(PR_ACCEPTED, selectCmdWritten ,         "from execCmdConfirmTimeout to selectCmdWritten ");
		policyData[m_maxControlState * execCmdSuccess           + selectCmdWritten ]         = PolicyResult(PR_ACCEPTED, selectCmdWritten ,         "from execCmdSuccess to selectCmdWritten ");
		policyData[m_maxControlState * execCmdSuccessTimeout    + selectCmdWritten ]         = PolicyResult(PR_ACCEPTED, selectCmdWritten ,         "from execCmdSuccessTimeout to selectCmdWritten ");
		policyData[m_maxControlState * cancelCmdWritten         + selectCmdWritten ]         = PolicyResult(PR_ACCEPTED, selectCmdWritten ,         "from cancelCmdWritten to selectCmdWritten ");
		policyData[m_maxControlState * cancelCmdConfirm         + selectCmdWritten ]         = PolicyResult(PR_ACCEPTED, selectCmdWritten ,         "from cancelCmdConfirm to selectCmdWritten ");
		policyData[m_maxControlState * cancelCmdConfirmTimeout  + selectCmdWritten ]         = PolicyResult(PR_ACCEPTED, selectCmdWritten ,         "from cancelCmdConfirmTimeout to selectCmdWritten ");
		policyData[m_maxControlState * selectCmdCfmNegative     + selectCmdWritten ]         = PolicyResult(PR_ACCEPTED, selectCmdWritten ,         "from selectCmdCfmNegative to selectCmdWritten ");
		policyData[m_maxControlState * execCmdCfmNegative       + selectCmdWritten ]         = PolicyResult(PR_ACCEPTED, selectCmdWritten ,         "from execCmdCfmNegative to selectCmdWritten ");
		policyData[m_maxControlState * cancelCmdCfmNegative     + selectCmdWritten ]         = PolicyResult(PR_ACCEPTED, selectCmdWritten ,         "from cancelCmdCfmNegative to selectCmdWritten ");
		policyData[m_maxControlState * deviceControlException   + selectCmdWritten ]         = PolicyResult(PR_ACCEPTED, selectCmdWritten ,         "from deviceControlException to selectCmdWritten ");
		policyData[m_maxControlState * noControl                + selectCmdConfirm ]         = PolicyResult(PR_IGNORED,  noControl ,                "from noControl to selectCmdConfirm ");
		policyData[m_maxControlState * written                  + selectCmdConfirm ]         = PolicyResult(PR_FAILED,   deviceControlException ,   "from written to selectCmdConfirm ");
		policyData[m_maxControlState * pending                  + selectCmdConfirm ]         = PolicyResult(PR_FAILED,   deviceControlException ,   "from pending to selectCmdConfirm ");
		policyData[m_maxControlState * conditionalSuccess       + selectCmdConfirm ]         = PolicyResult(PR_IGNORED,  noControl ,                "from conditionalSuccess to selectCmdConfirm ");
		policyData[m_maxControlState * success                  + selectCmdConfirm ]         = PolicyResult(PR_IGNORED,  noControl ,                "from success to selectCmdConfirm ");
		policyData[m_maxControlState * failed                   + selectCmdConfirm ]         = PolicyResult(PR_IGNORED,  noControl ,                "from failed to selectCmdConfirm ");
		policyData[m_maxControlState * LCC_failed               + selectCmdConfirm ]         = PolicyResult(PR_IGNORED,  noControl ,                "from LCC_failed to selectCmdConfirm ");
		policyData[m_maxControlState * RCC_failed               + selectCmdConfirm ]         = PolicyResult(PR_IGNORED,  noControl ,                "from RCC_failed to selectCmdConfirm ");
		policyData[m_maxControlState * comms_failed             + selectCmdConfirm ]         = PolicyResult(PR_IGNORED,  noControl ,                "from comms_failed to selectCmdConfirm ");
		policyData[m_maxControlState * selectCmdWritten         + selectCmdConfirm ]         = PolicyResult(PR_ACCEPTED, selectCmdConfirm ,         "from selectCmdWritten to selectCmdConfirm ");
		policyData[m_maxControlState * selectCmdConfirm         + selectCmdConfirm ]         = PolicyResult(PR_FAILED,   deviceControlException ,   "from selectCmdConfirm to selectCmdConfirm ");
		policyData[m_maxControlState * selectCmdConfirmTimeout  + selectCmdConfirm ]         = PolicyResult(PR_IGNORED,  noControl ,                "from selectCmdConfirmTimeout to selectCmdConfirm ");
		policyData[m_maxControlState * operateCmdTimeout        + selectCmdConfirm ]         = PolicyResult(PR_IGNORED,  noControl ,                "from operateCmdTimeout to selectCmdConfirm ");
		policyData[m_maxControlState * execCmdWritten           + selectCmdConfirm ]         = PolicyResult(PR_FAILED,   deviceControlException ,   "from execCmdWritten to selectCmdConfirm ");
		policyData[m_maxControlState * execCmdConfirm           + selectCmdConfirm ]         = PolicyResult(PR_FAILED,   deviceControlException ,   "from execCmdConfirm to selectCmdConfirm ");
		policyData[m_maxControlState * execCmdConfirmTimeout    + selectCmdConfirm ]         = PolicyResult(PR_IGNORED,  noControl ,                "from execCmdConfirmTimeout to selectCmdConfirm ");
		policyData[m_maxControlState * execCmdSuccess           + selectCmdConfirm ]         = PolicyResult(PR_IGNORED,  noControl ,                "from execCmdSuccess to selectCmdConfirm ");
		policyData[m_maxControlState * execCmdSuccessTimeout    + selectCmdConfirm ]         = PolicyResult(PR_IGNORED,  noControl ,                "from execCmdSuccessTimeout to selectCmdConfirm ");
		policyData[m_maxControlState * cancelCmdWritten         + selectCmdConfirm ]         = PolicyResult(PR_FAILED,   deviceControlException ,   "from cancelCmdWritten to selectCmdConfirm ");
		policyData[m_maxControlState * cancelCmdConfirm         + selectCmdConfirm ]         = PolicyResult(PR_IGNORED,  noControl ,                "from cancelCmdConfirm to selectCmdConfirm ");
		policyData[m_maxControlState * cancelCmdConfirmTimeout  + selectCmdConfirm ]         = PolicyResult(PR_IGNORED,  noControl ,                "from cancelCmdConfirmTimeout to selectCmdConfirm ");
		policyData[m_maxControlState * selectCmdCfmNegative     + selectCmdConfirm ]         = PolicyResult(PR_IGNORED,  noControl ,                "from selectCmdCfmNegative to selectCmdConfirm ");
		policyData[m_maxControlState * execCmdCfmNegative       + selectCmdConfirm ]         = PolicyResult(PR_IGNORED,  noControl ,                "from execCmdCfmNegative to selectCmdConfirm ");
		policyData[m_maxControlState * cancelCmdCfmNegative     + selectCmdConfirm ]         = PolicyResult(PR_IGNORED,  noControl ,                "from cancelCmdCfmNegative to selectCmdConfirm ");
		policyData[m_maxControlState * deviceControlException   + selectCmdConfirm ]         = PolicyResult(PR_IGNORED,  noControl ,                "from deviceControlException to selectCmdConfirm ");
		policyData[m_maxControlState * noControl                + selectCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  selectCmdConfirmTimeout ,  "from noControl to selectCmdConfirmTimeout ");
		policyData[m_maxControlState * written                  + selectCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  selectCmdConfirmTimeout ,  "from written to selectCmdConfirmTimeout ");
		policyData[m_maxControlState * pending                  + selectCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  selectCmdConfirmTimeout ,  "from pending to selectCmdConfirmTimeout ");
		policyData[m_maxControlState * conditionalSuccess       + selectCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  selectCmdConfirmTimeout ,  "from conditionalSuccess to selectCmdConfirmTimeout ");
		policyData[m_maxControlState * success                  + selectCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  selectCmdConfirmTimeout ,  "from success to selectCmdConfirmTimeout ");
		policyData[m_maxControlState * failed                   + selectCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  selectCmdConfirmTimeout ,  "from failed to selectCmdConfirmTimeout ");
		policyData[m_maxControlState * LCC_failed               + selectCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  selectCmdConfirmTimeout ,  "from LCC_failed to selectCmdConfirmTimeout ");
		policyData[m_maxControlState * RCC_failed               + selectCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  selectCmdConfirmTimeout ,  "from RCC_failed to selectCmdConfirmTimeout ");
		policyData[m_maxControlState * comms_failed             + selectCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  selectCmdConfirmTimeout ,  "from comms_failed to selectCmdConfirmTimeout ");
		policyData[m_maxControlState * selectCmdWritten         + selectCmdConfirmTimeout ]  = PolicyResult(PR_ACCEPTED, selectCmdConfirmTimeout ,  "from selectCmdWritten to selectCmdConfirmTimeout ");
		policyData[m_maxControlState * selectCmdConfirm         + selectCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  selectCmdConfirmTimeout ,  "from selectCmdConfirm to selectCmdConfirmTimeout ");
		policyData[m_maxControlState * selectCmdConfirmTimeout  + selectCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  selectCmdConfirmTimeout ,  "from selectCmdConfirmTimeout to selectCmdConfirmTimeout ");
		policyData[m_maxControlState * operateCmdTimeout        + selectCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  selectCmdConfirmTimeout ,  "from operateCmdTimeout to selectCmdConfirmTimeout ");
		policyData[m_maxControlState * execCmdWritten           + selectCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  selectCmdConfirmTimeout ,  "from execCmdWritten to selectCmdConfirmTimeout ");
		policyData[m_maxControlState * execCmdConfirm           + selectCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  selectCmdConfirmTimeout ,  "from execCmdConfirm to selectCmdConfirmTimeout ");
		policyData[m_maxControlState * execCmdConfirmTimeout    + selectCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  selectCmdConfirmTimeout ,  "from execCmdConfirmTimeout to selectCmdConfirmTimeout ");
		policyData[m_maxControlState * execCmdSuccess           + selectCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  selectCmdConfirmTimeout ,  "from execCmdSuccess to selectCmdConfirmTimeout ");
		policyData[m_maxControlState * execCmdSuccessTimeout    + selectCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  selectCmdConfirmTimeout ,  "from execCmdSuccessTimeout to selectCmdConfirmTimeout ");
		policyData[m_maxControlState * cancelCmdWritten         + selectCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  selectCmdConfirmTimeout ,  "from cancelCmdWritten to selectCmdConfirmTimeout ");
		policyData[m_maxControlState * cancelCmdConfirm         + selectCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  selectCmdConfirmTimeout ,  "from cancelCmdConfirm to selectCmdConfirmTimeout ");
		policyData[m_maxControlState * cancelCmdConfirmTimeout  + selectCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  selectCmdConfirmTimeout ,  "from cancelCmdConfirmTimeout to selectCmdConfirmTimeout ");
		policyData[m_maxControlState * selectCmdCfmNegative     + selectCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  selectCmdConfirmTimeout ,  "from selectCmdCfmNegative to selectCmdConfirmTimeout ");
		policyData[m_maxControlState * execCmdCfmNegative       + selectCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  selectCmdConfirmTimeout ,  "from execCmdCfmNegative to selectCmdConfirmTimeout ");
		policyData[m_maxControlState * cancelCmdCfmNegative     + selectCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  selectCmdConfirmTimeout ,  "from cancelCmdCfmNegative to selectCmdConfirmTimeout ");
		policyData[m_maxControlState * deviceControlException   + selectCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  selectCmdConfirmTimeout ,  "from deviceControlException to selectCmdConfirmTimeout ");
		policyData[m_maxControlState * noControl                + operateCmdTimeout ]        = PolicyResult(PR_IGNORED,  operateCmdTimeout ,        "from noControl to operateCmdTimeout ");
		policyData[m_maxControlState * written                  + operateCmdTimeout ]        = PolicyResult(PR_IGNORED,  operateCmdTimeout ,        "from written to operateCmdTimeout ");
		policyData[m_maxControlState * pending                  + operateCmdTimeout ]        = PolicyResult(PR_IGNORED,  operateCmdTimeout ,        "from pending to operateCmdTimeout ");
		policyData[m_maxControlState * conditionalSuccess       + operateCmdTimeout ]        = PolicyResult(PR_IGNORED,  operateCmdTimeout ,        "from conditionalSuccess to operateCmdTimeout ");
		policyData[m_maxControlState * success                  + operateCmdTimeout ]        = PolicyResult(PR_IGNORED,  operateCmdTimeout ,        "from success to operateCmdTimeout ");
		policyData[m_maxControlState * failed                   + operateCmdTimeout ]        = PolicyResult(PR_IGNORED,  operateCmdTimeout ,        "from failed to operateCmdTimeout ");
		policyData[m_maxControlState * LCC_failed               + operateCmdTimeout ]        = PolicyResult(PR_IGNORED,  operateCmdTimeout ,        "from LCC_failed to operateCmdTimeout ");
		policyData[m_maxControlState * RCC_failed               + operateCmdTimeout ]        = PolicyResult(PR_IGNORED,  operateCmdTimeout ,        "from RCC_failed to operateCmdTimeout ");
		policyData[m_maxControlState * comms_failed             + operateCmdTimeout ]        = PolicyResult(PR_IGNORED,  operateCmdTimeout ,        "from comms_failed to operateCmdTimeout ");
		policyData[m_maxControlState * selectCmdWritten         + operateCmdTimeout ]        = PolicyResult(PR_IGNORED,  operateCmdTimeout ,        "from selectCmdWritten to operateCmdTimeout ");
		policyData[m_maxControlState * selectCmdConfirm         + operateCmdTimeout ]        = PolicyResult(PR_ACCEPTED, operateCmdTimeout ,        "from selectCmdConfirm to operateCmdTimeout ");
		policyData[m_maxControlState * selectCmdConfirmTimeout  + operateCmdTimeout ]        = PolicyResult(PR_IGNORED,  operateCmdTimeout ,        "from selectCmdConfirmTimeout to operateCmdTimeout ");
		policyData[m_maxControlState * operateCmdTimeout        + operateCmdTimeout ]        = PolicyResult(PR_IGNORED,  operateCmdTimeout ,        "from operateCmdTimeout to operateCmdTimeout ");
		policyData[m_maxControlState * execCmdWritten           + operateCmdTimeout ]        = PolicyResult(PR_IGNORED,  operateCmdTimeout ,        "from execCmdWritten to operateCmdTimeout ");
		policyData[m_maxControlState * execCmdConfirm           + operateCmdTimeout ]        = PolicyResult(PR_IGNORED,  operateCmdTimeout ,        "from execCmdConfirm to operateCmdTimeout ");
		policyData[m_maxControlState * execCmdConfirmTimeout    + operateCmdTimeout ]        = PolicyResult(PR_IGNORED,  operateCmdTimeout ,        "from execCmdConfirmTimeout to operateCmdTimeout ");
		policyData[m_maxControlState * execCmdSuccess           + operateCmdTimeout ]        = PolicyResult(PR_IGNORED,  operateCmdTimeout ,        "from execCmdSuccess to operateCmdTimeout ");
		policyData[m_maxControlState * execCmdSuccessTimeout    + operateCmdTimeout ]        = PolicyResult(PR_IGNORED,  operateCmdTimeout ,        "from execCmdSuccessTimeout to operateCmdTimeout ");
		policyData[m_maxControlState * cancelCmdWritten         + operateCmdTimeout ]        = PolicyResult(PR_IGNORED,  operateCmdTimeout ,        "from cancelCmdWritten to operateCmdTimeout ");
		policyData[m_maxControlState * cancelCmdConfirm         + operateCmdTimeout ]        = PolicyResult(PR_IGNORED,  operateCmdTimeout ,        "from cancelCmdConfirm to operateCmdTimeout ");
		policyData[m_maxControlState * cancelCmdConfirmTimeout  + operateCmdTimeout ]        = PolicyResult(PR_IGNORED,  operateCmdTimeout ,        "from cancelCmdConfirmTimeout to operateCmdTimeout ");
		policyData[m_maxControlState * selectCmdCfmNegative     + operateCmdTimeout ]        = PolicyResult(PR_IGNORED,  operateCmdTimeout ,        "from selectCmdCfmNegative to operateCmdTimeout ");
		policyData[m_maxControlState * execCmdCfmNegative       + operateCmdTimeout ]        = PolicyResult(PR_IGNORED,  operateCmdTimeout ,        "from execCmdCfmNegative to operateCmdTimeout ");
		policyData[m_maxControlState * cancelCmdCfmNegative     + operateCmdTimeout ]        = PolicyResult(PR_IGNORED,  operateCmdTimeout ,        "from cancelCmdCfmNegative to operateCmdTimeout ");
		policyData[m_maxControlState * deviceControlException   + operateCmdTimeout ]        = PolicyResult(PR_IGNORED,  operateCmdTimeout ,        "from deviceControlException to operateCmdTimeout ");
		policyData[m_maxControlState * noControl                + execCmdWritten ]           = PolicyResult(PR_ACCEPTED, execCmdWritten ,           "from noControl to execCmdWritten ");
		policyData[m_maxControlState * written                  + execCmdWritten ]           = PolicyResult(PR_ACCEPTED, execCmdWritten ,           "from written to execCmdWritten ");
		policyData[m_maxControlState * pending                  + execCmdWritten ]           = PolicyResult(PR_ACCEPTED, execCmdWritten ,           "from pending to execCmdWritten ");
		policyData[m_maxControlState * conditionalSuccess       + execCmdWritten ]           = PolicyResult(PR_ACCEPTED, execCmdWritten ,           "from conditionalSuccess to execCmdWritten ");
		policyData[m_maxControlState * success                  + execCmdWritten ]           = PolicyResult(PR_ACCEPTED, execCmdWritten ,           "from success to execCmdWritten ");
		policyData[m_maxControlState * failed                   + execCmdWritten ]           = PolicyResult(PR_ACCEPTED, execCmdWritten ,           "from failed to execCmdWritten ");
		policyData[m_maxControlState * LCC_failed               + execCmdWritten ]           = PolicyResult(PR_ACCEPTED, execCmdWritten ,           "from LCC_failed to execCmdWritten ");
		policyData[m_maxControlState * RCC_failed               + execCmdWritten ]           = PolicyResult(PR_ACCEPTED, execCmdWritten ,           "from RCC_failed to execCmdWritten ");
		policyData[m_maxControlState * comms_failed             + execCmdWritten ]           = PolicyResult(PR_ACCEPTED, execCmdWritten ,           "from comms_failed to execCmdWritten ");
		policyData[m_maxControlState * selectCmdWritten         + execCmdWritten ]           = PolicyResult(PR_ACCEPTED, execCmdWritten ,           "from selectCmdWritten to execCmdWritten ");
		policyData[m_maxControlState * selectCmdConfirm         + execCmdWritten ]           = PolicyResult(PR_ACCEPTED, execCmdWritten ,           "from selectCmdConfirm to execCmdWritten ");
		policyData[m_maxControlState * selectCmdConfirmTimeout  + execCmdWritten ]           = PolicyResult(PR_ACCEPTED, execCmdWritten ,           "from selectCmdConfirmTimeout to execCmdWritten ");
		policyData[m_maxControlState * operateCmdTimeout        + execCmdWritten ]           = PolicyResult(PR_ACCEPTED, execCmdWritten ,           "from operateCmdTimeout to execCmdWritten ");
		policyData[m_maxControlState * execCmdWritten           + execCmdWritten ]           = PolicyResult(PR_ACCEPTED, execCmdWritten ,           "from execCmdWritten to execCmdWritten ");
		policyData[m_maxControlState * execCmdConfirm           + execCmdWritten ]           = PolicyResult(PR_ACCEPTED, execCmdWritten ,           "from execCmdConfirm to execCmdWritten ");
		policyData[m_maxControlState * execCmdConfirmTimeout    + execCmdWritten ]           = PolicyResult(PR_ACCEPTED, execCmdWritten ,           "from execCmdConfirmTimeout to execCmdWritten ");
		policyData[m_maxControlState * execCmdSuccess           + execCmdWritten ]           = PolicyResult(PR_ACCEPTED, execCmdWritten ,           "from execCmdSuccess to execCmdWritten ");
		policyData[m_maxControlState * execCmdSuccessTimeout    + execCmdWritten ]           = PolicyResult(PR_ACCEPTED, execCmdWritten ,           "from execCmdSuccessTimeout to execCmdWritten ");
		policyData[m_maxControlState * cancelCmdWritten         + execCmdWritten ]           = PolicyResult(PR_ACCEPTED, execCmdWritten ,           "from cancelCmdWritten to execCmdWritten ");
		policyData[m_maxControlState * cancelCmdConfirm         + execCmdWritten ]           = PolicyResult(PR_ACCEPTED, execCmdWritten ,           "from cancelCmdConfirm to execCmdWritten ");
		policyData[m_maxControlState * cancelCmdConfirmTimeout  + execCmdWritten ]           = PolicyResult(PR_ACCEPTED, execCmdWritten ,           "from cancelCmdConfirmTimeout to execCmdWritten ");
		policyData[m_maxControlState * selectCmdCfmNegative     + execCmdWritten ]           = PolicyResult(PR_ACCEPTED, execCmdWritten ,           "from selectCmdCfmNegative to execCmdWritten ");
		policyData[m_maxControlState * execCmdCfmNegative       + execCmdWritten ]           = PolicyResult(PR_ACCEPTED, execCmdWritten ,           "from execCmdCfmNegative to execCmdWritten ");
		policyData[m_maxControlState * cancelCmdCfmNegative     + execCmdWritten ]           = PolicyResult(PR_ACCEPTED, execCmdWritten ,           "from cancelCmdCfmNegative to execCmdWritten ");
		policyData[m_maxControlState * deviceControlException   + execCmdWritten ]           = PolicyResult(PR_ACCEPTED, execCmdWritten ,           "from deviceControlException to execCmdWritten ");
		policyData[m_maxControlState * noControl                + execCmdConfirm ]           = PolicyResult(PR_IGNORED,  noControl ,                "from noControl to execCmdConfirm ");
		policyData[m_maxControlState * written                  + execCmdConfirm ]           = PolicyResult(PR_FAILED,   deviceControlException ,   "from written to execCmdConfirm ");
		policyData[m_maxControlState * pending                  + execCmdConfirm ]           = PolicyResult(PR_FAILED,   deviceControlException ,   "from pending to execCmdConfirm ");
		policyData[m_maxControlState * conditionalSuccess       + execCmdConfirm ]           = PolicyResult(PR_IGNORED,  noControl ,                "from conditionalSuccess to execCmdConfirm ");
		policyData[m_maxControlState * success                  + execCmdConfirm ]           = PolicyResult(PR_IGNORED,  noControl ,                "from success to execCmdConfirm ");
		policyData[m_maxControlState * failed                   + execCmdConfirm ]           = PolicyResult(PR_IGNORED,  noControl ,                "from failed to execCmdConfirm ");
		policyData[m_maxControlState * LCC_failed               + execCmdConfirm ]           = PolicyResult(PR_IGNORED,  noControl ,                "from LCC_failed to execCmdConfirm ");
		policyData[m_maxControlState * RCC_failed               + execCmdConfirm ]           = PolicyResult(PR_IGNORED,  noControl ,                "from RCC_failed to execCmdConfirm ");
		policyData[m_maxControlState * comms_failed             + execCmdConfirm ]           = PolicyResult(PR_IGNORED,  noControl ,                "from comms_failed to execCmdConfirm ");
		policyData[m_maxControlState * selectCmdWritten         + execCmdConfirm ]           = PolicyResult(PR_FAILED,   deviceControlException ,   "from selectCmdWritten to execCmdConfirm ");
		policyData[m_maxControlState * selectCmdConfirm         + execCmdConfirm ]           = PolicyResult(PR_FAILED,   deviceControlException ,   "from selectCmdConfirm to execCmdConfirm ");
		policyData[m_maxControlState * selectCmdConfirmTimeout  + execCmdConfirm ]           = PolicyResult(PR_IGNORED,  noControl ,                "from selectCmdConfirmTimeout to execCmdConfirm ");
		policyData[m_maxControlState * operateCmdTimeout        + execCmdConfirm ]           = PolicyResult(PR_IGNORED,  noControl ,                "from operateCmdTimeout to execCmdConfirm ");
		policyData[m_maxControlState * execCmdWritten           + execCmdConfirm ]           = PolicyResult(PR_ACCEPTED, execCmdConfirm ,           "from execCmdWritten to execCmdConfirm ");
		policyData[m_maxControlState * execCmdConfirm           + execCmdConfirm ]           = PolicyResult(PR_FAILED,   deviceControlException ,   "from execCmdConfirm to execCmdConfirm ");
		policyData[m_maxControlState * execCmdConfirmTimeout    + execCmdConfirm ]           = PolicyResult(PR_IGNORED,  noControl ,                "from execCmdConfirmTimeout to execCmdConfirm ");
		policyData[m_maxControlState * execCmdSuccess           + execCmdConfirm ]           = PolicyResult(PR_IGNORED,  noControl ,                "from execCmdSuccess to execCmdConfirm ");
		policyData[m_maxControlState * execCmdSuccessTimeout    + execCmdConfirm ]           = PolicyResult(PR_IGNORED,  noControl ,                "from execCmdSuccessTimeout to execCmdConfirm ");
		policyData[m_maxControlState * cancelCmdWritten         + execCmdConfirm ]           = PolicyResult(PR_FAILED,   deviceControlException ,   "from cancelCmdWritten to execCmdConfirm ");
		policyData[m_maxControlState * cancelCmdConfirm         + execCmdConfirm ]           = PolicyResult(PR_IGNORED,  noControl ,                "from cancelCmdConfirm to execCmdConfirm ");
		policyData[m_maxControlState * cancelCmdConfirmTimeout  + execCmdConfirm ]           = PolicyResult(PR_IGNORED,  noControl ,                "from cancelCmdConfirmTimeout to execCmdConfirm ");
		policyData[m_maxControlState * selectCmdCfmNegative     + execCmdConfirm ]           = PolicyResult(PR_IGNORED,  noControl ,                "from selectCmdCfmNegative to execCmdConfirm ");
		policyData[m_maxControlState * execCmdCfmNegative       + execCmdConfirm ]           = PolicyResult(PR_IGNORED,  noControl ,                "from execCmdCfmNegative to execCmdConfirm ");
		policyData[m_maxControlState * cancelCmdCfmNegative     + execCmdConfirm ]           = PolicyResult(PR_IGNORED,  noControl ,                "from cancelCmdCfmNegative to execCmdConfirm ");
		policyData[m_maxControlState * deviceControlException   + execCmdConfirm ]           = PolicyResult(PR_IGNORED,  noControl ,                "from deviceControlException to execCmdConfirm ");
		policyData[m_maxControlState * noControl                + execCmdConfirmTimeout ]    = PolicyResult(PR_IGNORED,  execCmdConfirmTimeout ,    "from noControl to execCmdConfirmTimeout ");
		policyData[m_maxControlState * written                  + execCmdConfirmTimeout ]    = PolicyResult(PR_IGNORED,  execCmdConfirmTimeout ,    "from written to execCmdConfirmTimeout ");
		policyData[m_maxControlState * pending                  + execCmdConfirmTimeout ]    = PolicyResult(PR_IGNORED,  execCmdConfirmTimeout ,    "from pending to execCmdConfirmTimeout ");
		policyData[m_maxControlState * conditionalSuccess       + execCmdConfirmTimeout ]    = PolicyResult(PR_IGNORED,  execCmdConfirmTimeout ,    "from conditionalSuccess to execCmdConfirmTimeout ");
		policyData[m_maxControlState * success                  + execCmdConfirmTimeout ]    = PolicyResult(PR_IGNORED,  execCmdConfirmTimeout ,    "from success to execCmdConfirmTimeout ");
		policyData[m_maxControlState * failed                   + execCmdConfirmTimeout ]    = PolicyResult(PR_IGNORED,  execCmdConfirmTimeout ,    "from failed to execCmdConfirmTimeout ");
		policyData[m_maxControlState * LCC_failed               + execCmdConfirmTimeout ]    = PolicyResult(PR_IGNORED,  execCmdConfirmTimeout ,    "from LCC_failed to execCmdConfirmTimeout ");
		policyData[m_maxControlState * RCC_failed               + execCmdConfirmTimeout ]    = PolicyResult(PR_IGNORED,  execCmdConfirmTimeout ,    "from RCC_failed to execCmdConfirmTimeout ");
		policyData[m_maxControlState * comms_failed             + execCmdConfirmTimeout ]    = PolicyResult(PR_IGNORED,  execCmdConfirmTimeout ,    "from comms_failed to execCmdConfirmTimeout ");
		policyData[m_maxControlState * selectCmdWritten         + execCmdConfirmTimeout ]    = PolicyResult(PR_IGNORED,  execCmdConfirmTimeout ,    "from selectCmdWritten to execCmdConfirmTimeout ");
		policyData[m_maxControlState * selectCmdConfirm         + execCmdConfirmTimeout ]    = PolicyResult(PR_IGNORED,  execCmdConfirmTimeout ,    "from selectCmdConfirm to execCmdConfirmTimeout ");
		policyData[m_maxControlState * selectCmdConfirmTimeout  + execCmdConfirmTimeout ]    = PolicyResult(PR_IGNORED,  execCmdConfirmTimeout ,    "from selectCmdConfirmTimeout to execCmdConfirmTimeout ");
		policyData[m_maxControlState * operateCmdTimeout        + execCmdConfirmTimeout ]    = PolicyResult(PR_IGNORED,  execCmdConfirmTimeout ,    "from operateCmdTimeout to execCmdConfirmTimeout ");
		policyData[m_maxControlState * execCmdWritten           + execCmdConfirmTimeout ]    = PolicyResult(PR_ACCEPTED, execCmdConfirmTimeout ,    "from execCmdWritten to execCmdConfirmTimeout ");
		policyData[m_maxControlState * execCmdConfirm           + execCmdConfirmTimeout ]    = PolicyResult(PR_IGNORED,  execCmdConfirmTimeout ,    "from execCmdConfirm to execCmdConfirmTimeout ");
		policyData[m_maxControlState * execCmdConfirmTimeout    + execCmdConfirmTimeout ]    = PolicyResult(PR_IGNORED,  execCmdConfirmTimeout ,    "from execCmdConfirmTimeout to execCmdConfirmTimeout ");
		policyData[m_maxControlState * execCmdSuccess           + execCmdConfirmTimeout ]    = PolicyResult(PR_IGNORED,  execCmdConfirmTimeout ,    "from execCmdSuccess to execCmdConfirmTimeout ");
		policyData[m_maxControlState * execCmdSuccessTimeout    + execCmdConfirmTimeout ]    = PolicyResult(PR_IGNORED,  execCmdConfirmTimeout ,    "from execCmdSuccessTimeout to execCmdConfirmTimeout ");
		policyData[m_maxControlState * cancelCmdWritten         + execCmdConfirmTimeout ]    = PolicyResult(PR_IGNORED,  execCmdConfirmTimeout ,    "from cancelCmdWritten to execCmdConfirmTimeout ");
		policyData[m_maxControlState * cancelCmdConfirm         + execCmdConfirmTimeout ]    = PolicyResult(PR_IGNORED,  execCmdConfirmTimeout ,    "from cancelCmdConfirm to execCmdConfirmTimeout ");
		policyData[m_maxControlState * cancelCmdConfirmTimeout  + execCmdConfirmTimeout ]    = PolicyResult(PR_IGNORED,  execCmdConfirmTimeout ,    "from cancelCmdConfirmTimeout to execCmdConfirmTimeout ");
		policyData[m_maxControlState * selectCmdCfmNegative     + execCmdConfirmTimeout ]    = PolicyResult(PR_IGNORED,  execCmdConfirmTimeout ,    "from selectCmdCfmNegative to execCmdConfirmTimeout ");
		policyData[m_maxControlState * execCmdCfmNegative       + execCmdConfirmTimeout ]    = PolicyResult(PR_IGNORED,  execCmdConfirmTimeout ,    "from execCmdCfmNegative to execCmdConfirmTimeout ");
		policyData[m_maxControlState * cancelCmdCfmNegative     + execCmdConfirmTimeout ]    = PolicyResult(PR_IGNORED,  execCmdConfirmTimeout ,    "from cancelCmdCfmNegative to execCmdConfirmTimeout ");
		policyData[m_maxControlState * deviceControlException   + execCmdConfirmTimeout ]    = PolicyResult(PR_IGNORED,  execCmdConfirmTimeout ,    "from deviceControlException to execCmdConfirmTimeout ");
		policyData[m_maxControlState * noControl                + execCmdSuccess ]           = PolicyResult(PR_IGNORED,  noControl ,                "from noControl to execCmdSuccess ");
		policyData[m_maxControlState * written                  + execCmdSuccess ]           = PolicyResult(PR_FAILED,   deviceControlException ,   "from written to execCmdSuccess ");
		policyData[m_maxControlState * pending                  + execCmdSuccess ]           = PolicyResult(PR_FAILED,   deviceControlException ,   "from pending to execCmdSuccess ");
		policyData[m_maxControlState * conditionalSuccess       + execCmdSuccess ]           = PolicyResult(PR_IGNORED,  noControl ,                "from conditionalSuccess to execCmdSuccess ");
		policyData[m_maxControlState * success                  + execCmdSuccess ]           = PolicyResult(PR_IGNORED,  noControl ,                "from success to execCmdSuccess ");
		policyData[m_maxControlState * failed                   + execCmdSuccess ]           = PolicyResult(PR_IGNORED,  noControl ,                "from failed to execCmdSuccess ");
		policyData[m_maxControlState * LCC_failed               + execCmdSuccess ]           = PolicyResult(PR_IGNORED,  noControl ,                "from LCC_failed to execCmdSuccess ");
		policyData[m_maxControlState * RCC_failed               + execCmdSuccess ]           = PolicyResult(PR_IGNORED,  noControl ,                "from RCC_failed to execCmdSuccess ");
		policyData[m_maxControlState * comms_failed             + execCmdSuccess ]           = PolicyResult(PR_IGNORED,  noControl ,                "from comms_failed to execCmdSuccess ");
		policyData[m_maxControlState * selectCmdWritten         + execCmdSuccess ]           = PolicyResult(PR_FAILED,   deviceControlException ,   "from selectCmdWritten to execCmdSuccess ");
		policyData[m_maxControlState * selectCmdConfirm         + execCmdSuccess ]           = PolicyResult(PR_FAILED,   deviceControlException ,   "from selectCmdConfirm to execCmdSuccess ");
		policyData[m_maxControlState * selectCmdConfirmTimeout  + execCmdSuccess ]           = PolicyResult(PR_IGNORED,  noControl ,                "from selectCmdConfirmTimeout to execCmdSuccess ");
		policyData[m_maxControlState * operateCmdTimeout        + execCmdSuccess ]           = PolicyResult(PR_IGNORED,  noControl ,                "from operateCmdTimeout to execCmdSuccess ");
		policyData[m_maxControlState * execCmdWritten           + execCmdSuccess ]           = PolicyResult(PR_FAILED,   deviceControlException ,   "from execCmdWritten to execCmdSuccess ");
		policyData[m_maxControlState * execCmdConfirm           + execCmdSuccess ]           = PolicyResult(PR_ACCEPTED, execCmdSuccess ,           "from execCmdConfirm to execCmdSuccess ");
		policyData[m_maxControlState * execCmdConfirmTimeout    + execCmdSuccess ]           = PolicyResult(PR_IGNORED,  noControl ,                "from execCmdConfirmTimeout to execCmdSuccess ");
		policyData[m_maxControlState * execCmdSuccess           + execCmdSuccess ]           = PolicyResult(PR_IGNORED,  noControl ,                "from execCmdSuccess to execCmdSuccess ");
		policyData[m_maxControlState * execCmdSuccessTimeout    + execCmdSuccess ]           = PolicyResult(PR_IGNORED,  noControl ,                "from execCmdSuccessTimeout to execCmdSuccess ");
		policyData[m_maxControlState * cancelCmdWritten         + execCmdSuccess ]           = PolicyResult(PR_FAILED,   deviceControlException ,   "from cancelCmdWritten to execCmdSuccess ");
		policyData[m_maxControlState * cancelCmdConfirm         + execCmdSuccess ]           = PolicyResult(PR_IGNORED,  noControl ,                "from cancelCmdConfirm to execCmdSuccess ");
		policyData[m_maxControlState * cancelCmdConfirmTimeout  + execCmdSuccess ]           = PolicyResult(PR_IGNORED,  noControl ,                "from cancelCmdConfirmTimeout to execCmdSuccess ");
		policyData[m_maxControlState * selectCmdCfmNegative     + execCmdSuccess ]           = PolicyResult(PR_IGNORED,  noControl ,                "from selectCmdCfmNegative to execCmdSuccess ");
		policyData[m_maxControlState * execCmdCfmNegative       + execCmdSuccess ]           = PolicyResult(PR_IGNORED,  noControl ,                "from execCmdCfmNegative to execCmdSuccess ");
		policyData[m_maxControlState * cancelCmdCfmNegative     + execCmdSuccess ]           = PolicyResult(PR_IGNORED,  noControl ,                "from cancelCmdCfmNegative to execCmdSuccess ");
		policyData[m_maxControlState * deviceControlException   + execCmdSuccess ]           = PolicyResult(PR_IGNORED,  noControl ,                "from deviceControlException to execCmdSuccess ");
		policyData[m_maxControlState * noControl                + execCmdSuccessTimeout ]    = PolicyResult(PR_IGNORED,  execCmdSuccessTimeout ,    "from noControl to execCmdSuccessTimeout ");
		policyData[m_maxControlState * written                  + execCmdSuccessTimeout ]    = PolicyResult(PR_IGNORED,  execCmdSuccessTimeout ,    "from written to execCmdSuccessTimeout ");
		policyData[m_maxControlState * pending                  + execCmdSuccessTimeout ]    = PolicyResult(PR_IGNORED,  execCmdSuccessTimeout ,    "from pending to execCmdSuccessTimeout ");
		policyData[m_maxControlState * conditionalSuccess       + execCmdSuccessTimeout ]    = PolicyResult(PR_IGNORED,  execCmdSuccessTimeout ,    "from conditionalSuccess to execCmdSuccessTimeout ");
		policyData[m_maxControlState * success                  + execCmdSuccessTimeout ]    = PolicyResult(PR_IGNORED,  execCmdSuccessTimeout ,    "from success to execCmdSuccessTimeout ");
		policyData[m_maxControlState * failed                   + execCmdSuccessTimeout ]    = PolicyResult(PR_IGNORED,  execCmdSuccessTimeout ,    "from failed to execCmdSuccessTimeout ");
		policyData[m_maxControlState * LCC_failed               + execCmdSuccessTimeout ]    = PolicyResult(PR_IGNORED,  execCmdSuccessTimeout ,    "from LCC_failed to execCmdSuccessTimeout ");
		policyData[m_maxControlState * RCC_failed               + execCmdSuccessTimeout ]    = PolicyResult(PR_IGNORED,  execCmdSuccessTimeout ,    "from RCC_failed to execCmdSuccessTimeout ");
		policyData[m_maxControlState * comms_failed             + execCmdSuccessTimeout ]    = PolicyResult(PR_IGNORED,  execCmdSuccessTimeout ,    "from comms_failed to execCmdSuccessTimeout ");
		policyData[m_maxControlState * selectCmdWritten         + execCmdSuccessTimeout ]    = PolicyResult(PR_IGNORED,  execCmdSuccessTimeout ,    "from selectCmdWritten to execCmdSuccessTimeout ");
		policyData[m_maxControlState * selectCmdConfirm         + execCmdSuccessTimeout ]    = PolicyResult(PR_IGNORED,  execCmdSuccessTimeout ,    "from selectCmdConfirm to execCmdSuccessTimeout ");
		policyData[m_maxControlState * selectCmdConfirmTimeout  + execCmdSuccessTimeout ]    = PolicyResult(PR_IGNORED,  execCmdSuccessTimeout ,    "from selectCmdConfirmTimeout to execCmdSuccessTimeout ");
		policyData[m_maxControlState * operateCmdTimeout        + execCmdSuccessTimeout ]    = PolicyResult(PR_IGNORED,  execCmdSuccessTimeout ,    "from operateCmdTimeout to execCmdSuccessTimeout ");
		policyData[m_maxControlState * execCmdWritten           + execCmdSuccessTimeout ]    = PolicyResult(PR_IGNORED,  execCmdSuccessTimeout ,    "from execCmdWritten to execCmdSuccessTimeout ");
		policyData[m_maxControlState * execCmdConfirm           + execCmdSuccessTimeout ]    = PolicyResult(PR_ACCEPTED, execCmdSuccessTimeout ,    "from execCmdConfirm to execCmdSuccessTimeout ");
		policyData[m_maxControlState * execCmdConfirmTimeout    + execCmdSuccessTimeout ]    = PolicyResult(PR_IGNORED,  execCmdSuccessTimeout ,    "from execCmdConfirmTimeout to execCmdSuccessTimeout ");
		policyData[m_maxControlState * execCmdSuccess           + execCmdSuccessTimeout ]    = PolicyResult(PR_IGNORED,  execCmdSuccessTimeout ,    "from execCmdSuccess to execCmdSuccessTimeout ");
		policyData[m_maxControlState * execCmdSuccessTimeout    + execCmdSuccessTimeout ]    = PolicyResult(PR_IGNORED,  execCmdSuccessTimeout ,    "from execCmdSuccessTimeout to execCmdSuccessTimeout ");
		policyData[m_maxControlState * cancelCmdWritten         + execCmdSuccessTimeout ]    = PolicyResult(PR_IGNORED,  execCmdSuccessTimeout ,    "from cancelCmdWritten to execCmdSuccessTimeout ");
		policyData[m_maxControlState * cancelCmdConfirm         + execCmdSuccessTimeout ]    = PolicyResult(PR_IGNORED,  execCmdSuccessTimeout ,    "from cancelCmdConfirm to execCmdSuccessTimeout ");
		policyData[m_maxControlState * cancelCmdConfirmTimeout  + execCmdSuccessTimeout ]    = PolicyResult(PR_IGNORED,  execCmdSuccessTimeout ,    "from cancelCmdConfirmTimeout to execCmdSuccessTimeout ");
		policyData[m_maxControlState * selectCmdCfmNegative     + execCmdSuccessTimeout ]    = PolicyResult(PR_IGNORED,  execCmdSuccessTimeout ,    "from selectCmdCfmNegative to execCmdSuccessTimeout ");
		policyData[m_maxControlState * execCmdCfmNegative       + execCmdSuccessTimeout ]    = PolicyResult(PR_IGNORED,  execCmdSuccessTimeout ,    "from execCmdCfmNegative to execCmdSuccessTimeout ");
		policyData[m_maxControlState * cancelCmdCfmNegative     + execCmdSuccessTimeout ]    = PolicyResult(PR_IGNORED,  execCmdSuccessTimeout ,    "from cancelCmdCfmNegative to execCmdSuccessTimeout ");
		policyData[m_maxControlState * deviceControlException   + execCmdSuccessTimeout ]    = PolicyResult(PR_IGNORED,  execCmdSuccessTimeout ,    "from deviceControlException to execCmdSuccessTimeout ");
		policyData[m_maxControlState * noControl                + cancelCmdWritten ]         = PolicyResult(PR_ACCEPTED, cancelCmdWritten ,         "from noControl to cancelCmdWritten ");
		policyData[m_maxControlState * written                  + cancelCmdWritten ]         = PolicyResult(PR_ACCEPTED, cancelCmdWritten ,         "from written to cancelCmdWritten ");
		policyData[m_maxControlState * pending                  + cancelCmdWritten ]         = PolicyResult(PR_ACCEPTED, cancelCmdWritten ,         "from pending to cancelCmdWritten ");
		policyData[m_maxControlState * conditionalSuccess       + cancelCmdWritten ]         = PolicyResult(PR_ACCEPTED, cancelCmdWritten ,         "from conditionalSuccess to cancelCmdWritten ");
		policyData[m_maxControlState * success                  + cancelCmdWritten ]         = PolicyResult(PR_ACCEPTED, cancelCmdWritten ,         "from success to cancelCmdWritten ");
		policyData[m_maxControlState * failed                   + cancelCmdWritten ]         = PolicyResult(PR_ACCEPTED, cancelCmdWritten ,         "from failed to cancelCmdWritten ");
		policyData[m_maxControlState * LCC_failed               + cancelCmdWritten ]         = PolicyResult(PR_ACCEPTED, cancelCmdWritten ,         "from LCC_failed to cancelCmdWritten ");
		policyData[m_maxControlState * RCC_failed               + cancelCmdWritten ]         = PolicyResult(PR_ACCEPTED, cancelCmdWritten ,         "from RCC_failed to cancelCmdWritten ");
		policyData[m_maxControlState * comms_failed             + cancelCmdWritten ]         = PolicyResult(PR_ACCEPTED, cancelCmdWritten ,         "from comms_failed to cancelCmdWritten ");
		policyData[m_maxControlState * selectCmdWritten         + cancelCmdWritten ]         = PolicyResult(PR_ACCEPTED, cancelCmdWritten ,         "from selectCmdWritten to cancelCmdWritten ");
		policyData[m_maxControlState * selectCmdConfirm         + cancelCmdWritten ]         = PolicyResult(PR_ACCEPTED, cancelCmdWritten ,         "from selectCmdConfirm to cancelCmdWritten ");
		policyData[m_maxControlState * selectCmdConfirmTimeout  + cancelCmdWritten ]         = PolicyResult(PR_ACCEPTED, cancelCmdWritten ,         "from selectCmdConfirmTimeout to cancelCmdWritten ");
		policyData[m_maxControlState * operateCmdTimeout        + cancelCmdWritten ]         = PolicyResult(PR_ACCEPTED, cancelCmdWritten ,         "from operateCmdTimeout to cancelCmdWritten ");
		policyData[m_maxControlState * execCmdWritten           + cancelCmdWritten ]         = PolicyResult(PR_ACCEPTED, cancelCmdWritten ,         "from execCmdWritten to cancelCmdWritten ");
		policyData[m_maxControlState * execCmdConfirm           + cancelCmdWritten ]         = PolicyResult(PR_ACCEPTED, cancelCmdWritten ,         "from execCmdConfirm to cancelCmdWritten ");
		policyData[m_maxControlState * execCmdConfirmTimeout    + cancelCmdWritten ]         = PolicyResult(PR_ACCEPTED, cancelCmdWritten ,         "from execCmdConfirmTimeout to cancelCmdWritten ");
		policyData[m_maxControlState * execCmdSuccess           + cancelCmdWritten ]         = PolicyResult(PR_ACCEPTED, cancelCmdWritten ,         "from execCmdSuccess to cancelCmdWritten ");
		policyData[m_maxControlState * execCmdSuccessTimeout    + cancelCmdWritten ]         = PolicyResult(PR_ACCEPTED, cancelCmdWritten ,         "from execCmdSuccessTimeout to cancelCmdWritten ");
		policyData[m_maxControlState * cancelCmdWritten         + cancelCmdWritten ]         = PolicyResult(PR_ACCEPTED, cancelCmdWritten ,         "from cancelCmdWritten to cancelCmdWritten ");
		policyData[m_maxControlState * cancelCmdConfirm         + cancelCmdWritten ]         = PolicyResult(PR_ACCEPTED, cancelCmdWritten ,         "from cancelCmdConfirm to cancelCmdWritten ");
		policyData[m_maxControlState * cancelCmdConfirmTimeout  + cancelCmdWritten ]         = PolicyResult(PR_ACCEPTED, cancelCmdWritten ,         "from cancelCmdConfirmTimeout to cancelCmdWritten ");
		policyData[m_maxControlState * selectCmdCfmNegative     + cancelCmdWritten ]         = PolicyResult(PR_ACCEPTED, cancelCmdWritten ,         "from selectCmdCfmNegative to cancelCmdWritten ");
		policyData[m_maxControlState * execCmdCfmNegative       + cancelCmdWritten ]         = PolicyResult(PR_ACCEPTED, cancelCmdWritten ,         "from execCmdCfmNegative to cancelCmdWritten ");
		policyData[m_maxControlState * cancelCmdCfmNegative     + cancelCmdWritten ]         = PolicyResult(PR_ACCEPTED, cancelCmdWritten ,         "from cancelCmdCfmNegative to cancelCmdWritten ");
		policyData[m_maxControlState * deviceControlException   + cancelCmdWritten ]         = PolicyResult(PR_ACCEPTED, cancelCmdWritten ,         "from deviceControlException to cancelCmdWritten ");
		policyData[m_maxControlState * noControl                + cancelCmdConfirm ]         = PolicyResult(PR_IGNORED,  noControl ,                "from noControl to cancelCmdConfirm ");
		policyData[m_maxControlState * written                  + cancelCmdConfirm ]         = PolicyResult(PR_FAILED,   deviceControlException ,   "from written to cancelCmdConfirm ");
		policyData[m_maxControlState * pending                  + cancelCmdConfirm ]         = PolicyResult(PR_FAILED,   deviceControlException ,   "from pending to cancelCmdConfirm ");
		policyData[m_maxControlState * conditionalSuccess       + cancelCmdConfirm ]         = PolicyResult(PR_IGNORED,  noControl ,                "from conditionalSuccess to cancelCmdConfirm ");
		policyData[m_maxControlState * success                  + cancelCmdConfirm ]         = PolicyResult(PR_IGNORED,  noControl ,                "from success to cancelCmdConfirm ");
		policyData[m_maxControlState * failed                   + cancelCmdConfirm ]         = PolicyResult(PR_IGNORED,  noControl ,                "from failed to cancelCmdConfirm ");
		policyData[m_maxControlState * LCC_failed               + cancelCmdConfirm ]         = PolicyResult(PR_IGNORED,  noControl ,                "from LCC_failed to cancelCmdConfirm ");
		policyData[m_maxControlState * RCC_failed               + cancelCmdConfirm ]         = PolicyResult(PR_IGNORED,  noControl ,                "from RCC_failed to cancelCmdConfirm ");
		policyData[m_maxControlState * comms_failed             + cancelCmdConfirm ]         = PolicyResult(PR_IGNORED,  noControl ,                "from comms_failed to cancelCmdConfirm ");
		policyData[m_maxControlState * selectCmdWritten         + cancelCmdConfirm ]         = PolicyResult(PR_FAILED,   deviceControlException ,   "from selectCmdWritten to cancelCmdConfirm ");
		policyData[m_maxControlState * selectCmdConfirm         + cancelCmdConfirm ]         = PolicyResult(PR_FAILED,   deviceControlException ,   "from selectCmdConfirm to cancelCmdConfirm ");
		policyData[m_maxControlState * selectCmdConfirmTimeout  + cancelCmdConfirm ]         = PolicyResult(PR_IGNORED,  noControl ,                "from selectCmdConfirmTimeout to cancelCmdConfirm ");
		policyData[m_maxControlState * operateCmdTimeout        + cancelCmdConfirm ]         = PolicyResult(PR_IGNORED,  noControl ,                "from operateCmdTimeout to cancelCmdConfirm ");
		policyData[m_maxControlState * execCmdWritten           + cancelCmdConfirm ]         = PolicyResult(PR_FAILED,   deviceControlException ,   "from execCmdWritten to cancelCmdConfirm ");
		policyData[m_maxControlState * execCmdConfirm           + cancelCmdConfirm ]         = PolicyResult(PR_FAILED,   deviceControlException ,   "from execCmdConfirm to cancelCmdConfirm ");
		policyData[m_maxControlState * execCmdConfirmTimeout    + cancelCmdConfirm ]         = PolicyResult(PR_IGNORED,  noControl ,                "from execCmdConfirmTimeout to cancelCmdConfirm ");
		policyData[m_maxControlState * execCmdSuccess           + cancelCmdConfirm ]         = PolicyResult(PR_IGNORED,  noControl ,                "from execCmdSuccess to cancelCmdConfirm ");
		policyData[m_maxControlState * execCmdSuccessTimeout    + cancelCmdConfirm ]         = PolicyResult(PR_IGNORED,  noControl ,                "from execCmdSuccessTimeout to cancelCmdConfirm ");
		policyData[m_maxControlState * cancelCmdWritten         + cancelCmdConfirm ]         = PolicyResult(PR_ACCEPTED, cancelCmdConfirm ,         "from cancelCmdWritten to cancelCmdConfirm ");
		policyData[m_maxControlState * cancelCmdConfirm         + cancelCmdConfirm ]         = PolicyResult(PR_IGNORED,  noControl ,                "from cancelCmdConfirm to cancelCmdConfirm ");
		policyData[m_maxControlState * cancelCmdConfirmTimeout  + cancelCmdConfirm ]         = PolicyResult(PR_IGNORED,  noControl ,                "from cancelCmdConfirmTimeout to cancelCmdConfirm ");
		policyData[m_maxControlState * selectCmdCfmNegative     + cancelCmdConfirm ]         = PolicyResult(PR_IGNORED,  noControl ,                "from selectCmdCfmNegative to cancelCmdConfirm ");
		policyData[m_maxControlState * execCmdCfmNegative       + cancelCmdConfirm ]         = PolicyResult(PR_IGNORED,  noControl ,                "from execCmdCfmNegative to cancelCmdConfirm ");
		policyData[m_maxControlState * cancelCmdCfmNegative     + cancelCmdConfirm ]         = PolicyResult(PR_IGNORED,  noControl ,                "from cancelCmdCfmNegative to cancelCmdConfirm ");
		policyData[m_maxControlState * deviceControlException   + cancelCmdConfirm ]         = PolicyResult(PR_IGNORED,  noControl ,                "from deviceControlException to cancelCmdConfirm ");
		policyData[m_maxControlState * noControl                + cancelCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  cancelCmdConfirmTimeout ,  "from noControl to cancelCmdConfirmTimeout ");
		policyData[m_maxControlState * written                  + cancelCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  cancelCmdConfirmTimeout ,  "from written to cancelCmdConfirmTimeout ");
		policyData[m_maxControlState * pending                  + cancelCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  cancelCmdConfirmTimeout ,  "from pending to cancelCmdConfirmTimeout ");
		policyData[m_maxControlState * conditionalSuccess       + cancelCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  cancelCmdConfirmTimeout ,  "from conditionalSuccess to cancelCmdConfirmTimeout ");
		policyData[m_maxControlState * success                  + cancelCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  cancelCmdConfirmTimeout ,  "from success to cancelCmdConfirmTimeout ");
		policyData[m_maxControlState * failed                   + cancelCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  cancelCmdConfirmTimeout ,  "from failed to cancelCmdConfirmTimeout ");
		policyData[m_maxControlState * LCC_failed               + cancelCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  cancelCmdConfirmTimeout ,  "from LCC_failed to cancelCmdConfirmTimeout ");
		policyData[m_maxControlState * RCC_failed               + cancelCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  cancelCmdConfirmTimeout ,  "from RCC_failed to cancelCmdConfirmTimeout ");
		policyData[m_maxControlState * comms_failed             + cancelCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  cancelCmdConfirmTimeout ,  "from comms_failed to cancelCmdConfirmTimeout ");
		policyData[m_maxControlState * selectCmdWritten         + cancelCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  cancelCmdConfirmTimeout ,  "from selectCmdWritten to cancelCmdConfirmTimeout ");
		policyData[m_maxControlState * selectCmdConfirm         + cancelCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  cancelCmdConfirmTimeout ,  "from selectCmdConfirm to cancelCmdConfirmTimeout ");
		policyData[m_maxControlState * selectCmdConfirmTimeout  + cancelCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  cancelCmdConfirmTimeout ,  "from selectCmdConfirmTimeout to cancelCmdConfirmTimeout ");
		policyData[m_maxControlState * operateCmdTimeout        + cancelCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  cancelCmdConfirmTimeout ,  "from operateCmdTimeout to cancelCmdConfirmTimeout ");
		policyData[m_maxControlState * execCmdWritten           + cancelCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  cancelCmdConfirmTimeout ,  "from execCmdWritten to cancelCmdConfirmTimeout ");
		policyData[m_maxControlState * execCmdConfirm           + cancelCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  cancelCmdConfirmTimeout ,  "from execCmdConfirm to cancelCmdConfirmTimeout ");
		policyData[m_maxControlState * execCmdConfirmTimeout    + cancelCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  cancelCmdConfirmTimeout ,  "from execCmdConfirmTimeout to cancelCmdConfirmTimeout ");
		policyData[m_maxControlState * execCmdSuccess           + cancelCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  cancelCmdConfirmTimeout ,  "from execCmdSuccess to cancelCmdConfirmTimeout ");
		policyData[m_maxControlState * execCmdSuccessTimeout    + cancelCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  cancelCmdConfirmTimeout ,  "from execCmdSuccessTimeout to cancelCmdConfirmTimeout ");
		policyData[m_maxControlState * cancelCmdWritten         + cancelCmdConfirmTimeout ]  = PolicyResult(PR_ACCEPTED, cancelCmdConfirmTimeout ,  "from cancelCmdWritten to cancelCmdConfirmTimeout ");
		policyData[m_maxControlState * cancelCmdConfirm         + cancelCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  cancelCmdConfirmTimeout ,  "from cancelCmdConfirm to cancelCmdConfirmTimeout ");
		policyData[m_maxControlState * cancelCmdConfirmTimeout  + cancelCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  cancelCmdConfirmTimeout ,  "from cancelCmdConfirmTimeout to cancelCmdConfirmTimeout ");
		policyData[m_maxControlState * selectCmdCfmNegative     + cancelCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  cancelCmdConfirmTimeout ,  "from selectCmdCfmNegative to cancelCmdConfirmTimeout ");
		policyData[m_maxControlState * execCmdCfmNegative       + cancelCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  cancelCmdConfirmTimeout ,  "from execCmdCfmNegative to cancelCmdConfirmTimeout ");
		policyData[m_maxControlState * cancelCmdCfmNegative     + cancelCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  cancelCmdConfirmTimeout ,  "from cancelCmdCfmNegative to cancelCmdConfirmTimeout ");
		policyData[m_maxControlState * deviceControlException   + cancelCmdConfirmTimeout ]  = PolicyResult(PR_IGNORED,  cancelCmdConfirmTimeout ,  "from deviceControlException to cancelCmdConfirmTimeout ");
		policyData[m_maxControlState * noControl                + selectCmdCfmNegative ]     = PolicyResult(PR_IGNORED,  noControl ,                "from noControl to selectCmdCfmNegative ");
		policyData[m_maxControlState * written                  + selectCmdCfmNegative ]     = PolicyResult(PR_FAILED,   deviceControlException ,   "from written to selectCmdCfmNegative ");
		policyData[m_maxControlState * pending                  + selectCmdCfmNegative ]     = PolicyResult(PR_FAILED,   deviceControlException ,   "from pending to selectCmdCfmNegative ");
		policyData[m_maxControlState * conditionalSuccess       + selectCmdCfmNegative ]     = PolicyResult(PR_IGNORED,  noControl ,                "from conditionalSuccess to selectCmdCfmNegative ");
		policyData[m_maxControlState * success                  + selectCmdCfmNegative ]     = PolicyResult(PR_IGNORED,  noControl ,                "from success to selectCmdCfmNegative ");
		policyData[m_maxControlState * failed                   + selectCmdCfmNegative ]     = PolicyResult(PR_IGNORED,  noControl ,                "from failed to selectCmdCfmNegative ");
		policyData[m_maxControlState * LCC_failed               + selectCmdCfmNegative ]     = PolicyResult(PR_IGNORED,  noControl ,                "from LCC_failed to selectCmdCfmNegative ");
		policyData[m_maxControlState * RCC_failed               + selectCmdCfmNegative ]     = PolicyResult(PR_IGNORED,  noControl ,                "from RCC_failed to selectCmdCfmNegative ");
		policyData[m_maxControlState * comms_failed             + selectCmdCfmNegative ]     = PolicyResult(PR_IGNORED,  noControl ,                "from comms_failed to selectCmdCfmNegative ");
		policyData[m_maxControlState * selectCmdWritten         + selectCmdCfmNegative ]     = PolicyResult(PR_FAILED,   selectCmdCfmNegative ,     "from selectCmdWritten to selectCmdCfmNegative ");
		policyData[m_maxControlState * selectCmdConfirm         + selectCmdCfmNegative ]     = PolicyResult(PR_FAILED,   deviceControlException ,   "from selectCmdConfirm to selectCmdCfmNegative ");
		policyData[m_maxControlState * selectCmdConfirmTimeout  + selectCmdCfmNegative ]     = PolicyResult(PR_IGNORED,  noControl ,                "from selectCmdConfirmTimeout to selectCmdCfmNegative ");
		policyData[m_maxControlState * operateCmdTimeout        + selectCmdCfmNegative ]     = PolicyResult(PR_IGNORED,  noControl ,                "from operateCmdTimeout to selectCmdCfmNegative ");
		policyData[m_maxControlState * execCmdWritten           + selectCmdCfmNegative ]     = PolicyResult(PR_FAILED,   deviceControlException ,   "from execCmdWritten to selectCmdCfmNegative ");
		policyData[m_maxControlState * execCmdConfirm           + selectCmdCfmNegative ]     = PolicyResult(PR_FAILED,   deviceControlException ,   "from execCmdConfirm to selectCmdCfmNegative ");
		policyData[m_maxControlState * execCmdConfirmTimeout    + selectCmdCfmNegative ]     = PolicyResult(PR_IGNORED,  noControl ,                "from execCmdConfirmTimeout to selectCmdCfmNegative ");
		policyData[m_maxControlState * execCmdSuccess           + selectCmdCfmNegative ]     = PolicyResult(PR_IGNORED,  noControl ,                "from execCmdSuccess to selectCmdCfmNegative ");
		policyData[m_maxControlState * execCmdSuccessTimeout    + selectCmdCfmNegative ]     = PolicyResult(PR_IGNORED,  noControl ,                "from execCmdSuccessTimeout to selectCmdCfmNegative ");
		policyData[m_maxControlState * cancelCmdWritten         + selectCmdCfmNegative ]     = PolicyResult(PR_FAILED,   deviceControlException ,   "from cancelCmdWritten to selectCmdCfmNegative ");
		policyData[m_maxControlState * cancelCmdConfirm         + selectCmdCfmNegative ]     = PolicyResult(PR_IGNORED,  noControl ,                "from cancelCmdConfirm to selectCmdCfmNegative ");
		policyData[m_maxControlState * cancelCmdConfirmTimeout  + selectCmdCfmNegative ]     = PolicyResult(PR_IGNORED,  noControl ,                "from cancelCmdConfirmTimeout to selectCmdCfmNegative ");
		policyData[m_maxControlState * selectCmdCfmNegative     + selectCmdCfmNegative ]     = PolicyResult(PR_IGNORED,  noControl ,                "from selectCmdCfmNegative to selectCmdCfmNegative ");
		policyData[m_maxControlState * execCmdCfmNegative       + selectCmdCfmNegative ]     = PolicyResult(PR_IGNORED,  noControl ,                "from execCmdCfmNegative to selectCmdCfmNegative ");
		policyData[m_maxControlState * cancelCmdCfmNegative     + selectCmdCfmNegative ]     = PolicyResult(PR_IGNORED,  noControl ,                "from cancelCmdCfmNegative to selectCmdCfmNegative ");
		policyData[m_maxControlState * deviceControlException   + selectCmdCfmNegative ]     = PolicyResult(PR_IGNORED,  noControl ,                "from deviceControlException to selectCmdCfmNegative ");
		policyData[m_maxControlState * noControl                + execCmdCfmNegative ]       = PolicyResult(PR_IGNORED,  noControl ,                "from noControl to execCmdCfmNegative ");
		policyData[m_maxControlState * written                  + execCmdCfmNegative ]       = PolicyResult(PR_FAILED,   deviceControlException ,   "from written to execCmdCfmNegative ");
		policyData[m_maxControlState * pending                  + execCmdCfmNegative ]       = PolicyResult(PR_FAILED,   deviceControlException ,   "from pending to execCmdCfmNegative ");
		policyData[m_maxControlState * conditionalSuccess       + execCmdCfmNegative ]       = PolicyResult(PR_IGNORED,  noControl ,                "from conditionalSuccess to execCmdCfmNegative ");
		policyData[m_maxControlState * success                  + execCmdCfmNegative ]       = PolicyResult(PR_IGNORED,  noControl ,                "from success to execCmdCfmNegative ");
		policyData[m_maxControlState * failed                   + execCmdCfmNegative ]       = PolicyResult(PR_IGNORED,  noControl ,                "from failed to execCmdCfmNegative ");
		policyData[m_maxControlState * LCC_failed               + execCmdCfmNegative ]       = PolicyResult(PR_IGNORED,  noControl ,                "from LCC_failed to execCmdCfmNegative ");
		policyData[m_maxControlState * RCC_failed               + execCmdCfmNegative ]       = PolicyResult(PR_IGNORED,  noControl ,                "from RCC_failed to execCmdCfmNegative ");
		policyData[m_maxControlState * comms_failed             + execCmdCfmNegative ]       = PolicyResult(PR_IGNORED,  noControl ,                "from comms_failed to execCmdCfmNegative ");
		policyData[m_maxControlState * selectCmdWritten         + execCmdCfmNegative ]       = PolicyResult(PR_FAILED,   deviceControlException ,   "from selectCmdWritten to execCmdCfmNegative ");
		policyData[m_maxControlState * selectCmdConfirm         + execCmdCfmNegative ]       = PolicyResult(PR_FAILED,   deviceControlException ,   "from selectCmdConfirm to execCmdCfmNegative ");
		policyData[m_maxControlState * selectCmdConfirmTimeout  + execCmdCfmNegative ]       = PolicyResult(PR_IGNORED,  noControl ,                "from selectCmdConfirmTimeout to execCmdCfmNegative ");
		policyData[m_maxControlState * operateCmdTimeout        + execCmdCfmNegative ]       = PolicyResult(PR_IGNORED,  noControl ,                "from operateCmdTimeout to execCmdCfmNegative ");
		policyData[m_maxControlState * execCmdWritten           + execCmdCfmNegative ]       = PolicyResult(PR_FAILED,   execCmdCfmNegative ,       "from execCmdWritten to execCmdCfmNegative ");
		policyData[m_maxControlState * execCmdConfirm           + execCmdCfmNegative ]       = PolicyResult(PR_FAILED,   deviceControlException ,   "from execCmdConfirm to execCmdCfmNegative ");
		policyData[m_maxControlState * execCmdConfirmTimeout    + execCmdCfmNegative ]       = PolicyResult(PR_IGNORED,  noControl ,                "from execCmdConfirmTimeout to execCmdCfmNegative ");
		policyData[m_maxControlState * execCmdSuccess           + execCmdCfmNegative ]       = PolicyResult(PR_IGNORED,  noControl ,                "from execCmdSuccess to execCmdCfmNegative ");
		policyData[m_maxControlState * execCmdSuccessTimeout    + execCmdCfmNegative ]       = PolicyResult(PR_IGNORED,  noControl ,                "from execCmdSuccessTimeout to execCmdCfmNegative ");
		policyData[m_maxControlState * cancelCmdWritten         + execCmdCfmNegative ]       = PolicyResult(PR_FAILED,   deviceControlException ,   "from cancelCmdWritten to execCmdCfmNegative ");
		policyData[m_maxControlState * cancelCmdConfirm         + execCmdCfmNegative ]       = PolicyResult(PR_IGNORED,  noControl ,                "from cancelCmdConfirm to execCmdCfmNegative ");
		policyData[m_maxControlState * cancelCmdConfirmTimeout  + execCmdCfmNegative ]       = PolicyResult(PR_IGNORED,  noControl ,                "from cancelCmdConfirmTimeout to execCmdCfmNegative ");
		policyData[m_maxControlState * selectCmdCfmNegative     + execCmdCfmNegative ]       = PolicyResult(PR_IGNORED,  noControl ,                "from selectCmdCfmNegative to execCmdCfmNegative ");
		policyData[m_maxControlState * execCmdCfmNegative       + execCmdCfmNegative ]       = PolicyResult(PR_IGNORED,  noControl ,                "from execCmdCfmNegative to execCmdCfmNegative ");
		policyData[m_maxControlState * cancelCmdCfmNegative     + execCmdCfmNegative ]       = PolicyResult(PR_IGNORED,  noControl ,                "from cancelCmdCfmNegative to execCmdCfmNegative ");
		policyData[m_maxControlState * deviceControlException   + execCmdCfmNegative ]       = PolicyResult(PR_IGNORED,  noControl ,                "from deviceControlException to execCmdCfmNegative ");
		policyData[m_maxControlState * noControl                + cancelCmdCfmNegative ]     = PolicyResult(PR_IGNORED,  noControl ,                "from noControl to cancelCmdCfmNegative ");
		policyData[m_maxControlState * written                  + cancelCmdCfmNegative ]     = PolicyResult(PR_FAILED,   deviceControlException ,   "from written to cancelCmdCfmNegative ");
		policyData[m_maxControlState * pending                  + cancelCmdCfmNegative ]     = PolicyResult(PR_FAILED,   deviceControlException ,   "from pending to cancelCmdCfmNegative ");
		policyData[m_maxControlState * conditionalSuccess       + cancelCmdCfmNegative ]     = PolicyResult(PR_IGNORED,  noControl ,                "from conditionalSuccess to cancelCmdCfmNegative ");
		policyData[m_maxControlState * success                  + cancelCmdCfmNegative ]     = PolicyResult(PR_IGNORED,  noControl ,                "from success to cancelCmdCfmNegative ");
		policyData[m_maxControlState * failed                   + cancelCmdCfmNegative ]     = PolicyResult(PR_IGNORED,  noControl ,                "from failed to cancelCmdCfmNegative ");
		policyData[m_maxControlState * LCC_failed               + cancelCmdCfmNegative ]     = PolicyResult(PR_IGNORED,  noControl ,                "from LCC_failed to cancelCmdCfmNegative ");
		policyData[m_maxControlState * RCC_failed               + cancelCmdCfmNegative ]     = PolicyResult(PR_IGNORED,  noControl ,                "from RCC_failed to cancelCmdCfmNegative ");
		policyData[m_maxControlState * comms_failed             + cancelCmdCfmNegative ]     = PolicyResult(PR_IGNORED,  noControl ,                "from comms_failed to cancelCmdCfmNegative ");
		policyData[m_maxControlState * selectCmdWritten         + cancelCmdCfmNegative ]     = PolicyResult(PR_FAILED,   deviceControlException ,   "from selectCmdWritten to cancelCmdCfmNegative ");
		policyData[m_maxControlState * selectCmdConfirm         + cancelCmdCfmNegative ]     = PolicyResult(PR_FAILED,   deviceControlException ,   "from selectCmdConfirm to cancelCmdCfmNegative ");
		policyData[m_maxControlState * selectCmdConfirmTimeout  + cancelCmdCfmNegative ]     = PolicyResult(PR_IGNORED,  noControl ,                "from selectCmdConfirmTimeout to cancelCmdCfmNegative ");
		policyData[m_maxControlState * operateCmdTimeout        + cancelCmdCfmNegative ]     = PolicyResult(PR_IGNORED,  noControl ,                "from operateCmdTimeout to cancelCmdCfmNegative ");
		policyData[m_maxControlState * execCmdWritten           + cancelCmdCfmNegative ]     = PolicyResult(PR_FAILED,   deviceControlException ,   "from execCmdWritten to cancelCmdCfmNegative ");
		policyData[m_maxControlState * execCmdConfirm           + cancelCmdCfmNegative ]     = PolicyResult(PR_FAILED,   deviceControlException ,   "from execCmdConfirm to cancelCmdCfmNegative ");
		policyData[m_maxControlState * execCmdConfirmTimeout    + cancelCmdCfmNegative ]     = PolicyResult(PR_IGNORED,  noControl ,                "from execCmdConfirmTimeout to cancelCmdCfmNegative ");
		policyData[m_maxControlState * execCmdSuccess           + cancelCmdCfmNegative ]     = PolicyResult(PR_IGNORED,  noControl ,                "from execCmdSuccess to cancelCmdCfmNegative ");
		policyData[m_maxControlState * execCmdSuccessTimeout    + cancelCmdCfmNegative ]     = PolicyResult(PR_IGNORED,  noControl ,                "from execCmdSuccessTimeout to cancelCmdCfmNegative ");
		policyData[m_maxControlState * cancelCmdWritten         + cancelCmdCfmNegative ]     = PolicyResult(PR_ACCEPTED, cancelCmdCfmNegative ,     "from cancelCmdWritten to cancelCmdCfmNegative ");
		policyData[m_maxControlState * cancelCmdConfirm         + cancelCmdCfmNegative ]     = PolicyResult(PR_IGNORED,  noControl ,                "from cancelCmdConfirm to cancelCmdCfmNegative ");
		policyData[m_maxControlState * cancelCmdConfirmTimeout  + cancelCmdCfmNegative ]     = PolicyResult(PR_IGNORED,  noControl ,                "from cancelCmdConfirmTimeout to cancelCmdCfmNegative ");
		policyData[m_maxControlState * selectCmdCfmNegative     + cancelCmdCfmNegative ]     = PolicyResult(PR_IGNORED,  noControl ,                "from selectCmdCfmNegative to cancelCmdCfmNegative ");
		policyData[m_maxControlState * execCmdCfmNegative       + cancelCmdCfmNegative ]     = PolicyResult(PR_IGNORED,  noControl ,                "from execCmdCfmNegative to cancelCmdCfmNegative ");
		policyData[m_maxControlState * cancelCmdCfmNegative     + cancelCmdCfmNegative ]     = PolicyResult(PR_IGNORED,  noControl ,                "from cancelCmdCfmNegative to cancelCmdCfmNegative ");
		policyData[m_maxControlState * deviceControlException   + cancelCmdCfmNegative ]     = PolicyResult(PR_IGNORED,  noControl ,                "from deviceControlException to cancelCmdCfmNegative ");
		policyData[m_maxControlState * noControl                + deviceControlException ]   = PolicyResult(PR_IGNORED,  deviceControlException ,   "from noControl to deviceControlException ");
		policyData[m_maxControlState * written                  + deviceControlException ]   = PolicyResult(PR_FAILED,   deviceControlException ,   "from written to deviceControlException ");
		policyData[m_maxControlState * pending                  + deviceControlException ]   = PolicyResult(PR_FAILED,   deviceControlException ,   "from pending to deviceControlException ");
		policyData[m_maxControlState * conditionalSuccess       + deviceControlException ]   = PolicyResult(PR_IGNORED,  deviceControlException ,   "from conditionalSuccess to deviceControlException ");
		policyData[m_maxControlState * success                  + deviceControlException ]   = PolicyResult(PR_IGNORED,  deviceControlException ,   "from success to deviceControlException ");
		policyData[m_maxControlState * failed                   + deviceControlException ]   = PolicyResult(PR_IGNORED,  deviceControlException ,   "from failed to deviceControlException ");
		policyData[m_maxControlState * LCC_failed               + deviceControlException ]   = PolicyResult(PR_IGNORED,  deviceControlException ,   "from LCC_failed to deviceControlException ");
		policyData[m_maxControlState * RCC_failed               + deviceControlException ]   = PolicyResult(PR_IGNORED,  deviceControlException ,   "from RCC_failed to deviceControlException ");
		policyData[m_maxControlState * comms_failed             + deviceControlException ]   = PolicyResult(PR_IGNORED,  deviceControlException ,   "from comms_failed to deviceControlException ");
		policyData[m_maxControlState * selectCmdWritten         + deviceControlException ]   = PolicyResult(PR_FAILED,   deviceControlException ,   "from selectCmdWritten to deviceControlException ");
		policyData[m_maxControlState * selectCmdConfirm         + deviceControlException ]   = PolicyResult(PR_FAILED,   deviceControlException ,   "from selectCmdConfirm to deviceControlException ");
		policyData[m_maxControlState * selectCmdConfirmTimeout  + deviceControlException ]   = PolicyResult(PR_IGNORED,  deviceControlException ,   "from selectCmdConfirmTimeout to deviceControlException ");
		policyData[m_maxControlState * operateCmdTimeout        + deviceControlException ]   = PolicyResult(PR_IGNORED,  deviceControlException ,   "from operateCmdTimeout to deviceControlException ");
		policyData[m_maxControlState * execCmdWritten           + deviceControlException ]   = PolicyResult(PR_FAILED,   deviceControlException ,   "from execCmdWritten to deviceControlException ");
		policyData[m_maxControlState * execCmdConfirm           + deviceControlException ]   = PolicyResult(PR_FAILED,   deviceControlException ,   "from execCmdConfirm to deviceControlException ");
		policyData[m_maxControlState * execCmdConfirmTimeout    + deviceControlException ]   = PolicyResult(PR_IGNORED,  deviceControlException ,   "from execCmdConfirmTimeout to deviceControlException ");
		policyData[m_maxControlState * execCmdSuccess           + deviceControlException ]   = PolicyResult(PR_FAILED,   deviceControlException ,   "from execCmdSuccess to deviceControlException ");
		policyData[m_maxControlState * execCmdSuccessTimeout    + deviceControlException ]   = PolicyResult(PR_IGNORED,  deviceControlException ,   "from execCmdSuccessTimeout to deviceControlException ");
		policyData[m_maxControlState * cancelCmdWritten         + deviceControlException ]   = PolicyResult(PR_FAILED,   deviceControlException ,   "from cancelCmdWritten to deviceControlException ");
		policyData[m_maxControlState * cancelCmdConfirm         + deviceControlException ]   = PolicyResult(PR_IGNORED,  deviceControlException ,   "from cancelCmdConfirm to deviceControlException ");
		policyData[m_maxControlState * cancelCmdConfirmTimeout  + deviceControlException ]   = PolicyResult(PR_IGNORED,  deviceControlException ,   "from cancelCmdConfirmTimeout to deviceControlException ");
		policyData[m_maxControlState * selectCmdCfmNegative     + deviceControlException ]   = PolicyResult(PR_IGNORED,  deviceControlException ,   "from selectCmdCfmNegative to deviceControlException ");
		policyData[m_maxControlState * execCmdCfmNegative       + deviceControlException ]   = PolicyResult(PR_IGNORED,  deviceControlException ,   "from execCmdCfmNegative to deviceControlException ");
		policyData[m_maxControlState * cancelCmdCfmNegative     + deviceControlException ]   = PolicyResult(PR_IGNORED,  deviceControlException ,   "from cancelCmdCfmNegative to deviceControlException ");
		policyData[m_maxControlState * deviceControlException   + deviceControlException ]   = PolicyResult(PR_IGNORED,  deviceControlException ,   "from deviceControlException to deviceControlException ");


			m_policyData = policyData;
			
			LOG_GENERIC( SourceInfo, TA_Base_Core::DebugUtil::DebugInfo,
				"finished to init PScadaCommandPolicy, max control command is %d", m_maxControlState - 1);
        }
	}

};
