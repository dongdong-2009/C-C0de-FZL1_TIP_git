// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// This file is generated by the sql header file tool sqlgen.exe. Please do 
// not modify this file directly. Change the tool instead.
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 


#ifndef SQL_H          
#define SQL_H           
#if defined(_UNICODE) || defined(UNICODE)       
typedef wchar_t  CharT;	    
#else					 
typedef char     CharT;		
#endif						

static const CharT *s_pzSQLArray[]=	
{   

//[0][queue_sys_table]
//[0][queue_sys_table]
/*AQSYSMTABLE_SELECT_4050*//*0*/(""),
/*1*/("no_Oracle_sql"),
/*2*/("SELECT Q_NAME, SUB_COUNT, PAYLOAD_TYPE FROM aq_sys_queue_m"),
/*AQSYSSTABLE_SELECT_4051*//*3*/(""),
/*4*/("no_Oracle_sql"),
/*5*/("SELECT SUB_ID, SUB_NAME, SUB_ADDRESS FROM %s"),
/*AQSYSSTABLE_SELECT_4052*//*6*/(""),
/*7*/("no_Oracle_sql"),
/*8*/("SELECT SUB_ID, SUB_NAME, SUB_ADDRESS FROM %s WHERE SUB_ID NOT IN ( %s )"),
/*AQSYSDEQJOB_INSERT_4053*//*9*/(""),
/*10*/("no_Oracle_sql"),
/*11*/("CALL %s('%s')"),
//[1][oracle_V_DATABASE]
//[1][oracle_V_DATABASE]
/*ORACLESYSTABLE_SELECT_5000*//*12*/(""),
/*13*/("SELECT   NAME   FROM   V$DATABASE"),
/*14*/("SELECT DATABASE() AS NAME"),
//[2][oracle_recipient]
//[2][oracle_recipient]
/*ORACLERECIPIENT_SELECT_5001*//*15*/(""),
/*16*/("select name from recipient_info where (address like '%s%%') and (upper(NAME) != (SELECT   NAME   FROM   V$DATABASE))"),
/*17*/("select name from recipient_info where (address like '%s%%') and (upper(NAME) != upper(database()))"),
//[3][db_server_port]
//[3][db_server_port]
/*DB_GET_SERVER_PORT_5002*//*18*/(""),
/*19*/("select address from recipient_info  where upper(name) = (SELECT   NAME   FROM   V$DATABASE)"),
/*20*/("select address from recipient_info  where upper(name) = upper(database())"),
//[4][db_queue]
//[4][db_queue]
/*DB_GET_QUEUE_TABLENAME_6000*//*21*/(""),
/*22*/("select queue_table from user_queues where name = upper('%s')"),
/*23*/("no_mysql_sql"),
/*DB_GET_AQDATA_TYPE_6001*//*24*/(""),
/*25*/("select t.data_type from user_tab_columns t where t.TABLE_NAME = '%s' and t.COLUMN_NAME='USER_DATA'"),
/*26*/("no_mysql_sql"),
/*DB_GET_AQDATA_TYPE_6002*//*27*/(""),
/*28*/("select t.data_type from user_tab_columns t where t.TABLE_NAME = (select queue_table from user_queues where name = upper('%s')) and t.COLUMN_NAME='USER_DATA'"),
/*29*/("no_mysql_sql"),
//[5][AQ_ENQ_DUPLICATE_CHECK]
/*ENQ_SQL_SUPDATE_GET_MSGSID_7000*//*30*/("select SRV_ID,MSG_SID from AQ_ENQ_DUPLICATE_CHECK where LOCATION='%s' and Q_NAME='%s' for update"),
/*31*/(""),
/*32*/(""),
/*ENQ_SQL_UPDATE_SET_NEWMSGSID_7001*//*33*/("update AQ_ENQ_DUPLICATE_CHECK set MSG_SID=%s where LOCATION='%s' and SRV_ID=%s and Q_NAME='%s'"),
/*34*/(""),
/*35*/(""),
/*ENQ_SQL_INSERT_ADD_MSGSID_7004*//*36*/("insert into AQ_ENQ_DUPLICATE_CHECK(LOCATION, SRV_ID, Q_NAME, MSG_SID) values(UPPER('%s'), %s, UPPER('%s'), %s)"),
/*37*/(""),
/*38*/(""),
//[5][AQ_ENQ_DUPLICATE_CHECK]
/*ENQ_SQL_INSERT_ADD_MSGSID_7002*//*39*/(""),
/*40*/("insert into AQ_ENQ_DUPLICATE_CHECK(PKEY, LOCATION, SRV_ID, Q_NAME, MSG_SID) values((select nvl(max(PKEY),0)+1 from AQ_ENQ_DUPLICATE_CHECK), UPPER('%s'), %s, UPPER('%s'), %s)"),
/*41*/("insert into AQ_ENQ_DUPLICATE_CHECK(PKEY, LOCATION, SRV_ID, Q_NAME, MSG_SID) values(IF((select max(PKEY)+1 from AQ_ENQ_DUPLICATE_CHECK a) IS NULL, 1, (select max(PKEY)+1 from AQ_ENQ_DUPLICATE_CHECK a)), UPPER('%s'), %s, UPPER('%s'), %s)"),
/*ENQ_SQL_INSERT_ADD_MSGSID_7003*//*42*/(""),
/*43*/("no_Oracle_sql"),
/*44*/("insert into aq_sys_queue_e(q_name, msg_sid, msgid, priority, enq_time, user_data) values ('%s', %s, '%s', %s, sysdate(), '%s');"),
//[6][AQ_DEQ_TOKEN_CHECK]
//[6][AQ_DEQ_TOKEN_CHECK]
/*DEQ_SQL_SELECT_GET_DBTIMENOW_7010*//*45*/(""),
/*46*/("select current_timestamp as DB_NOW_TIME from dual"),
/*47*/("no_mysql_sql"),
/*DEQ_SQL_SELECT_GET_UPDATETIME_7011*//*48*/(""),
/*49*/("select SRV_ID, UPD_TIME from AQ_DEQ_TOKEN_CHECK where LOCATION = '%s' and Q_NAME = '%s'"),
/*50*/("no_mysql_sql"),
/*DEQ_SQL_UPDATE_SET_UPDATETIME_7012*//*51*/(""),
/*52*/("update AQ_DEQ_TOKEN_CHECK set UPD_TIME = current_timestamp where LOCATION='%s' and SRV_ID=%s and Q_NAME = '%s'"),
/*53*/("no_mysql_sql"),
/*DEQ_SQL_UPDATE_SET_TIMEANDSRVID_7013*//*54*/(""),
/*55*/("update AQ_DEQ_TOKEN_CHECK set UPD_TIME = current_timestamp,SRV_ID=%s where LOCATION = '%s' and Q_NAME = '%s'"),
/*56*/("no_mysql_sql"),
/*DEQ_SQL_INSERT_ADD_UPDATETIME_7014*//*57*/(""),
/*58*/("insert into AQ_DEQ_TOKEN_CHECK (PKEY, LOCATION, SRV_ID, Q_NAME, UPD_TIME) values((select nvl(max(PKEY),0)+1 from AQ_DEQ_TOKEN_CHECK), UPPER('%s'), %s, UPPER('%s'), current_timestamp)"),
/*59*/("no_mysql_sql"),
/*DEQ_SQL_SELECT_GET_LOCKUPDATETIME_7015*//*60*/(""),
/*61*/("select UPD_TIME from AQ_DEQ_TOKEN_CHECK where  LOCATION = '%s' and Q_NAME='%s' and SRV_ID = %s for update"),
/*62*/("no_mysql_sql"),
/*DEQ_SQL_SELECT_GET_NOTWORKTIME_7016 *//*63*/(""),
/*64*/("select tmp.minutes * 60 + tmp.seconds as NOTWORKTIME from\
 (SELECT substr((current_timestamp-UPD_TIME),instr((current_timestamp-upd_time),' ')+4,2)   minutes,\
 substr((current_timestamp-UPD_TIME),instr((current_timestamp-UPD_TIME),' ')+7,2) seconds,\
 substr((current_timestamp-upd_time),instr((current_timestamp-upd_time),' ')+1,2)         hours,\
 trunc(to_number(substr((current_timestamp-upd_time),1,instr(current_timestamp-upd_time,' '))))  days,\
 trunc(to_number(substr((current_timestamp-upd_time),1,instr(current_timestamp-upd_time,' ')))/7) weeks\
 FROM AQ_DEQ_TOKEN_CHECK where  LOCATION = '%s' and Q_NAME='%s' ) tmp"),
/*65*/("no_mysql_sql"),
/*DEQ_SQL_INSERT_ADD_UPDATETIME_7017*//*66*/(""),
/*67*/("insert into AQ_DEQ_TOKEN_CHECK (LOCATION, SRV_ID, Q_NAME, UPD_TIME) values(UPPER('%s'), %s, UPPER('%s'), current_timestamp)"),
/*68*/("no_mysql_sql"),
/*DEQ_SQL_UPDATE_SET_SRVID_7018*//*69*/(""),
/*70*/("update AQ_DEQ_TOKEN_CHECK set SRV_ID=%s where UPPER(LOCATION) = UPPER('%s') and UPPER(Q_NAME) = UPPER('%s')"),
/*71*/("no_mysql_sql"),
//[7][AQ_TABLE]
//[7][AQ_TABLE]
/*ENQ_SQL_PRC_ENQ_AUDIT_DATA_8001*//*72*/(""),
/*73*/("begin prc_enq_audit_data('%s','%s','%s');end;"),
/*74*/("no_mysql_sql"),
//[8][AQ_SYS_QUEUE_M]
//[8][AQ_SYS_QUEUE_M]
/*AQ_SQL_SElECT_AQSYSQUEUEM_8002*//*75*/(""),
/*76*/("SELECT Q_NAME, ENQ_MODE FROM AQ_SYS_QUEUE_M"),
/*77*/("SELECT Q_NAME, ENQ_MODE FROM AQ_SYS_QUEUE_M"),
}; //static const CharT *s_pzSQLArray[]                    


 #endif//SQL_H           

