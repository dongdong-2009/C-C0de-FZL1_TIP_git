// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.
#ifndef __DatabaseStatusCorbaDef_hh__
#define __DatabaseStatusCorbaDef_hh__

#ifndef __CORBA_H_EXTERNAL_GUARD__
#include <omniORB4/CORBA.h>
#endif

#ifndef  USE_stub_in_nt_dll
# define USE_stub_in_nt_dll_NOT_DEFINED_DatabaseStatusCorbaDef
#endif
#ifndef  USE_core_stub_in_nt_dll
# define USE_core_stub_in_nt_dll_NOT_DEFINED_DatabaseStatusCorbaDef
#endif
#ifndef  USE_dyn_stub_in_nt_dll
# define USE_dyn_stub_in_nt_dll_NOT_DEFINED_DatabaseStatusCorbaDef
#endif






#ifdef USE_stub_in_nt_dll
# ifndef USE_core_stub_in_nt_dll
#  define USE_core_stub_in_nt_dll
# endif
# ifndef USE_dyn_stub_in_nt_dll
#  define USE_dyn_stub_in_nt_dll
# endif
#endif

#ifdef _core_attr
# error "A local CPP macro _core_attr has already been defined."
#else
# ifdef  USE_core_stub_in_nt_dll
#  define _core_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _core_attr
# endif
#endif

#ifdef _dyn_attr
# error "A local CPP macro _dyn_attr has already been defined."
#else
# ifdef  USE_dyn_stub_in_nt_dll
#  define _dyn_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _dyn_attr
# endif
#endif





_CORBA_MODULE TA_Base_Bus

_CORBA_MODULE_BEG

#ifndef __TA__Base__Bus_mDatabaseStatusCorbaDef__
#define __TA__Base__Bus_mDatabaseStatusCorbaDef__

  class DatabaseStatusCorbaDef;
  class _objref_DatabaseStatusCorbaDef;
  class _impl_DatabaseStatusCorbaDef;
  
  typedef _objref_DatabaseStatusCorbaDef* DatabaseStatusCorbaDef_ptr;
  typedef DatabaseStatusCorbaDef_ptr DatabaseStatusCorbaDefRef;

  class DatabaseStatusCorbaDef_Helper {
  public:
    typedef DatabaseStatusCorbaDef_ptr _ptr_type;

    static _ptr_type _nil();
    static _CORBA_Boolean is_nil(_ptr_type);
    static void release(_ptr_type);
    static void duplicate(_ptr_type);
    static void marshalObjRef(_ptr_type, cdrStream&);
    static _ptr_type unmarshalObjRef(cdrStream&);
  };

  typedef _CORBA_ObjRef_Var<_objref_DatabaseStatusCorbaDef, DatabaseStatusCorbaDef_Helper> DatabaseStatusCorbaDef_var;
  typedef _CORBA_ObjRef_OUT_arg<_objref_DatabaseStatusCorbaDef,DatabaseStatusCorbaDef_Helper > DatabaseStatusCorbaDef_out;

#endif

  // interface DatabaseStatusCorbaDef
  class DatabaseStatusCorbaDef {
  public:
    // Declarations for this interface type.
    typedef DatabaseStatusCorbaDef_ptr _ptr_type;
    typedef DatabaseStatusCorbaDef_var _var_type;

    static _ptr_type _duplicate(_ptr_type);
    static _ptr_type _narrow(::CORBA::Object_ptr);
    static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);
    
    static _ptr_type _nil();

    static inline void _marshalObjRef(_ptr_type, cdrStream&);

    static inline _ptr_type _unmarshalObjRef(cdrStream& s) {
      omniObjRef* o = omniObjRef::_unMarshal(_PD_repoId,s);
      if (o)
        return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
      else
        return _nil();
    }

    static _core_attr const char* _PD_repoId;

    // Other IDL defined within this scope.
    enum EState { statusUnknown, statusAvailable, statusUnAvailable /*, __max_EState=0xffffffff */ };
    typedef EState& EState_out;

    static _dyn_attr const ::CORBA::TypeCode_ptr _tc_EState;

    struct DatabaseStatus {
      typedef _CORBA_ConstrType_Variable_Var<DatabaseStatus> _var_type;

      
      EState status;

      ::CORBA::String_member database;

    

      void operator>>= (cdrStream &) const;
      void operator<<= (cdrStream &);
    };

    typedef DatabaseStatus::_var_type DatabaseStatus_var;

    typedef _CORBA_ConstrType_Variable_OUT_arg< DatabaseStatus,DatabaseStatus_var > DatabaseStatus_out;

    static _dyn_attr const ::CORBA::TypeCode_ptr _tc_DatabaseStatus;

  
  };

  class _objref_DatabaseStatusCorbaDef :
    public virtual ::CORBA::Object,
    public virtual omniObjRef
  {
  public:
    

    inline _objref_DatabaseStatusCorbaDef()  { _PR_setobj(0); }  // nil
    _objref_DatabaseStatusCorbaDef(omniIOR*, omniIdentity*);

  protected:
    virtual ~_objref_DatabaseStatusCorbaDef();

    
  private:
    virtual void* _ptrToObjRef(const char*);

    _objref_DatabaseStatusCorbaDef(const _objref_DatabaseStatusCorbaDef&);
    _objref_DatabaseStatusCorbaDef& operator = (const _objref_DatabaseStatusCorbaDef&);
    // not implemented

    friend class DatabaseStatusCorbaDef;
  };

  class _pof_DatabaseStatusCorbaDef : public _OMNI_NS(proxyObjectFactory) {
  public:
    inline _pof_DatabaseStatusCorbaDef() : _OMNI_NS(proxyObjectFactory)(DatabaseStatusCorbaDef::_PD_repoId) {}
    virtual ~_pof_DatabaseStatusCorbaDef();

    virtual omniObjRef* newObjRef(omniIOR*,omniIdentity*);
    virtual _CORBA_Boolean is_a(const char*) const;
  };

  class _impl_DatabaseStatusCorbaDef :
    public virtual omniServant
  {
  public:
    virtual ~_impl_DatabaseStatusCorbaDef();

    
    
  public:  // Really protected, workaround for xlC
    virtual _CORBA_Boolean _dispatch(omniCallHandle&);

  private:
    virtual void* _ptrToInterface(const char*);
    virtual const char* _mostDerivedRepoId();
    
  };


  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_DatabaseStatusCorbaDef;

_CORBA_MODULE_END



_CORBA_MODULE POA_TA_Base_Bus
_CORBA_MODULE_BEG

  class DatabaseStatusCorbaDef :
    public virtual TA_Base_Bus::_impl_DatabaseStatusCorbaDef,
    public virtual ::PortableServer::ServantBase
  {
  public:
    virtual ~DatabaseStatusCorbaDef();

    inline ::TA_Base_Bus::DatabaseStatusCorbaDef_ptr _this() {
      return (::TA_Base_Bus::DatabaseStatusCorbaDef_ptr) _do_this(::TA_Base_Bus::DatabaseStatusCorbaDef::_PD_repoId);
    }
  };

_CORBA_MODULE_END



_CORBA_MODULE OBV_TA_Base_Bus
_CORBA_MODULE_BEG

_CORBA_MODULE_END





#undef _core_attr
#undef _dyn_attr

inline void operator >>=(TA_Base_Bus::DatabaseStatusCorbaDef::EState _e, cdrStream& s) {
  ::operator>>=((::CORBA::ULong)_e, s);
}

inline void operator <<= (TA_Base_Bus::DatabaseStatusCorbaDef::EState& _e, cdrStream& s) {
  ::CORBA::ULong _0RL_e;
  ::operator<<=(_0RL_e,s);
  if (_0RL_e <= TA_Base_Bus::DatabaseStatusCorbaDef::statusUnAvailable) {
    _e = (TA_Base_Bus::DatabaseStatusCorbaDef::EState) _0RL_e;
  }
  else {
    OMNIORB_THROW(MARSHAL,_OMNI_NS(MARSHAL_InvalidEnumValue),
                  (::CORBA::CompletionStatus)s.completion());
  }
}

void operator<<=(::CORBA::Any& _a, TA_Base_Bus::DatabaseStatusCorbaDef::EState _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, TA_Base_Bus::DatabaseStatusCorbaDef::EState& _s);

extern void operator<<=(::CORBA::Any& _a, const TA_Base_Bus::DatabaseStatusCorbaDef::DatabaseStatus& _s);
extern void operator<<=(::CORBA::Any& _a, TA_Base_Bus::DatabaseStatusCorbaDef::DatabaseStatus* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, TA_Base_Bus::DatabaseStatusCorbaDef::DatabaseStatus*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const TA_Base_Bus::DatabaseStatusCorbaDef::DatabaseStatus*& _sp);

void operator<<=(::CORBA::Any& _a, TA_Base_Bus::DatabaseStatusCorbaDef_ptr _s);
void operator<<=(::CORBA::Any& _a, TA_Base_Bus::DatabaseStatusCorbaDef_ptr* _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, TA_Base_Bus::DatabaseStatusCorbaDef_ptr& _s);



inline void
TA_Base_Bus::DatabaseStatusCorbaDef::_marshalObjRef(::TA_Base_Bus::DatabaseStatusCorbaDef_ptr obj, cdrStream& s) {
  omniObjRef::_marshal(obj->_PR_getobj(),s);
}




#ifdef   USE_stub_in_nt_dll_NOT_DEFINED_DatabaseStatusCorbaDef
# undef  USE_stub_in_nt_dll
# undef  USE_stub_in_nt_dll_NOT_DEFINED_DatabaseStatusCorbaDef
#endif
#ifdef   USE_core_stub_in_nt_dll_NOT_DEFINED_DatabaseStatusCorbaDef
# undef  USE_core_stub_in_nt_dll
# undef  USE_core_stub_in_nt_dll_NOT_DEFINED_DatabaseStatusCorbaDef
#endif
#ifdef   USE_dyn_stub_in_nt_dll_NOT_DEFINED_DatabaseStatusCorbaDef
# undef  USE_dyn_stub_in_nt_dll
# undef  USE_dyn_stub_in_nt_dll_NOT_DEFINED_DatabaseStatusCorbaDef
#endif

#endif  // __DatabaseStatusCorbaDef_hh__

