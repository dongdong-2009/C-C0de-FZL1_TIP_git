// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.
#ifndef __QuadCorbaDef_hh__
#define __QuadCorbaDef_hh__

#ifndef __CORBA_H_EXTERNAL_GUARD__
#include <omniORB4/CORBA.h>
#endif

#ifndef  USE_stub_in_nt_dll
# define USE_stub_in_nt_dll_NOT_DEFINED_QuadCorbaDef
#endif
#ifndef  USE_core_stub_in_nt_dll
# define USE_core_stub_in_nt_dll_NOT_DEFINED_QuadCorbaDef
#endif
#ifndef  USE_dyn_stub_in_nt_dll
# define USE_dyn_stub_in_nt_dll_NOT_DEFINED_QuadCorbaDef
#endif



#ifndef __CommonExceptionsCorbaDef_hh_EXTERNAL_GUARD__
#define __CommonExceptionsCorbaDef_hh_EXTERNAL_GUARD__
#include <CommonExceptionsCorbaDef.h>
#endif
#ifndef __ExceptionsCorbaDef_hh_EXTERNAL_GUARD__
#define __ExceptionsCorbaDef_hh_EXTERNAL_GUARD__
#include <ExceptionsCorbaDef.h>
#endif
#ifndef __VideoSwitchResourceCorbaDef_hh_EXTERNAL_GUARD__
#define __VideoSwitchResourceCorbaDef_hh_EXTERNAL_GUARD__
#include <VideoSwitchResourceCorbaDef.h>
#endif
#ifndef __VideoInputCorbaDef_hh_EXTERNAL_GUARD__
#define __VideoInputCorbaDef_hh_EXTERNAL_GUARD__
#include <VideoInputCorbaDef.h>
#endif



#ifdef USE_stub_in_nt_dll
# ifndef USE_core_stub_in_nt_dll
#  define USE_core_stub_in_nt_dll
# endif
# ifndef USE_dyn_stub_in_nt_dll
#  define USE_dyn_stub_in_nt_dll
# endif
#endif

#ifdef _core_attr
# error "A local CPP macro _core_attr has already been defined."
#else
# ifdef  USE_core_stub_in_nt_dll
#  define _core_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _core_attr
# endif
#endif

#ifdef _dyn_attr
# error "A local CPP macro _dyn_attr has already been defined."
#else
# ifdef  USE_dyn_stub_in_nt_dll
#  define _dyn_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _dyn_attr
# endif
#endif





_CORBA_MODULE TA_Base_Bus

_CORBA_MODULE_BEG

#ifndef __TA__Base__Bus_mQuadCorbaDef__
#define __TA__Base__Bus_mQuadCorbaDef__

  class QuadCorbaDef;
  class _objref_QuadCorbaDef;
  class _impl_QuadCorbaDef;
  
  typedef _objref_QuadCorbaDef* QuadCorbaDef_ptr;
  typedef QuadCorbaDef_ptr QuadCorbaDefRef;

  class QuadCorbaDef_Helper {
  public:
    typedef QuadCorbaDef_ptr _ptr_type;

    static _ptr_type _nil();
    static _CORBA_Boolean is_nil(_ptr_type);
    static void release(_ptr_type);
    static void duplicate(_ptr_type);
    static void marshalObjRef(_ptr_type, cdrStream&);
    static _ptr_type unmarshalObjRef(cdrStream&);
  };

  typedef _CORBA_ObjRef_Var<_objref_QuadCorbaDef, QuadCorbaDef_Helper> QuadCorbaDef_var;
  typedef _CORBA_ObjRef_OUT_arg<_objref_QuadCorbaDef,QuadCorbaDef_Helper > QuadCorbaDef_out;

#endif

  // interface QuadCorbaDef
  class QuadCorbaDef {
  public:
    // Declarations for this interface type.
    typedef QuadCorbaDef_ptr _ptr_type;
    typedef QuadCorbaDef_var _var_type;

    static _ptr_type _duplicate(_ptr_type);
    static _ptr_type _narrow(::CORBA::Object_ptr);
    static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);
    
    static _ptr_type _nil();

    static inline void _marshalObjRef(_ptr_type, cdrStream&);

    static inline _ptr_type _unmarshalObjRef(cdrStream& s) {
      omniObjRef* o = omniObjRef::_unMarshal(_PD_repoId,s);
      if (o)
        return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
      else
        return _nil();
    }

    static _core_attr const char* _PD_repoId;

    // Other IDL defined within this scope.
    struct QuadState {
      typedef _CORBA_ConstrType_Fix_Var<QuadState> _var_type;

      
      ::CORBA::ULong topLeftVideoInputKey;

      ::CORBA::ULong topRightVideoInputKey;

      ::CORBA::ULong bottomLeftVideoInputKey;

      ::CORBA::ULong bottomRightVideoInputKey;

    

      void operator>>= (cdrStream &) const;
      void operator<<= (cdrStream &);
    };

    typedef QuadState::_var_type QuadState_var;

    typedef QuadState& QuadState_out;

    static _dyn_attr const ::CORBA::TypeCode_ptr _tc_QuadState;

    enum EQuadSegment { TopLeft, TopRight, BottomLeft, BottomRight /*, __max_EQuadSegment=0xffffffff */ };
    typedef EQuadSegment& EQuadSegment_out;

    static _dyn_attr const ::CORBA::TypeCode_ptr _tc_EQuadSegment;

  
  };

  class _objref_QuadCorbaDef :
    public virtual _objref_VideoInputCorbaDef
  {
  public:
    QuadCorbaDef::QuadState getQuadState();
    ::CORBA::Boolean areInputsSwitchable();
    void requestSwitchOfInput(::TA_Base_Bus::QuadCorbaDef::EQuadSegment segment, ::CORBA::ULong videoInputEntityKey, const char* sessionId, ::CORBA::Boolean isDemand);
    void requestSwitchOfInputs(::CORBA::ULong topLeftVideoInputEntityKey, ::CORBA::ULong topRightVideoInputEntityKey, ::CORBA::ULong bottomLeftVideoInputEntityKey, ::CORBA::ULong bottomRightVideoInputEntityKey, const char* sessionId, ::CORBA::Boolean isDemand);
    void setQuadDescription(const char* newDescription, const char* sessionId);

    inline _objref_QuadCorbaDef()  { _PR_setobj(0); }  // nil
    _objref_QuadCorbaDef(omniIOR*, omniIdentity*);

  protected:
    virtual ~_objref_QuadCorbaDef();

    
  private:
    virtual void* _ptrToObjRef(const char*);

    _objref_QuadCorbaDef(const _objref_QuadCorbaDef&);
    _objref_QuadCorbaDef& operator = (const _objref_QuadCorbaDef&);
    // not implemented

    friend class QuadCorbaDef;
  };

  class _pof_QuadCorbaDef : public _OMNI_NS(proxyObjectFactory) {
  public:
    inline _pof_QuadCorbaDef() : _OMNI_NS(proxyObjectFactory)(QuadCorbaDef::_PD_repoId) {}
    virtual ~_pof_QuadCorbaDef();

    virtual omniObjRef* newObjRef(omniIOR*,omniIdentity*);
    virtual _CORBA_Boolean is_a(const char*) const;
  };

  class _impl_QuadCorbaDef :
    public virtual _impl_VideoInputCorbaDef
  {
  public:
    virtual ~_impl_QuadCorbaDef();

    virtual QuadCorbaDef::QuadState getQuadState() = 0;
    virtual ::CORBA::Boolean areInputsSwitchable() = 0;
    virtual void requestSwitchOfInput(::TA_Base_Bus::QuadCorbaDef::EQuadSegment segment, ::CORBA::ULong videoInputEntityKey, const char* sessionId, ::CORBA::Boolean isDemand) = 0;
    virtual void requestSwitchOfInputs(::CORBA::ULong topLeftVideoInputEntityKey, ::CORBA::ULong topRightVideoInputEntityKey, ::CORBA::ULong bottomLeftVideoInputEntityKey, ::CORBA::ULong bottomRightVideoInputEntityKey, const char* sessionId, ::CORBA::Boolean isDemand) = 0;
    virtual void setQuadDescription(const char* newDescription, const char* sessionId) = 0;
    
  public:  // Really protected, workaround for xlC
    virtual _CORBA_Boolean _dispatch(omniCallHandle&);

  private:
    virtual void* _ptrToInterface(const char*);
    virtual const char* _mostDerivedRepoId();
    
  };


  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_QuadCorbaDef;

_CORBA_MODULE_END



_CORBA_MODULE POA_TA_Base_Bus
_CORBA_MODULE_BEG

  class QuadCorbaDef :
    public virtual TA_Base_Bus::_impl_QuadCorbaDef,
    public virtual VideoInputCorbaDef
  {
  public:
    virtual ~QuadCorbaDef();

    inline ::TA_Base_Bus::QuadCorbaDef_ptr _this() {
      return (::TA_Base_Bus::QuadCorbaDef_ptr) _do_this(::TA_Base_Bus::QuadCorbaDef::_PD_repoId);
    }
  };

_CORBA_MODULE_END



_CORBA_MODULE OBV_TA_Base_Bus
_CORBA_MODULE_BEG

_CORBA_MODULE_END





#undef _core_attr
#undef _dyn_attr

extern void operator<<=(::CORBA::Any& _a, const TA_Base_Bus::QuadCorbaDef::QuadState& _s);
extern void operator<<=(::CORBA::Any& _a, TA_Base_Bus::QuadCorbaDef::QuadState* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, TA_Base_Bus::QuadCorbaDef::QuadState*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const TA_Base_Bus::QuadCorbaDef::QuadState*& _sp);

inline void operator >>=(TA_Base_Bus::QuadCorbaDef::EQuadSegment _e, cdrStream& s) {
  ::operator>>=((::CORBA::ULong)_e, s);
}

inline void operator <<= (TA_Base_Bus::QuadCorbaDef::EQuadSegment& _e, cdrStream& s) {
  ::CORBA::ULong _0RL_e;
  ::operator<<=(_0RL_e,s);
  if (_0RL_e <= TA_Base_Bus::QuadCorbaDef::BottomRight) {
    _e = (TA_Base_Bus::QuadCorbaDef::EQuadSegment) _0RL_e;
  }
  else {
    OMNIORB_THROW(MARSHAL,_OMNI_NS(MARSHAL_InvalidEnumValue),
                  (::CORBA::CompletionStatus)s.completion());
  }
}

void operator<<=(::CORBA::Any& _a, TA_Base_Bus::QuadCorbaDef::EQuadSegment _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, TA_Base_Bus::QuadCorbaDef::EQuadSegment& _s);

void operator<<=(::CORBA::Any& _a, TA_Base_Bus::QuadCorbaDef_ptr _s);
void operator<<=(::CORBA::Any& _a, TA_Base_Bus::QuadCorbaDef_ptr* _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, TA_Base_Bus::QuadCorbaDef_ptr& _s);



inline void
TA_Base_Bus::QuadCorbaDef::_marshalObjRef(::TA_Base_Bus::QuadCorbaDef_ptr obj, cdrStream& s) {
  omniObjRef::_marshal(obj->_PR_getobj(),s);
}




#ifdef   USE_stub_in_nt_dll_NOT_DEFINED_QuadCorbaDef
# undef  USE_stub_in_nt_dll
# undef  USE_stub_in_nt_dll_NOT_DEFINED_QuadCorbaDef
#endif
#ifdef   USE_core_stub_in_nt_dll_NOT_DEFINED_QuadCorbaDef
# undef  USE_core_stub_in_nt_dll
# undef  USE_core_stub_in_nt_dll_NOT_DEFINED_QuadCorbaDef
#endif
#ifdef   USE_dyn_stub_in_nt_dll_NOT_DEFINED_QuadCorbaDef
# undef  USE_dyn_stub_in_nt_dll
# undef  USE_dyn_stub_in_nt_dll_NOT_DEFINED_QuadCorbaDef
#endif

#endif  // __QuadCorbaDef_hh__

