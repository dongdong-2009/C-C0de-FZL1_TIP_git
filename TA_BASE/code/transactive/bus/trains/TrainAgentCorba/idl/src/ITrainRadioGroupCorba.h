// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.
#ifndef __ITrainRadioGroupCorba_hh__
#define __ITrainRadioGroupCorba_hh__

#ifndef __CORBA_H_EXTERNAL_GUARD__
#include <omniORB4/CORBA.h>
#endif

#ifndef  USE_stub_in_nt_dll
# define USE_stub_in_nt_dll_NOT_DEFINED_ITrainRadioGroupCorba
#endif
#ifndef  USE_core_stub_in_nt_dll
# define USE_core_stub_in_nt_dll_NOT_DEFINED_ITrainRadioGroupCorba
#endif
#ifndef  USE_dyn_stub_in_nt_dll
# define USE_dyn_stub_in_nt_dll_NOT_DEFINED_ITrainRadioGroupCorba
#endif



#ifndef __CommonExceptionsCorbaDef_hh_EXTERNAL_GUARD__
#define __CommonExceptionsCorbaDef_hh_EXTERNAL_GUARD__
#include <CommonExceptionsCorbaDef.h>
#endif



#ifdef USE_stub_in_nt_dll
# ifndef USE_core_stub_in_nt_dll
#  define USE_core_stub_in_nt_dll
# endif
# ifndef USE_dyn_stub_in_nt_dll
#  define USE_dyn_stub_in_nt_dll
# endif
#endif

#ifdef _core_attr
# error "A local CPP macro _core_attr has already been defined."
#else
# ifdef  USE_core_stub_in_nt_dll
#  define _core_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _core_attr
# endif
#endif

#ifdef _dyn_attr
# error "A local CPP macro _dyn_attr has already been defined."
#else
# ifdef  USE_dyn_stub_in_nt_dll
#  define _dyn_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _dyn_attr
# endif
#endif





_CORBA_MODULE TA_Base_Bus

_CORBA_MODULE_BEG

#ifndef __TA__Base__Bus_mITrainRadioGroupCorba__
#define __TA__Base__Bus_mITrainRadioGroupCorba__

  class ITrainRadioGroupCorba;
  class _objref_ITrainRadioGroupCorba;
  class _impl_ITrainRadioGroupCorba;
  
  typedef _objref_ITrainRadioGroupCorba* ITrainRadioGroupCorba_ptr;
  typedef ITrainRadioGroupCorba_ptr ITrainRadioGroupCorbaRef;

  class ITrainRadioGroupCorba_Helper {
  public:
    typedef ITrainRadioGroupCorba_ptr _ptr_type;

    static _ptr_type _nil();
    static _CORBA_Boolean is_nil(_ptr_type);
    static void release(_ptr_type);
    static void duplicate(_ptr_type);
    static void marshalObjRef(_ptr_type, cdrStream&);
    static _ptr_type unmarshalObjRef(cdrStream&);
  };

  typedef _CORBA_ObjRef_Var<_objref_ITrainRadioGroupCorba, ITrainRadioGroupCorba_Helper> ITrainRadioGroupCorba_var;
  typedef _CORBA_ObjRef_OUT_arg<_objref_ITrainRadioGroupCorba,ITrainRadioGroupCorba_Helper > ITrainRadioGroupCorba_out;

#endif

  // interface ITrainRadioGroupCorba
  class ITrainRadioGroupCorba {
  public:
    // Declarations for this interface type.
    typedef ITrainRadioGroupCorba_ptr _ptr_type;
    typedef ITrainRadioGroupCorba_var _var_type;

    static _ptr_type _duplicate(_ptr_type);
    static _ptr_type _narrow(::CORBA::Object_ptr);
    static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);
    
    static _ptr_type _nil();

    static inline void _marshalObjRef(_ptr_type, cdrStream&);

    static inline _ptr_type _unmarshalObjRef(cdrStream& s) {
      omniObjRef* o = omniObjRef::_unMarshal(_PD_repoId,s);
      if (o)
        return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
      else
        return _nil();
    }

    static _core_attr const char* _PD_repoId;

    // Other IDL defined within this scope.
    static _dyn_attr const ::CORBA::TypeCode_ptr _tc_GroupLocationList;

    class GroupLocationList_var;

    class GroupLocationList : public _CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::ULong, 4, 4 >  {
    public:
      typedef GroupLocationList_var _var_type;
      inline GroupLocationList() {}
      inline GroupLocationList(const GroupLocationList& _s)
        : _CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::ULong, 4, 4 > (_s) {}

      inline GroupLocationList(_CORBA_ULong _max)
        : _CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::ULong, 4, 4 > (_max) {}
      inline GroupLocationList(_CORBA_ULong _max, _CORBA_ULong _len, ::CORBA::ULong* _val, _CORBA_Boolean _rel=0)
        : _CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::ULong, 4, 4 > (_max, _len, _val, _rel) {}

    

      inline GroupLocationList& operator = (const GroupLocationList& _s) {
        _CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::ULong, 4, 4 > ::operator=(_s);
        return *this;
      }
    };

    class GroupLocationList_out;

    class GroupLocationList_var {
    public:
      inline GroupLocationList_var() : _pd_seq(0) {}
      inline GroupLocationList_var(GroupLocationList* _s) : _pd_seq(_s) {}
      inline GroupLocationList_var(const GroupLocationList_var& _s) {
        if( _s._pd_seq )  _pd_seq = new GroupLocationList(*_s._pd_seq);
        else              _pd_seq = 0;
      }
      inline ~GroupLocationList_var() { if( _pd_seq )  delete _pd_seq; }
        
      inline GroupLocationList_var& operator = (GroupLocationList* _s) {
        if( _pd_seq )  delete _pd_seq;
        _pd_seq = _s;
        return *this;
      }
      inline GroupLocationList_var& operator = (const GroupLocationList_var& _s) {
        if( _s._pd_seq ) {
          if( !_pd_seq )  _pd_seq = new GroupLocationList;
          *_pd_seq = *_s._pd_seq;
        } else if( _pd_seq ) {
          delete _pd_seq;
          _pd_seq = 0;
        }
        return *this;
      }
      inline ::CORBA::ULong& operator [] (_CORBA_ULong _s) {
        return (*_pd_seq)[_s];
      }

    

      inline GroupLocationList* operator -> () { return _pd_seq; }
      inline const GroupLocationList* operator -> () const { return _pd_seq; }
#if defined(__GNUG__)
      inline operator GroupLocationList& () const { return *_pd_seq; }
#else
      inline operator const GroupLocationList& () const { return *_pd_seq; }
      inline operator GroupLocationList& () { return *_pd_seq; }
#endif
        
      inline const GroupLocationList& in() const { return *_pd_seq; }
      inline GroupLocationList&       inout()    { return *_pd_seq; }
      inline GroupLocationList*&      out() {
        if( _pd_seq ) { delete _pd_seq; _pd_seq = 0; }
        return _pd_seq;
      }
      inline GroupLocationList* _retn() { GroupLocationList* tmp = _pd_seq; _pd_seq = 0; return tmp; }
        
      friend class GroupLocationList_out;
      
    private:
      GroupLocationList* _pd_seq;
    };

    class GroupLocationList_out {
    public:
      inline GroupLocationList_out(GroupLocationList*& _s) : _data(_s) { _data = 0; }
      inline GroupLocationList_out(GroupLocationList_var& _s)
        : _data(_s._pd_seq) { _s = (GroupLocationList*) 0; }
      inline GroupLocationList_out(const GroupLocationList_out& _s) : _data(_s._data) {}
      inline GroupLocationList_out& operator = (const GroupLocationList_out& _s) {
        _data = _s._data;
        return *this;
      }
      inline GroupLocationList_out& operator = (GroupLocationList* _s) {
        _data = _s;
        return *this;
      }
      inline operator GroupLocationList*&()  { return _data; }
      inline GroupLocationList*& ptr()       { return _data; }
      inline GroupLocationList* operator->() { return _data; }

      inline ::CORBA::ULong& operator [] (_CORBA_ULong _i) {
        return (*_data)[_i];
      }

    

      GroupLocationList*& _data;

    private:
      GroupLocationList_out();
      GroupLocationList_out& operator=(const GroupLocationList_var&);
    };

    struct TrainRadioGroup {
      typedef _CORBA_ConstrType_Variable_Var<TrainRadioGroup> _var_type;

      
      ::CORBA::String_member groupName;

      ::CORBA::String_member groupTsi;

      GroupLocationList locationCoverage;

      ::CORBA::Boolean locked;

      ::CORBA::Long lastUpdateTime;

    

      void operator>>= (cdrStream &) const;
      void operator<<= (cdrStream &);
    };

    typedef TrainRadioGroup::_var_type TrainRadioGroup_var;

    typedef _CORBA_ConstrType_Variable_OUT_arg< TrainRadioGroup,TrainRadioGroup_var > TrainRadioGroup_out;

    static _dyn_attr const ::CORBA::TypeCode_ptr _tc_TrainRadioGroup;

    static _dyn_attr const ::CORBA::TypeCode_ptr _tc_TrainRadioGroupList;

    class TrainRadioGroupList_var;

    class TrainRadioGroupList : public _CORBA_Unbounded_Sequence< TrainRadioGroup >  {
    public:
      typedef TrainRadioGroupList_var _var_type;
      inline TrainRadioGroupList() {}
      inline TrainRadioGroupList(const TrainRadioGroupList& _s)
        : _CORBA_Unbounded_Sequence< TrainRadioGroup > (_s) {}

      inline TrainRadioGroupList(_CORBA_ULong _max)
        : _CORBA_Unbounded_Sequence< TrainRadioGroup > (_max) {}
      inline TrainRadioGroupList(_CORBA_ULong _max, _CORBA_ULong _len, TrainRadioGroup* _val, _CORBA_Boolean _rel=0)
        : _CORBA_Unbounded_Sequence< TrainRadioGroup > (_max, _len, _val, _rel) {}

    

      inline TrainRadioGroupList& operator = (const TrainRadioGroupList& _s) {
        _CORBA_Unbounded_Sequence< TrainRadioGroup > ::operator=(_s);
        return *this;
      }
    };

    class TrainRadioGroupList_out;

    class TrainRadioGroupList_var {
    public:
      inline TrainRadioGroupList_var() : _pd_seq(0) {}
      inline TrainRadioGroupList_var(TrainRadioGroupList* _s) : _pd_seq(_s) {}
      inline TrainRadioGroupList_var(const TrainRadioGroupList_var& _s) {
        if( _s._pd_seq )  _pd_seq = new TrainRadioGroupList(*_s._pd_seq);
        else              _pd_seq = 0;
      }
      inline ~TrainRadioGroupList_var() { if( _pd_seq )  delete _pd_seq; }
        
      inline TrainRadioGroupList_var& operator = (TrainRadioGroupList* _s) {
        if( _pd_seq )  delete _pd_seq;
        _pd_seq = _s;
        return *this;
      }
      inline TrainRadioGroupList_var& operator = (const TrainRadioGroupList_var& _s) {
        if( _s._pd_seq ) {
          if( !_pd_seq )  _pd_seq = new TrainRadioGroupList;
          *_pd_seq = *_s._pd_seq;
        } else if( _pd_seq ) {
          delete _pd_seq;
          _pd_seq = 0;
        }
        return *this;
      }
      inline TrainRadioGroup& operator [] (_CORBA_ULong _s) {
        return (*_pd_seq)[_s];
      }

    

      inline TrainRadioGroupList* operator -> () { return _pd_seq; }
      inline const TrainRadioGroupList* operator -> () const { return _pd_seq; }
#if defined(__GNUG__)
      inline operator TrainRadioGroupList& () const { return *_pd_seq; }
#else
      inline operator const TrainRadioGroupList& () const { return *_pd_seq; }
      inline operator TrainRadioGroupList& () { return *_pd_seq; }
#endif
        
      inline const TrainRadioGroupList& in() const { return *_pd_seq; }
      inline TrainRadioGroupList&       inout()    { return *_pd_seq; }
      inline TrainRadioGroupList*&      out() {
        if( _pd_seq ) { delete _pd_seq; _pd_seq = 0; }
        return _pd_seq;
      }
      inline TrainRadioGroupList* _retn() { TrainRadioGroupList* tmp = _pd_seq; _pd_seq = 0; return tmp; }
        
      friend class TrainRadioGroupList_out;
      
    private:
      TrainRadioGroupList* _pd_seq;
    };

    class TrainRadioGroupList_out {
    public:
      inline TrainRadioGroupList_out(TrainRadioGroupList*& _s) : _data(_s) { _data = 0; }
      inline TrainRadioGroupList_out(TrainRadioGroupList_var& _s)
        : _data(_s._pd_seq) { _s = (TrainRadioGroupList*) 0; }
      inline TrainRadioGroupList_out(const TrainRadioGroupList_out& _s) : _data(_s._data) {}
      inline TrainRadioGroupList_out& operator = (const TrainRadioGroupList_out& _s) {
        _data = _s._data;
        return *this;
      }
      inline TrainRadioGroupList_out& operator = (TrainRadioGroupList* _s) {
        _data = _s;
        return *this;
      }
      inline operator TrainRadioGroupList*&()  { return _data; }
      inline TrainRadioGroupList*& ptr()       { return _data; }
      inline TrainRadioGroupList* operator->() { return _data; }

      inline TrainRadioGroup& operator [] (_CORBA_ULong _i) {
        return (*_data)[_i];
      }

    

      TrainRadioGroupList*& _data;

    private:
      TrainRadioGroupList_out();
      TrainRadioGroupList_out& operator=(const TrainRadioGroupList_var&);
    };

  
  };

  class _objref_ITrainRadioGroupCorba :
    public virtual ::CORBA::Object,
    public virtual omniObjRef
  {
  public:
    ITrainRadioGroupCorba::TrainRadioGroupList* getTrainRadioGroups();

    inline _objref_ITrainRadioGroupCorba()  { _PR_setobj(0); }  // nil
    _objref_ITrainRadioGroupCorba(omniIOR*, omniIdentity*);

  protected:
    virtual ~_objref_ITrainRadioGroupCorba();

    
  private:
    virtual void* _ptrToObjRef(const char*);

    _objref_ITrainRadioGroupCorba(const _objref_ITrainRadioGroupCorba&);
    _objref_ITrainRadioGroupCorba& operator = (const _objref_ITrainRadioGroupCorba&);
    // not implemented

    friend class ITrainRadioGroupCorba;
  };

  class _pof_ITrainRadioGroupCorba : public _OMNI_NS(proxyObjectFactory) {
  public:
    inline _pof_ITrainRadioGroupCorba() : _OMNI_NS(proxyObjectFactory)(ITrainRadioGroupCorba::_PD_repoId) {}
    virtual ~_pof_ITrainRadioGroupCorba();

    virtual omniObjRef* newObjRef(omniIOR*,omniIdentity*);
    virtual _CORBA_Boolean is_a(const char*) const;
  };

  class _impl_ITrainRadioGroupCorba :
    public virtual omniServant
  {
  public:
    virtual ~_impl_ITrainRadioGroupCorba();

    virtual ITrainRadioGroupCorba::TrainRadioGroupList* getTrainRadioGroups() = 0;
    
  public:  // Really protected, workaround for xlC
    virtual _CORBA_Boolean _dispatch(omniCallHandle&);

  private:
    virtual void* _ptrToInterface(const char*);
    virtual const char* _mostDerivedRepoId();
    
  };


  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_ITrainRadioGroupCorba;

_CORBA_MODULE_END



_CORBA_MODULE POA_TA_Base_Bus
_CORBA_MODULE_BEG

  class ITrainRadioGroupCorba :
    public virtual TA_Base_Bus::_impl_ITrainRadioGroupCorba,
    public virtual ::PortableServer::ServantBase
  {
  public:
    virtual ~ITrainRadioGroupCorba();

    inline ::TA_Base_Bus::ITrainRadioGroupCorba_ptr _this() {
      return (::TA_Base_Bus::ITrainRadioGroupCorba_ptr) _do_this(::TA_Base_Bus::ITrainRadioGroupCorba::_PD_repoId);
    }
  };

_CORBA_MODULE_END



_CORBA_MODULE OBV_TA_Base_Bus
_CORBA_MODULE_BEG

_CORBA_MODULE_END





#undef _core_attr
#undef _dyn_attr

void operator<<=(::CORBA::Any& _a, const TA_Base_Bus::ITrainRadioGroupCorba::GroupLocationList& _s);
void operator<<=(::CORBA::Any& _a, TA_Base_Bus::ITrainRadioGroupCorba::GroupLocationList* _sp);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, TA_Base_Bus::ITrainRadioGroupCorba::GroupLocationList*& _sp);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const TA_Base_Bus::ITrainRadioGroupCorba::GroupLocationList*& _sp);

extern void operator<<=(::CORBA::Any& _a, const TA_Base_Bus::ITrainRadioGroupCorba::TrainRadioGroup& _s);
extern void operator<<=(::CORBA::Any& _a, TA_Base_Bus::ITrainRadioGroupCorba::TrainRadioGroup* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, TA_Base_Bus::ITrainRadioGroupCorba::TrainRadioGroup*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const TA_Base_Bus::ITrainRadioGroupCorba::TrainRadioGroup*& _sp);

void operator<<=(::CORBA::Any& _a, const TA_Base_Bus::ITrainRadioGroupCorba::TrainRadioGroupList& _s);
void operator<<=(::CORBA::Any& _a, TA_Base_Bus::ITrainRadioGroupCorba::TrainRadioGroupList* _sp);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, TA_Base_Bus::ITrainRadioGroupCorba::TrainRadioGroupList*& _sp);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const TA_Base_Bus::ITrainRadioGroupCorba::TrainRadioGroupList*& _sp);

void operator<<=(::CORBA::Any& _a, TA_Base_Bus::ITrainRadioGroupCorba_ptr _s);
void operator<<=(::CORBA::Any& _a, TA_Base_Bus::ITrainRadioGroupCorba_ptr* _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, TA_Base_Bus::ITrainRadioGroupCorba_ptr& _s);



inline void
TA_Base_Bus::ITrainRadioGroupCorba::_marshalObjRef(::TA_Base_Bus::ITrainRadioGroupCorba_ptr obj, cdrStream& s) {
  omniObjRef::_marshal(obj->_PR_getobj(),s);
}




#ifdef   USE_stub_in_nt_dll_NOT_DEFINED_ITrainRadioGroupCorba
# undef  USE_stub_in_nt_dll
# undef  USE_stub_in_nt_dll_NOT_DEFINED_ITrainRadioGroupCorba
#endif
#ifdef   USE_core_stub_in_nt_dll_NOT_DEFINED_ITrainRadioGroupCorba
# undef  USE_core_stub_in_nt_dll
# undef  USE_core_stub_in_nt_dll_NOT_DEFINED_ITrainRadioGroupCorba
#endif
#ifdef   USE_dyn_stub_in_nt_dll_NOT_DEFINED_ITrainRadioGroupCorba
# undef  USE_dyn_stub_in_nt_dll
# undef  USE_dyn_stub_in_nt_dll_NOT_DEFINED_ITrainRadioGroupCorba
#endif

#endif  // __ITrainRadioGroupCorba_hh__

