// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.
#ifndef __IPlanManagerCorbaDef_hh__
#define __IPlanManagerCorbaDef_hh__

#ifndef __CORBA_H_EXTERNAL_GUARD__
#include <omniORB4/CORBA.h>
#endif

#ifndef  USE_stub_in_nt_dll
# define USE_stub_in_nt_dll_NOT_DEFINED_IPlanManagerCorbaDef
#endif
#ifndef  USE_core_stub_in_nt_dll
# define USE_core_stub_in_nt_dll_NOT_DEFINED_IPlanManagerCorbaDef
#endif
#ifndef  USE_dyn_stub_in_nt_dll
# define USE_dyn_stub_in_nt_dll_NOT_DEFINED_IPlanManagerCorbaDef
#endif



#ifndef __CommonExceptionsCorbaDef_hh_EXTERNAL_GUARD__
#define __CommonExceptionsCorbaDef_hh_EXTERNAL_GUARD__
#include <CommonExceptionsCorbaDef.h>
#endif
#ifndef __PlanAgentDataCorbaDef_hh_EXTERNAL_GUARD__
#define __PlanAgentDataCorbaDef_hh_EXTERNAL_GUARD__
#include <PlanAgentDataCorbaDef.h>
#endif



#ifdef USE_stub_in_nt_dll
# ifndef USE_core_stub_in_nt_dll
#  define USE_core_stub_in_nt_dll
# endif
# ifndef USE_dyn_stub_in_nt_dll
#  define USE_dyn_stub_in_nt_dll
# endif
#endif

#ifdef _core_attr
# error "A local CPP macro _core_attr has already been defined."
#else
# ifdef  USE_core_stub_in_nt_dll
#  define _core_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _core_attr
# endif
#endif

#ifdef _dyn_attr
# error "A local CPP macro _dyn_attr has already been defined."
#else
# ifdef  USE_dyn_stub_in_nt_dll
#  define _dyn_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _dyn_attr
# endif
#endif





_CORBA_MODULE TA_Base_Bus

_CORBA_MODULE_BEG

#ifndef __TA__Base__Bus_mIPlanManagerCorbaDef__
#define __TA__Base__Bus_mIPlanManagerCorbaDef__

  class IPlanManagerCorbaDef;
  class _objref_IPlanManagerCorbaDef;
  class _impl_IPlanManagerCorbaDef;
  
  typedef _objref_IPlanManagerCorbaDef* IPlanManagerCorbaDef_ptr;
  typedef IPlanManagerCorbaDef_ptr IPlanManagerCorbaDefRef;

  class IPlanManagerCorbaDef_Helper {
  public:
    typedef IPlanManagerCorbaDef_ptr _ptr_type;

    static _ptr_type _nil();
    static _CORBA_Boolean is_nil(_ptr_type);
    static void release(_ptr_type);
    static void duplicate(_ptr_type);
    static void marshalObjRef(_ptr_type, cdrStream&);
    static _ptr_type unmarshalObjRef(cdrStream&);
  };

  typedef _CORBA_ObjRef_Var<_objref_IPlanManagerCorbaDef, IPlanManagerCorbaDef_Helper> IPlanManagerCorbaDef_var;
  typedef _CORBA_ObjRef_OUT_arg<_objref_IPlanManagerCorbaDef,IPlanManagerCorbaDef_Helper > IPlanManagerCorbaDef_out;

#endif

  // interface IPlanManagerCorbaDef
  class IPlanManagerCorbaDef {
  public:
    // Declarations for this interface type.
    typedef IPlanManagerCorbaDef_ptr _ptr_type;
    typedef IPlanManagerCorbaDef_var _var_type;

    static _ptr_type _duplicate(_ptr_type);
    static _ptr_type _narrow(::CORBA::Object_ptr);
    static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);
    
    static _ptr_type _nil();

    static inline void _marshalObjRef(_ptr_type, cdrStream&);

    static inline _ptr_type _unmarshalObjRef(cdrStream& s) {
      omniObjRef* o = omniObjRef::_unMarshal(_PD_repoId,s);
      if (o)
        return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
      else
        return _nil();
    }

    static _core_attr const char* _PD_repoId;

    // Other IDL defined within this scope.
    static _core_attr const ::CORBA::ULong RUNPLAN_RESPONSE_TIMEOUT _init_in_cldecl_( = 60U );

    static _core_attr const ::CORBA::ULong LAUNCHGUIAPP_RESPONSE_TIMEOUT _init_in_cldecl_( = 30U );

    static _core_attr const ::CORBA::ULong LAUNCHSCHEMATIC_RESPONSE_TIMEOUT _init_in_cldecl_( = 60U );

    class InteractiveStepExecuteError : public ::CORBA::UserException {
    public:
      
      ::CORBA::String_member reason;

    

      inline InteractiveStepExecuteError() {
        pd_insertToAnyFn    = insertToAnyFn;
        pd_insertToAnyFnNCP = insertToAnyFnNCP;
      }
      InteractiveStepExecuteError(const InteractiveStepExecuteError&);
      InteractiveStepExecuteError(const char* i_reason);
      InteractiveStepExecuteError& operator=(const InteractiveStepExecuteError&);
      virtual ~InteractiveStepExecuteError();
      virtual void _raise() const;
      static InteractiveStepExecuteError* _downcast(::CORBA::Exception*);
      static const InteractiveStepExecuteError* _downcast(const ::CORBA::Exception*);
      static inline InteractiveStepExecuteError* _narrow(::CORBA::Exception* _e) {
        return _downcast(_e);
      }
      
      void operator>>=(cdrStream&) const ;
      void operator<<=(cdrStream&) ;

      static _core_attr insertExceptionToAny    insertToAnyFn;
      static _core_attr insertExceptionToAnyNCP insertToAnyFnNCP;

      virtual ::CORBA::Exception* _NP_duplicate() const;

      static _core_attr const char* _PD_repoId;
      static _core_attr const char* _PD_typeId;

    private:
      virtual const char* _NP_typeId() const;
      virtual const char* _NP_repoId(int*) const;
      virtual void _NP_marshal(cdrStream&) const;
    };

    static _dyn_attr const ::CORBA::TypeCode_ptr _tc_InteractiveStepExecuteError;

  
  };

  class _objref_IPlanManagerCorbaDef :
    public virtual ::CORBA::Object,
    public virtual omniObjRef
  {
  public:
    void executeInteractiveStep(const ::TA_Base_Core::CurrentPlanStepDetail& stepDetail);

    inline _objref_IPlanManagerCorbaDef()  { _PR_setobj(0); }  // nil
    _objref_IPlanManagerCorbaDef(omniIOR*, omniIdentity*);

  protected:
    virtual ~_objref_IPlanManagerCorbaDef();

    
  private:
    virtual void* _ptrToObjRef(const char*);

    _objref_IPlanManagerCorbaDef(const _objref_IPlanManagerCorbaDef&);
    _objref_IPlanManagerCorbaDef& operator = (const _objref_IPlanManagerCorbaDef&);
    // not implemented

    friend class IPlanManagerCorbaDef;
  };

  class _pof_IPlanManagerCorbaDef : public _OMNI_NS(proxyObjectFactory) {
  public:
    inline _pof_IPlanManagerCorbaDef() : _OMNI_NS(proxyObjectFactory)(IPlanManagerCorbaDef::_PD_repoId) {}
    virtual ~_pof_IPlanManagerCorbaDef();

    virtual omniObjRef* newObjRef(omniIOR*,omniIdentity*);
    virtual _CORBA_Boolean is_a(const char*) const;
  };

  class _impl_IPlanManagerCorbaDef :
    public virtual omniServant
  {
  public:
    virtual ~_impl_IPlanManagerCorbaDef();

    virtual void executeInteractiveStep(const ::TA_Base_Core::CurrentPlanStepDetail& stepDetail) = 0;
    
  public:  // Really protected, workaround for xlC
    virtual _CORBA_Boolean _dispatch(omniCallHandle&);

  private:
    virtual void* _ptrToInterface(const char*);
    virtual const char* _mostDerivedRepoId();
    
  };


  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_IPlanManagerCorbaDef;

_CORBA_MODULE_END



_CORBA_MODULE POA_TA_Base_Bus
_CORBA_MODULE_BEG

  class IPlanManagerCorbaDef :
    public virtual TA_Base_Bus::_impl_IPlanManagerCorbaDef,
    public virtual ::PortableServer::ServantBase
  {
  public:
    virtual ~IPlanManagerCorbaDef();

    inline ::TA_Base_Bus::IPlanManagerCorbaDef_ptr _this() {
      return (::TA_Base_Bus::IPlanManagerCorbaDef_ptr) _do_this(::TA_Base_Bus::IPlanManagerCorbaDef::_PD_repoId);
    }
  };

_CORBA_MODULE_END



_CORBA_MODULE OBV_TA_Base_Bus
_CORBA_MODULE_BEG

_CORBA_MODULE_END





#undef _core_attr
#undef _dyn_attr

void operator<<=(::CORBA::Any& _a, const TA_Base_Bus::IPlanManagerCorbaDef::InteractiveStepExecuteError& _s);
void operator<<=(::CORBA::Any& _a, const TA_Base_Bus::IPlanManagerCorbaDef::InteractiveStepExecuteError* _sp);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const TA_Base_Bus::IPlanManagerCorbaDef::InteractiveStepExecuteError*& _sp);

void operator<<=(::CORBA::Any& _a, TA_Base_Bus::IPlanManagerCorbaDef_ptr _s);
void operator<<=(::CORBA::Any& _a, TA_Base_Bus::IPlanManagerCorbaDef_ptr* _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, TA_Base_Bus::IPlanManagerCorbaDef_ptr& _s);



inline void
TA_Base_Bus::IPlanManagerCorbaDef::_marshalObjRef(::TA_Base_Bus::IPlanManagerCorbaDef_ptr obj, cdrStream& s) {
  omniObjRef::_marshal(obj->_PR_getobj(),s);
}




#ifdef   USE_stub_in_nt_dll_NOT_DEFINED_IPlanManagerCorbaDef
# undef  USE_stub_in_nt_dll
# undef  USE_stub_in_nt_dll_NOT_DEFINED_IPlanManagerCorbaDef
#endif
#ifdef   USE_core_stub_in_nt_dll_NOT_DEFINED_IPlanManagerCorbaDef
# undef  USE_core_stub_in_nt_dll
# undef  USE_core_stub_in_nt_dll_NOT_DEFINED_IPlanManagerCorbaDef
#endif
#ifdef   USE_dyn_stub_in_nt_dll_NOT_DEFINED_IPlanManagerCorbaDef
# undef  USE_dyn_stub_in_nt_dll
# undef  USE_dyn_stub_in_nt_dll_NOT_DEFINED_IPlanManagerCorbaDef
#endif

#endif  // __IPlanManagerCorbaDef_hh__

