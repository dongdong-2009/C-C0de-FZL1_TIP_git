// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.
#ifndef __ITTISManagerCorbaDef_hh__
#define __ITTISManagerCorbaDef_hh__

#ifndef __CORBA_H_EXTERNAL_GUARD__
#include <omniORB4/CORBA.h>
#endif

#ifndef  USE_stub_in_nt_dll
# define USE_stub_in_nt_dll_NOT_DEFINED_ITTISManagerCorbaDef
#endif
#ifndef  USE_core_stub_in_nt_dll
# define USE_core_stub_in_nt_dll_NOT_DEFINED_ITTISManagerCorbaDef
#endif
#ifndef  USE_dyn_stub_in_nt_dll
# define USE_dyn_stub_in_nt_dll_NOT_DEFINED_ITTISManagerCorbaDef
#endif



#ifndef __CommonExceptionsCorbaDef_hh_EXTERNAL_GUARD__
#define __CommonExceptionsCorbaDef_hh_EXTERNAL_GUARD__
#include <CommonExceptionsCorbaDef.h>
#endif
#ifndef __TISMessageDataDefinitions_hh_EXTERNAL_GUARD__
#define __TISMessageDataDefinitions_hh_EXTERNAL_GUARD__
#include <TISMessageDataDefinitions.h>
#endif



#ifdef USE_stub_in_nt_dll
# ifndef USE_core_stub_in_nt_dll
#  define USE_core_stub_in_nt_dll
# endif
# ifndef USE_dyn_stub_in_nt_dll
#  define USE_dyn_stub_in_nt_dll
# endif
#endif

#ifdef _core_attr
# error "A local CPP macro _core_attr has already been defined."
#else
# ifdef  USE_core_stub_in_nt_dll
#  define _core_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _core_attr
# endif
#endif

#ifdef _dyn_attr
# error "A local CPP macro _dyn_attr has already been defined."
#else
# ifdef  USE_dyn_stub_in_nt_dll
#  define _dyn_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _dyn_attr
# endif
#endif





_CORBA_MODULE TA_Base_Bus

_CORBA_MODULE_BEG

#ifndef __TA__Base__Bus_mITTISManagerCorbaDef__
#define __TA__Base__Bus_mITTISManagerCorbaDef__

  class ITTISManagerCorbaDef;
  class _objref_ITTISManagerCorbaDef;
  class _impl_ITTISManagerCorbaDef;
  
  typedef _objref_ITTISManagerCorbaDef* ITTISManagerCorbaDef_ptr;
  typedef ITTISManagerCorbaDef_ptr ITTISManagerCorbaDefRef;

  class ITTISManagerCorbaDef_Helper {
  public:
    typedef ITTISManagerCorbaDef_ptr _ptr_type;

    static _ptr_type _nil();
    static _CORBA_Boolean is_nil(_ptr_type);
    static void release(_ptr_type);
    static void duplicate(_ptr_type);
    static void marshalObjRef(_ptr_type, cdrStream&);
    static _ptr_type unmarshalObjRef(cdrStream&);
  };

  typedef _CORBA_ObjRef_Var<_objref_ITTISManagerCorbaDef, ITTISManagerCorbaDef_Helper> ITTISManagerCorbaDef_var;
  typedef _CORBA_ObjRef_OUT_arg<_objref_ITTISManagerCorbaDef,ITTISManagerCorbaDef_Helper > ITTISManagerCorbaDef_out;

#endif

  // interface ITTISManagerCorbaDef
  class ITTISManagerCorbaDef {
  public:
    // Declarations for this interface type.
    typedef ITTISManagerCorbaDef_ptr _ptr_type;
    typedef ITTISManagerCorbaDef_var _var_type;

    static _ptr_type _duplicate(_ptr_type);
    static _ptr_type _narrow(::CORBA::Object_ptr);
    static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);
    
    static _ptr_type _nil();

    static inline void _marshalObjRef(_ptr_type, cdrStream&);

    static inline _ptr_type _unmarshalObjRef(cdrStream& s) {
      omniObjRef* o = omniObjRef::_unMarshal(_PD_repoId,s);
      if (o)
        return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
      else
        return _nil();
    }

    static _core_attr const char* _PD_repoId;

    // Other IDL defined within this scope.
    class TTISInvalidParameter : public ::CORBA::UserException {
    public:
      
      ::CORBA::String_member details;

    

      inline TTISInvalidParameter() {
        pd_insertToAnyFn    = insertToAnyFn;
        pd_insertToAnyFnNCP = insertToAnyFnNCP;
      }
      TTISInvalidParameter(const TTISInvalidParameter&);
      TTISInvalidParameter(const char* i_details);
      TTISInvalidParameter& operator=(const TTISInvalidParameter&);
      virtual ~TTISInvalidParameter();
      virtual void _raise() const;
      static TTISInvalidParameter* _downcast(::CORBA::Exception*);
      static const TTISInvalidParameter* _downcast(const ::CORBA::Exception*);
      static inline TTISInvalidParameter* _narrow(::CORBA::Exception* _e) {
        return _downcast(_e);
      }
      
      void operator>>=(cdrStream&) const ;
      void operator<<=(cdrStream&) ;

      static _core_attr insertExceptionToAny    insertToAnyFn;
      static _core_attr insertExceptionToAnyNCP insertToAnyFnNCP;

      virtual ::CORBA::Exception* _NP_duplicate() const;

      static _core_attr const char* _PD_repoId;
      static _core_attr const char* _PD_typeId;

    private:
      virtual const char* _NP_typeId() const;
      virtual const char* _NP_repoId(int*) const;
      virtual void _NP_marshal(cdrStream&) const;
    };

    static _dyn_attr const ::CORBA::TypeCode_ptr _tc_TTISInvalidParameter;

    class TTISGeneralFailure : public ::CORBA::UserException {
    public:
      
      ::CORBA::String_member details;

    

      inline TTISGeneralFailure() {
        pd_insertToAnyFn    = insertToAnyFn;
        pd_insertToAnyFnNCP = insertToAnyFnNCP;
      }
      TTISGeneralFailure(const TTISGeneralFailure&);
      TTISGeneralFailure(const char* i_details);
      TTISGeneralFailure& operator=(const TTISGeneralFailure&);
      virtual ~TTISGeneralFailure();
      virtual void _raise() const;
      static TTISGeneralFailure* _downcast(::CORBA::Exception*);
      static const TTISGeneralFailure* _downcast(const ::CORBA::Exception*);
      static inline TTISGeneralFailure* _narrow(::CORBA::Exception* _e) {
        return _downcast(_e);
      }
      
      void operator>>=(cdrStream&) const ;
      void operator<<=(cdrStream&) ;

      static _core_attr insertExceptionToAny    insertToAnyFn;
      static _core_attr insertExceptionToAnyNCP insertToAnyFnNCP;

      virtual ::CORBA::Exception* _NP_duplicate() const;

      static _core_attr const char* _PD_repoId;
      static _core_attr const char* _PD_typeId;

    private:
      virtual const char* _NP_typeId() const;
      virtual const char* _NP_repoId(int*) const;
      virtual void _NP_marshal(cdrStream&) const;
    };

    static _dyn_attr const ::CORBA::TypeCode_ptr _tc_TTISGeneralFailure;

  
  };

  class _objref_ITTISManagerCorbaDef :
    public virtual ::CORBA::Object,
    public virtual omniObjRef
  {
  public:
    ::CORBA::UShort getFlexibleTimeOutValue();
    void submitPredefinedDisplayRequest(const ::TA_Base_Core::TrainList& trains, const ::TA_Base_Core::TTISPredefinedMessageParameters& displayParameters, ::CORBA::Long timestamp, const char* sessionId);
    void submitAdHocDisplayRequest(const ::TA_Base_Core::TrainList& trains, const ::TA_Base_Core::TTISFreeTextMessageParameters& displayParameters, ::CORBA::Long timestamp, const char* sessionId);
    void submitClearRequest(const ::TA_Base_Core::TrainList& trains, const ::TA_Base_Core::TTISMessageResetParameters& displayParameters, ::CORBA::Long timestamp, const char* sessionId);
    void downloadNextMessageLibrary(const ::TA_Base_Core::TrainList& trains, const char* sessionId);
    void cancelDownloadMessageLibrary(const ::TA_Base_Core::TrainList& trains, const char* sessionId);
    void upgradeMessageLibrary(const ::TA_Base_Core::TrainList& trains, const char* sessionId);
    TA_Base_Core::TrainDownloadList* getCurrentTrainDownloads();
    TA_Base_Core::TrainDataVersionList* getTrainDataVersions();
    TA_Base_Core::TrainDataVersionAlarmList* getTrainDataAlarms();

    inline _objref_ITTISManagerCorbaDef()  { _PR_setobj(0); }  // nil
    _objref_ITTISManagerCorbaDef(omniIOR*, omniIdentity*);

  protected:
    virtual ~_objref_ITTISManagerCorbaDef();

    
  private:
    virtual void* _ptrToObjRef(const char*);

    _objref_ITTISManagerCorbaDef(const _objref_ITTISManagerCorbaDef&);
    _objref_ITTISManagerCorbaDef& operator = (const _objref_ITTISManagerCorbaDef&);
    // not implemented

    friend class ITTISManagerCorbaDef;
  };

  class _pof_ITTISManagerCorbaDef : public _OMNI_NS(proxyObjectFactory) {
  public:
    inline _pof_ITTISManagerCorbaDef() : _OMNI_NS(proxyObjectFactory)(ITTISManagerCorbaDef::_PD_repoId) {}
    virtual ~_pof_ITTISManagerCorbaDef();

    virtual omniObjRef* newObjRef(omniIOR*,omniIdentity*);
    virtual _CORBA_Boolean is_a(const char*) const;
  };

  class _impl_ITTISManagerCorbaDef :
    public virtual omniServant
  {
  public:
    virtual ~_impl_ITTISManagerCorbaDef();

    virtual ::CORBA::UShort getFlexibleTimeOutValue() = 0;
    virtual void submitPredefinedDisplayRequest(const ::TA_Base_Core::TrainList& trains, const ::TA_Base_Core::TTISPredefinedMessageParameters& displayParameters, ::CORBA::Long timestamp, const char* sessionId) = 0;
    virtual void submitAdHocDisplayRequest(const ::TA_Base_Core::TrainList& trains, const ::TA_Base_Core::TTISFreeTextMessageParameters& displayParameters, ::CORBA::Long timestamp, const char* sessionId) = 0;
    virtual void submitClearRequest(const ::TA_Base_Core::TrainList& trains, const ::TA_Base_Core::TTISMessageResetParameters& displayParameters, ::CORBA::Long timestamp, const char* sessionId) = 0;
    virtual void downloadNextMessageLibrary(const ::TA_Base_Core::TrainList& trains, const char* sessionId) = 0;
    virtual void cancelDownloadMessageLibrary(const ::TA_Base_Core::TrainList& trains, const char* sessionId) = 0;
    virtual void upgradeMessageLibrary(const ::TA_Base_Core::TrainList& trains, const char* sessionId) = 0;
    virtual TA_Base_Core::TrainDownloadList* getCurrentTrainDownloads() = 0;
    virtual TA_Base_Core::TrainDataVersionList* getTrainDataVersions() = 0;
    virtual TA_Base_Core::TrainDataVersionAlarmList* getTrainDataAlarms() = 0;
    
  public:  // Really protected, workaround for xlC
    virtual _CORBA_Boolean _dispatch(omniCallHandle&);

  private:
    virtual void* _ptrToInterface(const char*);
    virtual const char* _mostDerivedRepoId();
    
  };


  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_ITTISManagerCorbaDef;

_CORBA_MODULE_END



_CORBA_MODULE POA_TA_Base_Bus
_CORBA_MODULE_BEG

  class ITTISManagerCorbaDef :
    public virtual TA_Base_Bus::_impl_ITTISManagerCorbaDef,
    public virtual ::PortableServer::ServantBase
  {
  public:
    virtual ~ITTISManagerCorbaDef();

    inline ::TA_Base_Bus::ITTISManagerCorbaDef_ptr _this() {
      return (::TA_Base_Bus::ITTISManagerCorbaDef_ptr) _do_this(::TA_Base_Bus::ITTISManagerCorbaDef::_PD_repoId);
    }
  };

_CORBA_MODULE_END



_CORBA_MODULE OBV_TA_Base_Bus
_CORBA_MODULE_BEG

_CORBA_MODULE_END





#undef _core_attr
#undef _dyn_attr

void operator<<=(::CORBA::Any& _a, const TA_Base_Bus::ITTISManagerCorbaDef::TTISInvalidParameter& _s);
void operator<<=(::CORBA::Any& _a, const TA_Base_Bus::ITTISManagerCorbaDef::TTISInvalidParameter* _sp);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const TA_Base_Bus::ITTISManagerCorbaDef::TTISInvalidParameter*& _sp);

void operator<<=(::CORBA::Any& _a, const TA_Base_Bus::ITTISManagerCorbaDef::TTISGeneralFailure& _s);
void operator<<=(::CORBA::Any& _a, const TA_Base_Bus::ITTISManagerCorbaDef::TTISGeneralFailure* _sp);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const TA_Base_Bus::ITTISManagerCorbaDef::TTISGeneralFailure*& _sp);

void operator<<=(::CORBA::Any& _a, TA_Base_Bus::ITTISManagerCorbaDef_ptr _s);
void operator<<=(::CORBA::Any& _a, TA_Base_Bus::ITTISManagerCorbaDef_ptr* _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, TA_Base_Bus::ITTISManagerCorbaDef_ptr& _s);



inline void
TA_Base_Bus::ITTISManagerCorbaDef::_marshalObjRef(::TA_Base_Bus::ITTISManagerCorbaDef_ptr obj, cdrStream& s) {
  omniObjRef::_marshal(obj->_PR_getobj(),s);
}




#ifdef   USE_stub_in_nt_dll_NOT_DEFINED_ITTISManagerCorbaDef
# undef  USE_stub_in_nt_dll
# undef  USE_stub_in_nt_dll_NOT_DEFINED_ITTISManagerCorbaDef
#endif
#ifdef   USE_core_stub_in_nt_dll_NOT_DEFINED_ITTISManagerCorbaDef
# undef  USE_core_stub_in_nt_dll
# undef  USE_core_stub_in_nt_dll_NOT_DEFINED_ITTISManagerCorbaDef
#endif
#ifdef   USE_dyn_stub_in_nt_dll_NOT_DEFINED_ITTISManagerCorbaDef
# undef  USE_dyn_stub_in_nt_dll
# undef  USE_dyn_stub_in_nt_dll_NOT_DEFINED_ITTISManagerCorbaDef
#endif

#endif  // __ITTISManagerCorbaDef_hh__

