// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.
#ifndef __IMmsJobRequestSubmitterCorbaDef_hh__
#define __IMmsJobRequestSubmitterCorbaDef_hh__

#ifndef __CORBA_H_EXTERNAL_GUARD__
#include <omniORB4/CORBA.h>
#endif

#ifndef  USE_stub_in_nt_dll
# define USE_stub_in_nt_dll_NOT_DEFINED_IMmsJobRequestSubmitterCorbaDef
#endif
#ifndef  USE_core_stub_in_nt_dll
# define USE_core_stub_in_nt_dll_NOT_DEFINED_IMmsJobRequestSubmitterCorbaDef
#endif
#ifndef  USE_dyn_stub_in_nt_dll
# define USE_dyn_stub_in_nt_dll_NOT_DEFINED_IMmsJobRequestSubmitterCorbaDef
#endif



#ifndef __GenericMessageCorbaDef_hh_EXTERNAL_GUARD__
#define __GenericMessageCorbaDef_hh_EXTERNAL_GUARD__
#include <GenericMessageCorbaDef.h>
#endif
#ifndef __AlarmUpdateCorbaDef_hh_EXTERNAL_GUARD__
#define __AlarmUpdateCorbaDef_hh_EXTERNAL_GUARD__
#include <AlarmUpdateCorbaDef.h>
#endif
#ifndef __AlarmMessageCorbaDef_hh_EXTERNAL_GUARD__
#define __AlarmMessageCorbaDef_hh_EXTERNAL_GUARD__
#include <AlarmMessageCorbaDef.h>
#endif
#ifndef __CommonExceptionsCorbaDef_hh_EXTERNAL_GUARD__
#define __CommonExceptionsCorbaDef_hh_EXTERNAL_GUARD__
#include <CommonExceptionsCorbaDef.h>
#endif
#ifndef __IMmsGlobalInhibitCorbaDef_hh_EXTERNAL_GUARD__
#define __IMmsGlobalInhibitCorbaDef_hh_EXTERNAL_GUARD__
#include <IMmsGlobalInhibitCorbaDef.h>
#endif
#ifndef __IMmsConnectionCorbaDef_hh_EXTERNAL_GUARD__
#define __IMmsConnectionCorbaDef_hh_EXTERNAL_GUARD__
#include <IMmsConnectionCorbaDef.h>
#endif



#ifdef USE_stub_in_nt_dll
# ifndef USE_core_stub_in_nt_dll
#  define USE_core_stub_in_nt_dll
# endif
# ifndef USE_dyn_stub_in_nt_dll
#  define USE_dyn_stub_in_nt_dll
# endif
#endif

#ifdef _core_attr
# error "A local CPP macro _core_attr has already been defined."
#else
# ifdef  USE_core_stub_in_nt_dll
#  define _core_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _core_attr
# endif
#endif

#ifdef _dyn_attr
# error "A local CPP macro _dyn_attr has already been defined."
#else
# ifdef  USE_dyn_stub_in_nt_dll
#  define _dyn_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _dyn_attr
# endif
#endif





_CORBA_MODULE TA_Base_Bus

_CORBA_MODULE_BEG

  enum ESubmissionDeniedError { SUBMISSIONDENIED_NO_PRIVILEGE, SUBMISSIONDENIED_DATAPOINT_MMS_INHIBITED, SUBMISSIONDENIED_GLOBAL_MMS_INHIBITED, SUBMISSIONDENIED_ALARM_ALREADY_RAISED, SUBMISSIONDENIED_ALARM_NORMALIZED, SUBMISSIONDENIED_ALARM_SUPPRESSED, SUBMISSIONDENIED_MMS_INHIBITED_APPLYED, SUBMISSIONDENIED_GLOBAL_MMS_INHIBITED_APPLYED, SUBMISSIONDENIED_NO_DETERMINE_INHIBITION_STATE /*, __max_ESubmissionDeniedError=0xffffffff */ };
  typedef ESubmissionDeniedError& ESubmissionDeniedError_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_ESubmissionDeniedError;

  enum EDependencyFailureError { DEPENDENCYFAILURE_MMS_SERVER_NO_CONTACTED, DEPENDENCYFAILURE_NO_OPERATOR_DETAIL, DEPENDENCYFAILURE_ALARM_AGENT_NO_CONTACTED, DEPENDENCYFAILURE_NO_SPECIFIED_ALARM, DEPENDENCYFAILURE_NO_SPECIFIED_DATAPOINT, DEPENDENCYFAILURE_NO_EQUIPMENT_DATA, DEPENDENCYFAILURE_NO_ALARM_DATA, DEPENDENCYFAILURE_NO_SESSION /*, __max_EDependencyFailureError=0xffffffff */ };
  typedef EDependencyFailureError& EDependencyFailureError_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_EDependencyFailureError;

  class SubmissionDenied : public ::CORBA::UserException {
  public:
    
    ::CORBA::String_member reason;

    ::CORBA::Boolean rights;

    ESubmissionDeniedError eType;

  

    inline SubmissionDenied() {
      pd_insertToAnyFn    = insertToAnyFn;
      pd_insertToAnyFnNCP = insertToAnyFnNCP;
    }
    SubmissionDenied(const SubmissionDenied&);
    SubmissionDenied(const char* i_reason, ::CORBA::Boolean i_rights, ESubmissionDeniedError i_eType);
    SubmissionDenied& operator=(const SubmissionDenied&);
    virtual ~SubmissionDenied();
    virtual void _raise() const;
    static SubmissionDenied* _downcast(::CORBA::Exception*);
    static const SubmissionDenied* _downcast(const ::CORBA::Exception*);
    static inline SubmissionDenied* _narrow(::CORBA::Exception* _e) {
      return _downcast(_e);
    }
    
    void operator>>=(cdrStream&) const ;
    void operator<<=(cdrStream&) ;

    static _core_attr insertExceptionToAny    insertToAnyFn;
    static _core_attr insertExceptionToAnyNCP insertToAnyFnNCP;

    virtual ::CORBA::Exception* _NP_duplicate() const;

    static _core_attr const char* _PD_repoId;
    static _core_attr const char* _PD_typeId;

  private:
    virtual const char* _NP_typeId() const;
    virtual const char* _NP_repoId(int*) const;
    virtual void _NP_marshal(cdrStream&) const;
  };

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_SubmissionDenied;

  class DependencyFailure : public ::CORBA::UserException {
  public:
    
    ::CORBA::String_member reason;

    EDependencyFailureError eType;

  

    inline DependencyFailure() {
      pd_insertToAnyFn    = insertToAnyFn;
      pd_insertToAnyFnNCP = insertToAnyFnNCP;
    }
    DependencyFailure(const DependencyFailure&);
    DependencyFailure(const char* i_reason, EDependencyFailureError i_eType);
    DependencyFailure& operator=(const DependencyFailure&);
    virtual ~DependencyFailure();
    virtual void _raise() const;
    static DependencyFailure* _downcast(::CORBA::Exception*);
    static const DependencyFailure* _downcast(const ::CORBA::Exception*);
    static inline DependencyFailure* _narrow(::CORBA::Exception* _e) {
      return _downcast(_e);
    }
    
    void operator>>=(cdrStream&) const ;
    void operator<<=(cdrStream&) ;

    static _core_attr insertExceptionToAny    insertToAnyFn;
    static _core_attr insertExceptionToAnyNCP insertToAnyFnNCP;

    virtual ::CORBA::Exception* _NP_duplicate() const;

    static _core_attr const char* _PD_repoId;
    static _core_attr const char* _PD_typeId;

  private:
    virtual const char* _NP_typeId() const;
    virtual const char* _NP_repoId(int*) const;
    virtual void _NP_marshal(cdrStream&) const;
  };

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_DependencyFailure;

  class InvalidArg : public ::CORBA::UserException {
  public:
    
    ::CORBA::String_member reason;

  

    inline InvalidArg() {
      pd_insertToAnyFn    = insertToAnyFn;
      pd_insertToAnyFnNCP = insertToAnyFnNCP;
    }
    InvalidArg(const InvalidArg&);
    InvalidArg(const char* i_reason);
    InvalidArg& operator=(const InvalidArg&);
    virtual ~InvalidArg();
    virtual void _raise() const;
    static InvalidArg* _downcast(::CORBA::Exception*);
    static const InvalidArg* _downcast(const ::CORBA::Exception*);
    static inline InvalidArg* _narrow(::CORBA::Exception* _e) {
      return _downcast(_e);
    }
    
    void operator>>=(cdrStream&) const ;
    void operator<<=(cdrStream&) ;

    static _core_attr insertExceptionToAny    insertToAnyFn;
    static _core_attr insertExceptionToAnyNCP insertToAnyFnNCP;

    virtual ::CORBA::Exception* _NP_duplicate() const;

    static _core_attr const char* _PD_repoId;
    static _core_attr const char* _PD_typeId;

  private:
    virtual const char* _NP_typeId() const;
    virtual const char* _NP_repoId(int*) const;
    virtual void _NP_marshal(cdrStream&) const;
  };

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_InvalidArg;

#ifndef __TA__Base__Bus_mIMmsJobRequestSubmitterCorbaDef__
#define __TA__Base__Bus_mIMmsJobRequestSubmitterCorbaDef__

  class IMmsJobRequestSubmitterCorbaDef;
  class _objref_IMmsJobRequestSubmitterCorbaDef;
  class _impl_IMmsJobRequestSubmitterCorbaDef;
  
  typedef _objref_IMmsJobRequestSubmitterCorbaDef* IMmsJobRequestSubmitterCorbaDef_ptr;
  typedef IMmsJobRequestSubmitterCorbaDef_ptr IMmsJobRequestSubmitterCorbaDefRef;

  class IMmsJobRequestSubmitterCorbaDef_Helper {
  public:
    typedef IMmsJobRequestSubmitterCorbaDef_ptr _ptr_type;

    static _ptr_type _nil();
    static _CORBA_Boolean is_nil(_ptr_type);
    static void release(_ptr_type);
    static void duplicate(_ptr_type);
    static void marshalObjRef(_ptr_type, cdrStream&);
    static _ptr_type unmarshalObjRef(cdrStream&);
  };

  typedef _CORBA_ObjRef_Var<_objref_IMmsJobRequestSubmitterCorbaDef, IMmsJobRequestSubmitterCorbaDef_Helper> IMmsJobRequestSubmitterCorbaDef_var;
  typedef _CORBA_ObjRef_OUT_arg<_objref_IMmsJobRequestSubmitterCorbaDef,IMmsJobRequestSubmitterCorbaDef_Helper > IMmsJobRequestSubmitterCorbaDef_out;

#endif

  // interface IMmsJobRequestSubmitterCorbaDef
  class IMmsJobRequestSubmitterCorbaDef {
  public:
    // Declarations for this interface type.
    typedef IMmsJobRequestSubmitterCorbaDef_ptr _ptr_type;
    typedef IMmsJobRequestSubmitterCorbaDef_var _var_type;

    static _ptr_type _duplicate(_ptr_type);
    static _ptr_type _narrow(::CORBA::Object_ptr);
    static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);
    
    static _ptr_type _nil();

    static inline void _marshalObjRef(_ptr_type, cdrStream&);

    static inline _ptr_type _unmarshalObjRef(cdrStream& s) {
      omniObjRef* o = omniObjRef::_unMarshal(_PD_repoId,s);
      if (o)
        return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
      else
        return _nil();
    }

    static _core_attr const char* _PD_repoId;

    // Other IDL defined within this scope.
    
  };

  class _objref_IMmsJobRequestSubmitterCorbaDef :
    public virtual ::CORBA::Object,
    public virtual omniObjRef
  {
  public:
    JobRequestDetailCorbaDef* getDataFromAlarm(const char* alarmUID, ::CORBA::ULong alarmLocationKey, const char* sessionID);
    JobRequestDetailCorbaDef* getDataFromSymbol(const char* entityName, const char* sessionID);
    void submitJobRequest(const ::TA_Base_Bus::JobRequestDetailCorbaDef& jobRequest, const char* sessionID);

    inline _objref_IMmsJobRequestSubmitterCorbaDef()  { _PR_setobj(0); }  // nil
    _objref_IMmsJobRequestSubmitterCorbaDef(omniIOR*, omniIdentity*);

  protected:
    virtual ~_objref_IMmsJobRequestSubmitterCorbaDef();

    
  private:
    virtual void* _ptrToObjRef(const char*);

    _objref_IMmsJobRequestSubmitterCorbaDef(const _objref_IMmsJobRequestSubmitterCorbaDef&);
    _objref_IMmsJobRequestSubmitterCorbaDef& operator = (const _objref_IMmsJobRequestSubmitterCorbaDef&);
    // not implemented

    friend class IMmsJobRequestSubmitterCorbaDef;
  };

  class _pof_IMmsJobRequestSubmitterCorbaDef : public _OMNI_NS(proxyObjectFactory) {
  public:
    inline _pof_IMmsJobRequestSubmitterCorbaDef() : _OMNI_NS(proxyObjectFactory)(IMmsJobRequestSubmitterCorbaDef::_PD_repoId) {}
    virtual ~_pof_IMmsJobRequestSubmitterCorbaDef();

    virtual omniObjRef* newObjRef(omniIOR*,omniIdentity*);
    virtual _CORBA_Boolean is_a(const char*) const;
  };

  class _impl_IMmsJobRequestSubmitterCorbaDef :
    public virtual omniServant
  {
  public:
    virtual ~_impl_IMmsJobRequestSubmitterCorbaDef();

    virtual JobRequestDetailCorbaDef* getDataFromAlarm(const char* alarmUID, ::CORBA::ULong alarmLocationKey, const char* sessionID) = 0;
    virtual JobRequestDetailCorbaDef* getDataFromSymbol(const char* entityName, const char* sessionID) = 0;
    virtual void submitJobRequest(const ::TA_Base_Bus::JobRequestDetailCorbaDef& jobRequest, const char* sessionID) = 0;
    
  public:  // Really protected, workaround for xlC
    virtual _CORBA_Boolean _dispatch(omniCallHandle&);

  private:
    virtual void* _ptrToInterface(const char*);
    virtual const char* _mostDerivedRepoId();
    
  };


  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_IMmsJobRequestSubmitterCorbaDef;

_CORBA_MODULE_END



_CORBA_MODULE POA_TA_Base_Bus
_CORBA_MODULE_BEG

  class IMmsJobRequestSubmitterCorbaDef :
    public virtual TA_Base_Bus::_impl_IMmsJobRequestSubmitterCorbaDef,
    public virtual ::PortableServer::ServantBase
  {
  public:
    virtual ~IMmsJobRequestSubmitterCorbaDef();

    inline ::TA_Base_Bus::IMmsJobRequestSubmitterCorbaDef_ptr _this() {
      return (::TA_Base_Bus::IMmsJobRequestSubmitterCorbaDef_ptr) _do_this(::TA_Base_Bus::IMmsJobRequestSubmitterCorbaDef::_PD_repoId);
    }
  };

_CORBA_MODULE_END



_CORBA_MODULE OBV_TA_Base_Bus
_CORBA_MODULE_BEG

_CORBA_MODULE_END





#undef _core_attr
#undef _dyn_attr

inline void operator >>=(TA_Base_Bus::ESubmissionDeniedError _e, cdrStream& s) {
  ::operator>>=((::CORBA::ULong)_e, s);
}

inline void operator <<= (TA_Base_Bus::ESubmissionDeniedError& _e, cdrStream& s) {
  ::CORBA::ULong _0RL_e;
  ::operator<<=(_0RL_e,s);
  if (_0RL_e <= TA_Base_Bus::SUBMISSIONDENIED_NO_DETERMINE_INHIBITION_STATE) {
    _e = (TA_Base_Bus::ESubmissionDeniedError) _0RL_e;
  }
  else {
    OMNIORB_THROW(MARSHAL,_OMNI_NS(MARSHAL_InvalidEnumValue),
                  (::CORBA::CompletionStatus)s.completion());
  }
}

void operator<<=(::CORBA::Any& _a, TA_Base_Bus::ESubmissionDeniedError _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, TA_Base_Bus::ESubmissionDeniedError& _s);

inline void operator >>=(TA_Base_Bus::EDependencyFailureError _e, cdrStream& s) {
  ::operator>>=((::CORBA::ULong)_e, s);
}

inline void operator <<= (TA_Base_Bus::EDependencyFailureError& _e, cdrStream& s) {
  ::CORBA::ULong _0RL_e;
  ::operator<<=(_0RL_e,s);
  if (_0RL_e <= TA_Base_Bus::DEPENDENCYFAILURE_NO_SESSION) {
    _e = (TA_Base_Bus::EDependencyFailureError) _0RL_e;
  }
  else {
    OMNIORB_THROW(MARSHAL,_OMNI_NS(MARSHAL_InvalidEnumValue),
                  (::CORBA::CompletionStatus)s.completion());
  }
}

void operator<<=(::CORBA::Any& _a, TA_Base_Bus::EDependencyFailureError _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, TA_Base_Bus::EDependencyFailureError& _s);

void operator<<=(::CORBA::Any& _a, const TA_Base_Bus::SubmissionDenied& _s);
void operator<<=(::CORBA::Any& _a, const TA_Base_Bus::SubmissionDenied* _sp);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const TA_Base_Bus::SubmissionDenied*& _sp);

void operator<<=(::CORBA::Any& _a, const TA_Base_Bus::DependencyFailure& _s);
void operator<<=(::CORBA::Any& _a, const TA_Base_Bus::DependencyFailure* _sp);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const TA_Base_Bus::DependencyFailure*& _sp);

void operator<<=(::CORBA::Any& _a, const TA_Base_Bus::InvalidArg& _s);
void operator<<=(::CORBA::Any& _a, const TA_Base_Bus::InvalidArg* _sp);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const TA_Base_Bus::InvalidArg*& _sp);

void operator<<=(::CORBA::Any& _a, TA_Base_Bus::IMmsJobRequestSubmitterCorbaDef_ptr _s);
void operator<<=(::CORBA::Any& _a, TA_Base_Bus::IMmsJobRequestSubmitterCorbaDef_ptr* _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, TA_Base_Bus::IMmsJobRequestSubmitterCorbaDef_ptr& _s);



inline void
TA_Base_Bus::IMmsJobRequestSubmitterCorbaDef::_marshalObjRef(::TA_Base_Bus::IMmsJobRequestSubmitterCorbaDef_ptr obj, cdrStream& s) {
  omniObjRef::_marshal(obj->_PR_getobj(),s);
}




#ifdef   USE_stub_in_nt_dll_NOT_DEFINED_IMmsJobRequestSubmitterCorbaDef
# undef  USE_stub_in_nt_dll
# undef  USE_stub_in_nt_dll_NOT_DEFINED_IMmsJobRequestSubmitterCorbaDef
#endif
#ifdef   USE_core_stub_in_nt_dll_NOT_DEFINED_IMmsJobRequestSubmitterCorbaDef
# undef  USE_core_stub_in_nt_dll
# undef  USE_core_stub_in_nt_dll_NOT_DEFINED_IMmsJobRequestSubmitterCorbaDef
#endif
#ifdef   USE_dyn_stub_in_nt_dll_NOT_DEFINED_IMmsJobRequestSubmitterCorbaDef
# undef  USE_dyn_stub_in_nt_dll
# undef  USE_dyn_stub_in_nt_dll_NOT_DEFINED_IMmsJobRequestSubmitterCorbaDef
#endif

#endif  // __IMmsJobRequestSubmitterCorbaDef_hh__

